diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
index 2f47b2a..544f699 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
@@ -20554,20 +20554,22 @@ function finishConcurrentRender(root, exitStatus, lanes) {
 
         var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
 
-        if (_msUntilTimeout > 10) {
-          // Instead of committing the fallback immediately, wait for more data
-          // to arrive.
-          root.timeoutHandle = scheduleTimeout(
-            commitRoot.bind(
-              null,
-              root,
-              workInProgressRootRecoverableErrors,
-              workInProgressTransitions
-            ),
-            _msUntilTimeout
-          );
-          break;
-        }
+        // if (_msUntilTimeout > 10) {
+        //   // Instead of committing the fallback immediately, wait for more data
+        //   // to arrive.
+        //   root.timeoutHandle = scheduleTimeout(
+        //     () => {
+        //       console.log('fabricRN scheduled commitRoot')
+        //       commitRoot(
+        //         root,
+        //         workInProgressRootRecoverableErrors,
+        //         workInProgressTransitions
+        //       )
+        //     },
+        //     _msUntilTimeout
+        //   );
+        //   break;
+        // }
       } // Commit the placeholder.
 
       commitRoot(
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
index 7821c74..8f74b38 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
@@ -6702,18 +6702,18 @@ function performConcurrentWorkOnRoot(root, didTimeout) {
               : 4320 > lanes
               ? 4320
               : 1960 * ceil(lanes / 1960)) - lanes;
-          if (10 < lanes) {
-            root.timeoutHandle = scheduleTimeout(
-              commitRoot.bind(
-                null,
-                root,
-                workInProgressRootRecoverableErrors,
-                workInProgressTransitions
-              ),
-              lanes
-            );
-            break;
-          }
+          // if (10 < lanes) {
+          //   root.timeoutHandle = scheduleTimeout(
+          //     commitRoot.bind(
+          //       null,
+          //       root,
+          //       workInProgressRootRecoverableErrors,
+          //       workInProgressTransitions
+          //     ),
+          //     lanes
+          //   );
+          //   break;
+          // }
           commitRoot(
             root,
             workInProgressRootRecoverableErrors,