diff --git a/node_modules/expo/scripts/autolinking.gradle b/node_modules/expo/scripts/autolinking.gradle
index 0505395..08098e0 100644
--- a/node_modules/expo/scripts/autolinking.gradle
+++ b/node_modules/expo/scripts/autolinking.gradle
@@ -1,2 +1,3 @@
 def autolinkingPath = ["node", "--print", "require.resolve('expo-modules-autolinking/package.json')"].execute(null, rootDir).text.trim()
-apply from: new File(autolinkingPath, "../scripts/android/autolinking_implementation.gradle");
+
+apply from: hasProperty("reactNativeProject") ? file('../../expo-modules-autolinking/scripts/android/autolinking_implementation.gradle') : new File(autolinkingPath, "../scripts/android/autolinking_implementation.gradle");
diff --git a/node_modules/expo/scripts/autolinking.rb b/node_modules/expo/scripts/autolinking.rb
index 0617de5..584364f 100644
--- a/node_modules/expo/scripts/autolinking.rb
+++ b/node_modules/expo/scripts/autolinking.rb
@@ -2,13 +2,14 @@ require 'json'
 require 'pathname'
 require 'colored2' # dependency of CocoaPods
 
-require File.join(File.dirname(`node --print "require.resolve('expo-modules-autolinking/package.json')"`), "scripts/ios/autolinking_manager")
-require File.join(File.dirname(`node --print "require.resolve('expo-modules-autolinking/package.json')"`), "scripts/ios/xcode_env_generator")
-require File.join(File.dirname(`node --print "require.resolve('expo-modules-autolinking/package.json')"`), "scripts/ios/react_import_patcher")
+AUTOLINKING_PATH = ENV['REACT_NATIVE_DIR'] ? `node --print "require.resolve('#{ENV['REACT_NATIVE_DIR']}/node_modules/expo-modules-autolinking/package.json')"` : `node --print "require.resolve('expo-modules-autolinking/package.json')"`
+
+require File.join(File.dirname(AUTOLINKING_PATH), "scripts/ios/autolinking_manager")
+require File.join(File.dirname(AUTOLINKING_PATH), "scripts/ios/xcode_env_generator")
+require File.join(File.dirname(AUTOLINKING_PATH), "scripts/ios/react_import_patcher")
 
 def use_expo_modules!(options = {})
   # When run from the Podfile, `self` points to Pod::Podfile object
-
   if @current_target_definition.autolinking_manager.present?
     Pod::UI.message 'Expo modules are already being used in this target definition'.red
     return
