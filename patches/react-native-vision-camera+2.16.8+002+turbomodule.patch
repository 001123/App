diff --git a/node_modules/react-native-vision-camera/README.md b/node_modules/react-native-vision-camera/README.md
index fd178a3..68883a0 100644
--- a/node_modules/react-native-vision-camera/README.md
+++ b/node_modules/react-native-vision-camera/README.md
@@ -9,7 +9,7 @@
   <br />
   <br />
   <blockquote><b>ðŸ“¸ The Camera library that sees the vision.</b></blockquote>
-  <pre align="center">npm i <a href="https://www.npmjs.com/package/react-native-vision-camera">react-native-vision-camera</a>@2<br/>npx pod-install                   </pre>
+  <pre align="center">npm i <a href="https://www.npmjs.com/package/react-native-vision-camera">react-native-vision-camera</a>@vc2<br/>npx pod-install                     </pre>
   <a align="center" href='https://ko-fi.com/F1F8CLXG' target='_blank'>
     <img height='36' style='border:0px;height:36px;' src='https://az743702.vo.msecnd.net/cdn/kofi2.png?v=0' border='0' alt='Buy Me a Coffee at ko-fi.com' />
   </a>
@@ -32,7 +32,7 @@
 
 ### V2
 
-This is the V2 branch of VisionCamera (`2.x.x` on npm). Since VisionCamera V3 (current main, `3.x.x` on npm) features a full codebase rewrite on Android and a huge refactor on the iOS codebase, I will try to provide limited support for VisionCamera V2 for a while until V3 has been tested enough to be considered fully stable.
+This is the V2 branch of VisionCamera (`2.x.x` on npm, tag: `vc2`). Since VisionCamera V3 (current main, `3.x.x` on npm, tag: `latest`) features a full codebase rewrite on Android and a huge refactor on the iOS codebase, I will try to provide limited support for VisionCamera V2 for a while until V3 has been tested enough to be considered fully stable.
 
 However, I will not provide free support for V2 anymore. I will be merging community PRs to the v2 branch if necessary as well as fixing some critical issues and releasing them, but I will not help you fix your app on v2.
 
diff --git a/node_modules/react-native-vision-camera/VisionCamera.podspec b/node_modules/react-native-vision-camera/VisionCamera.podspec
index 1773f3b..048375f 100644
--- a/node_modules/react-native-vision-camera/VisionCamera.podspec
+++ b/node_modules/react-native-vision-camera/VisionCamera.podspec
@@ -28,13 +28,13 @@ Pod::Spec.new do |s|
 
   s.pod_target_xcconfig = {
     "USE_HEADERMAP" => "YES",
-    "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_TARGET_SRCROOT)\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/Headers/Private/React-Core\" ",
+    "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_TARGET_SRCROOT)\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/Headers/Private/React-Core\" \"${PODS_ROOT}/Headers/Private/Yoga\"",
     "GCC_PREPROCESSOR_DEFINITIONS[config=Release]" => "$(inherited) NDEBUG=1"
   }
   s.compiler_flags = folly_compiler_flags + ' ' + boost_compiler_flags
   s.xcconfig = {
     "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-    "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/glog\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-hermes\" \"${PODS_ROOT}/Headers/Public/hermes-engine\"",
+    "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/glog\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-hermes\" \"${PODS_ROOT}/Headers/Public/hermes-engine\" \"${PODS_ROOT}/Headers/Private/Yoga\"",
     "OTHER_CFLAGS" => "$(inherited)" + " " + folly_flags
   }
 
@@ -43,13 +43,9 @@ Pod::Spec.new do |s|
   # All source files that should be publicly visible
   # Note how this does not include headers, since those can nameclash.
   s.source_files = [
+    "ios/VisionCamera.h",
     "ios/**/*.{m,mm,swift}",
     "ios/CameraBridge.h",
-    "ios/Frame Processor/Frame.h",
-    "ios/Frame Processor/FrameProcessorCallback.h",
-    "ios/Frame Processor/FrameProcessorRuntimeManager.h",
-    "ios/Frame Processor/FrameProcessorPluginRegistry.h",
-    "ios/Frame Processor/FrameProcessorPlugin.h",
     "ios/React Utils/RCTBridge+runOnJS.h",
     "ios/React Utils/JSConsoleHelper.h",
     "cpp/**/*.{cpp}",
@@ -65,4 +61,20 @@ Pod::Spec.new do |s|
   s.dependency "React-callinvoker"
   s.dependency "React"
   s.dependency "React-Core"
+  
+  if ENV['RCT_NEW_ARCH_ENABLED'] == '1' then
+      s.compiler_flags = folly_compiler_flags + " -DRCT_NEW_ARCH_ENABLED=1"
+      s.pod_target_xcconfig    = {
+          "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/glog\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-hermes\" \"${PODS_ROOT}/Headers/Public/hermes-engine\"",
+          "OTHER_CPLUSPLUSFLAGS" => "-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1",
+          "OTHER_SWIFT_FLAGS" => "-DRCT_NEW_ARCH_ENABLED"
+      }
+
+      s.dependency "React-RCTFabric"
+      s.dependency "React-Codegen"
+      s.dependency "RCT-Folly"
+      s.dependency "RCTRequired"
+      s.dependency "RCTTypeSafety"
+      s.dependency "ReactCommon/turbomodule/core"
+  end
 end
diff --git a/node_modules/react-native-vision-camera/android/build.gradle b/node_modules/react-native-vision-camera/android/build.gradle
index ddfa243..686dba3 100644
--- a/node_modules/react-native-vision-camera/android/build.gradle
+++ b/node_modules/react-native-vision-camera/android/build.gradle
@@ -128,6 +128,10 @@ if (ENABLE_FRAME_PROCESSORS) {
   }
 }
 
+if (isNewArchitectureEnabled()) {
+    apply plugin: "com.facebook.react"
+}
+
 android {
   compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
   buildToolsVersion getExtOrDefault('buildToolsVersion')
@@ -158,9 +162,6 @@ android {
     }
   }
 
-  dexOptions {
-    javaMaxHeapSize "4g"
-  }
 
   if (ENABLE_FRAME_PROCESSORS) {
     externalNativeBuild {
@@ -193,6 +194,10 @@ android {
     }
   }
   
+  buildFeatures {
+    viewBinding = true
+  }
+
   lintOptions {
     disable 'GradleCompatible'
   }
@@ -205,6 +210,20 @@ android {
     extractHeaders
     extractJNI
   }
+
+    sourceSets {
+        main {
+            if (isNewArchitectureEnabled()) {
+                java.srcDirs += [
+                        "src/newarch",
+                        // This is needed to build Kotlin project with NewArch enabled
+                        "${project.buildDir}/generated/source/codegen/java"
+                ]
+            } else {
+                java.srcDirs += ["src/oldarch"]
+            }
+        }
+    }
 }
 
 repositories {
@@ -635,3 +654,11 @@ if (ENABLE_FRAME_PROCESSORS) {
     }
   }
 }
+
+if (isNewArchitectureEnabled()) {
+    react {
+        jsRootDir = file("../src/")
+        libraryName = "CameraModule"
+        codegenJavaPackageName = "com.mrousavy.camera"
+    }
+}
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraEvent.java b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraEvent.java
new file mode 100644
index 0000000..f2475d8
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraEvent.java
@@ -0,0 +1,31 @@
+package com.mrousavy.camera;
+
+import com.facebook.react.bridge.Arguments;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.uimanager.events.Event;
+
+import javax.annotation.Nullable;
+
+public class CameraEvent extends Event {
+
+    private String name;
+    private WritableMap data;
+
+    public CameraEvent(int viewId, String name, WritableMap data){
+        super(viewId);
+        this.name = name;
+        this.data = data;
+    }
+
+    @Override
+    public String getEventName() {
+        return name;
+    }
+
+
+    @Nullable
+    @Override
+    protected WritableMap getEventData() {
+        return data; // Has to be a map, but since we specified null in codegen it can be empty
+    }
+}
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraPackage.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraPackage.kt
index dbbd00f..c7234c8 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraPackage.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraPackage.kt
@@ -1,11 +1,13 @@
 package com.mrousavy.camera
 
-import com.facebook.react.ReactPackage
+import com.facebook.react.TurboReactPackage
 import com.facebook.react.bridge.NativeModule
 import com.facebook.react.bridge.ReactApplicationContext
+import com.facebook.react.module.model.ReactModuleInfo
+import com.facebook.react.module.model.ReactModuleInfoProvider
 import com.facebook.react.uimanager.ViewManager
 
-class CameraPackage : ReactPackage {
+class CameraPackage : TurboReactPackage() {
   override fun createNativeModules(reactContext: ReactApplicationContext): List<NativeModule> {
     return listOf(CameraViewModule(reactContext))
   }
@@ -13,4 +15,26 @@ class CameraPackage : ReactPackage {
   override fun createViewManagers(reactContext: ReactApplicationContext): List<ViewManager<*, *>> {
     return listOf(CameraViewManager(reactContext))
   }
+
+  override fun getModule(name: String, reactContext: ReactApplicationContext): NativeModule? {
+    if (name.equals(CameraModule.NAME)) {
+      return  CameraModule(reactContext);
+    } else {
+      return null;
+    }
+  }
+
+  override fun getReactModuleInfoProvider() = ReactModuleInfoProvider {
+    mapOf(
+      CameraModule.NAME to ReactModuleInfo(
+        CameraModule.NAME,
+        CameraModule.NAME,
+        false, // canOverrideExistingModule
+        false, // needsEagerInit
+        true, // hasConstants
+        false, // isCxxModule
+        true // isTurboModule
+      )
+    )
+  }
 }
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView+Events.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView+Events.kt
index 3fdf42a..ad927b4 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView+Events.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView+Events.kt
@@ -4,13 +4,16 @@ import android.util.Log
 import com.facebook.react.bridge.Arguments
 import com.facebook.react.bridge.ReactContext
 import com.facebook.react.bridge.WritableMap
-import com.facebook.react.uimanager.events.RCTEventEmitter
+import com.facebook.react.uimanager.UIManagerHelper
+
 
 fun CameraView.invokeOnInitialized() {
   Log.i(CameraView.TAG, "invokeOnInitialized()")
 
-  val reactContext = context as ReactContext
-  reactContext.getJSModule(RCTEventEmitter::class.java).receiveEvent(id, "cameraInitialized", null)
+  UIManagerHelper.getEventDispatcherForReactTag(
+    context as ReactContext,
+    id
+  )?.dispatchEvent(CameraEvent(id, "cameraInitialized", Arguments.createMap()))
 }
 
 fun CameraView.invokeOnError(error: Throwable) {
@@ -27,8 +30,11 @@ fun CameraView.invokeOnError(error: Throwable) {
   cameraError.cause?.let { cause ->
     event.putMap("cause", errorToMap(cause))
   }
-  val reactContext = context as ReactContext
-  reactContext.getJSModule(RCTEventEmitter::class.java).receiveEvent(id, "cameraError", event)
+
+  UIManagerHelper.getEventDispatcherForReactTag(
+    context as ReactContext,
+    id
+  )?.dispatchEvent(CameraEvent(id, "cameraError", event))
 }
 
 fun CameraView.invokeOnFrameProcessorPerformanceSuggestionAvailable(currentFps: Double, suggestedFps: Double) {
@@ -38,14 +44,20 @@ fun CameraView.invokeOnFrameProcessorPerformanceSuggestionAvailable(currentFps:
   val type = if (suggestedFps > currentFps) "can-use-higher-fps" else "should-use-lower-fps"
   event.putString("type", type)
   event.putDouble("suggestedFrameProcessorFps", suggestedFps)
-  val reactContext = context as ReactContext
-  reactContext.getJSModule(RCTEventEmitter::class.java).receiveEvent(id, "cameraPerformanceSuggestionAvailable", event)
+
+  UIManagerHelper.getEventDispatcherForReactTag(
+    context as ReactContext,
+    id
+  )?.dispatchEvent(CameraEvent(id, "cameraPerformanceSuggestionAvailable", event))
 }
 
 fun CameraView.invokeOnViewReady() {
   val event = Arguments.createMap()
-  val reactContext = context as ReactContext
-  reactContext.getJSModule(RCTEventEmitter::class.java).receiveEvent(id, "cameraViewReady", event)
+
+  UIManagerHelper.getEventDispatcherForReactTag(
+    context as ReactContext,
+    id
+  )?.dispatchEvent(CameraEvent(id, "cameraViewReady", event))
 }
 
 private fun errorToMap(error: Throwable): WritableMap {
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView.kt
index 3a5abae..7252adf 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraView.kt
@@ -24,7 +24,6 @@ import androidx.lifecycle.*
 import com.facebook.jni.HybridData
 import com.facebook.proguard.annotations.DoNotStrip
 import com.facebook.react.bridge.*
-import com.facebook.react.uimanager.events.RCTEventEmitter
 import com.mrousavy.camera.frameprocessor.FrameProcessorPerformanceDataCollector
 import com.mrousavy.camera.frameprocessor.FrameProcessorRuntimeManager
 import com.mrousavy.camera.utils.*
@@ -304,6 +303,11 @@ class CameraView(context: Context, private val frameProcessorThread: ExecutorSer
   override fun onDetachedFromWindow() {
     super.onDetachedFromWindow()
     updateLifecycleState()
+
+    coroutineScope.launch {
+      val cameraProvider = ProcessCameraProvider.getInstance(reactContext).await()
+      cameraProvider.unbindAll()
+    }
   }
 
   /**
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewManager.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewManager.kt
index 35e01e4..7651577 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewManager.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewManager.kt
@@ -3,16 +3,19 @@ package com.mrousavy.camera
 import com.facebook.react.bridge.ReactApplicationContext
 import com.facebook.react.bridge.ReadableMap
 import com.facebook.react.common.MapBuilder
-import com.facebook.react.uimanager.ViewGroupManager
 import com.facebook.react.uimanager.ThemedReactContext
 import com.facebook.react.uimanager.annotations.ReactProp
 
 @Suppress("unused")
-class CameraViewManager(reactContext: ReactApplicationContext) : ViewGroupManager<CameraView>() {
+class CameraViewManager(reactContext: ReactApplicationContext) : VisionCameraManagerSpec<CameraView>() {
+
+  lateinit var cameraViewModule: CameraModule;
 
   public override fun createViewInstance(context: ThemedReactContext): CameraView {
-    val cameraViewModule = context.getNativeModule(CameraViewModule::class.java)!!
-    return CameraView(context, cameraViewModule.frameProcessorThread)
+    cameraViewModule = context.getNativeModule(CameraModule::class.java)!!
+    val view = CameraView(context, cameraViewModule.frameProcessorThread)
+    cameraViewModule.viewInstance = view
+    return view
   }
 
   override fun onAfterUpdateTransaction(view: CameraView) {
@@ -24,10 +27,10 @@ class CameraViewManager(reactContext: ReactApplicationContext) : ViewGroupManage
 
   override fun getExportedCustomDirectEventTypeConstants(): MutableMap<String, Any>? {
     return MapBuilder.builder<String, Any>()
-      .put("cameraViewReady", MapBuilder.of("registrationName", "onViewReady"))
-      .put("cameraInitialized", MapBuilder.of("registrationName", "onInitialized"))
-      .put("cameraError", MapBuilder.of("registrationName", "onError"))
-      .put("cameraPerformanceSuggestionAvailable", MapBuilder.of("registrationName", "onFrameProcessorPerformanceSuggestionAvailable"))
+      .put("topCameraViewReady", MapBuilder.of("registrationName", "onViewReady"))
+      .put("topCameraInitialized", MapBuilder.of("registrationName", "onInitialized"))
+      .put("topCameraError", MapBuilder.of("registrationName", "onError"))
+      .put("topCameraPerformanceSuggestionAvailable", MapBuilder.of("registrationName", "onFrameProcessorPerformanceSuggestionAvailable"))
       .build()
   }
 
@@ -36,63 +39,63 @@ class CameraViewManager(reactContext: ReactApplicationContext) : ViewGroupManage
   }
 
   @ReactProp(name = "cameraId")
-  fun setCameraId(view: CameraView, cameraId: String) {
-    if (view.cameraId != cameraId)
-      addChangedPropToTransaction(view, "cameraId")
-    view.cameraId = cameraId
+  override fun setCameraId(view: CameraView?, cameraId: String?) {
+    if (view?.cameraId != cameraId)
+      addChangedPropToTransaction(view!!, "cameraId")
+    view?.cameraId = cameraId
   }
 
   @ReactProp(name = "photo")
-  fun setPhoto(view: CameraView, photo: Boolean?) {
-    if (view.photo != photo)
-      addChangedPropToTransaction(view, "photo")
-    view.photo = photo
+  override fun setPhoto(view: CameraView?, photo: Boolean)  {
+    if (view?.photo != photo)
+      addChangedPropToTransaction(view!!, "photo")
+    view?.photo = photo
   }
 
   @ReactProp(name = "video")
-  fun setVideo(view: CameraView, video: Boolean?) {
-    if (view.video != video)
-      addChangedPropToTransaction(view, "video")
-    view.video = video
+   override fun setVideo(view: CameraView?, video: Boolean)  {
+    if (view?.video != video)
+      addChangedPropToTransaction(view!!, "video")
+    view?.video = video
   }
 
   @ReactProp(name = "audio")
-  fun setAudio(view: CameraView, audio: Boolean?) {
-    if (view.audio != audio)
-      addChangedPropToTransaction(view, "audio")
-    view.audio = audio
+  override fun setAudio(view: CameraView?, audio: Boolean) {
+    if (view?.audio != audio)
+      addChangedPropToTransaction(view!!, "audio")
+    view?.audio = audio
   }
 
   @ReactProp(name = "enableFrameProcessor")
-  fun setEnableFrameProcessor(view: CameraView, enableFrameProcessor: Boolean) {
-    if (view.enableFrameProcessor != enableFrameProcessor)
+  override fun setEnableFrameProcessor(view: CameraView, enableFrameProcessor: Boolean) {
+    if (view?.enableFrameProcessor != enableFrameProcessor)
       addChangedPropToTransaction(view, "enableFrameProcessor")
-    view.enableFrameProcessor = enableFrameProcessor
+    view?.enableFrameProcessor = enableFrameProcessor
   }
 
   @ReactProp(name = "enableDepthData")
-  fun setEnableDepthData(view: CameraView, enableDepthData: Boolean) {
-    if (view.enableDepthData != enableDepthData)
+  override fun setEnableDepthData(view: CameraView, enableDepthData: Boolean) {
+    if (view?.enableDepthData != enableDepthData)
       addChangedPropToTransaction(view, "enableDepthData")
-    view.enableDepthData = enableDepthData
+    view?.enableDepthData = enableDepthData
   }
 
   @ReactProp(name = "enableHighQualityPhotos")
-  fun setEnableHighQualityPhotos(view: CameraView, enableHighQualityPhotos: Boolean?) {
-    if (view.enableHighQualityPhotos != enableHighQualityPhotos)
-      addChangedPropToTransaction(view, "enableHighQualityPhotos")
-    view.enableHighQualityPhotos = enableHighQualityPhotos
+  override fun setEnableHighQualityPhotos(view: CameraView?, enableHighQualityPhotos: Boolean) {
+    if (view?.enableHighQualityPhotos != enableHighQualityPhotos)
+      addChangedPropToTransaction(view!!, "enableHighQualityPhotos")
+    view?.enableHighQualityPhotos = enableHighQualityPhotos
   }
 
   @ReactProp(name = "enablePortraitEffectsMatteDelivery")
-  fun setEnablePortraitEffectsMatteDelivery(view: CameraView, enablePortraitEffectsMatteDelivery: Boolean) {
+  override fun setEnablePortraitEffectsMatteDelivery(view: CameraView, enablePortraitEffectsMatteDelivery: Boolean) {
     if (view.enablePortraitEffectsMatteDelivery != enablePortraitEffectsMatteDelivery)
       addChangedPropToTransaction(view, "enablePortraitEffectsMatteDelivery")
     view.enablePortraitEffectsMatteDelivery = enablePortraitEffectsMatteDelivery
   }
 
   @ReactProp(name = "format")
-  fun setFormat(view: CameraView, format: ReadableMap?) {
+  override fun setFormat(view: CameraView, format: ReadableMap?) {
     if (view.format != format)
       addChangedPropToTransaction(view, "format")
     view.format = format
@@ -102,56 +105,56 @@ class CameraViewManager(reactContext: ReactApplicationContext) : ViewGroupManage
   // We're treating -1 as "null" here, because when I make the fps parameter
   // of type "Int?" the react bridge throws an error.
   @ReactProp(name = "fps", defaultInt = -1)
-  fun setFps(view: CameraView, fps: Int) {
+  override fun setFps(view: CameraView, fps: Int) {
     if (view.fps != fps)
       addChangedPropToTransaction(view, "fps")
     view.fps = if (fps > 0) fps else null
   }
 
   @ReactProp(name = "frameProcessorFps", defaultDouble = 1.0)
-  fun setFrameProcessorFps(view: CameraView, frameProcessorFps: Double) {
-    if (view.frameProcessorFps != frameProcessorFps)
-      addChangedPropToTransaction(view, "frameProcessorFps")
-    view.frameProcessorFps = frameProcessorFps
+  override fun setFrameProcessorFps(view: CameraView?, frameProcessorFps: Double)  {
+    if (view?.frameProcessorFps != frameProcessorFps)
+      addChangedPropToTransaction(view!!, "frameProcessorFps")
+    view?.frameProcessorFps = frameProcessorFps
   }
 
   @ReactProp(name = "hdr")
-  fun setHdr(view: CameraView, hdr: Boolean?) {
-    if (view.hdr != hdr)
-      addChangedPropToTransaction(view, "hdr")
-    view.hdr = hdr
+  override fun setHdr(view: CameraView?, hdr: Boolean) {
+    if (view?.hdr != hdr)
+      addChangedPropToTransaction(view!!, "hdr")
+    view?.hdr = hdr
   }
 
   @ReactProp(name = "lowLightBoost")
-  fun setLowLightBoost(view: CameraView, lowLightBoost: Boolean?) {
-    if (view.lowLightBoost != lowLightBoost)
-      addChangedPropToTransaction(view, "lowLightBoost")
-    view.lowLightBoost = lowLightBoost
+  override fun setLowLightBoost(view: CameraView?, lowLightBoost: Boolean) {
+    if (view?.lowLightBoost != lowLightBoost)
+      addChangedPropToTransaction(view!!, "lowLightBoost")
+    view?.lowLightBoost = lowLightBoost
   }
 
   @ReactProp(name = "colorSpace")
-  fun setColorSpace(view: CameraView, colorSpace: String?) {
-    if (view.colorSpace != colorSpace)
+  override fun setColorSpace(view: CameraView, colorSpace: String?) {
+    if (view?.colorSpace != colorSpace)
       addChangedPropToTransaction(view, "colorSpace")
-    view.colorSpace = colorSpace
+    view?.colorSpace = colorSpace
   }
 
   @ReactProp(name = "isActive")
-  fun setIsActive(view: CameraView, isActive: Boolean) {
+  override fun setIsActive(view: CameraView, isActive: Boolean) {
     if (view.isActive != isActive)
       addChangedPropToTransaction(view, "isActive")
     view.isActive = isActive
   }
 
   @ReactProp(name = "torch")
-  fun setTorch(view: CameraView, torch: String) {
-    if (view.torch != torch)
-      addChangedPropToTransaction(view, "torch")
-    view.torch = torch
+  override fun setTorch(view: CameraView?, torch: String?)  {
+    if (view?.torch != torch)
+      addChangedPropToTransaction(view!!, "torch")
+    view?.torch = torch!!
   }
 
   @ReactProp(name = "zoom")
-  fun setZoom(view: CameraView, zoom: Double) {
+  override fun setZoom(view: CameraView, zoom: Double) {
     val zoomFloat = zoom.toFloat()
     if (view.zoom != zoomFloat)
       addChangedPropToTransaction(view, "zoom")
@@ -159,17 +162,23 @@ class CameraViewManager(reactContext: ReactApplicationContext) : ViewGroupManage
   }
 
   @ReactProp(name = "enableZoomGesture")
-  fun setEnableZoomGesture(view: CameraView, enableZoomGesture: Boolean) {
+  override fun setEnableZoomGesture(view: CameraView, enableZoomGesture: Boolean) {
     if (view.enableZoomGesture != enableZoomGesture)
       addChangedPropToTransaction(view, "enableZoomGesture")
     view.enableZoomGesture = enableZoomGesture
   }
 
   @ReactProp(name = "orientation")
-  fun setOrientation(view: CameraView, orientation: String) {
-    if (view.orientation != orientation)
-      addChangedPropToTransaction(view, "orientation")
-    view.orientation = orientation
+  override fun setOrientation(view: CameraView?, orientation: String?) {
+    if (view?.orientation != orientation)
+      addChangedPropToTransaction(view!!, "orientation")
+    view?.orientation = orientation
+  }
+
+  override fun setVideoStabilizationMode(view: CameraView?, value: String?) {
+  }
+
+  override fun setPreset(view: CameraView?, value: String?) {
   }
 
   companion object {
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
index fb85308..b5a5b35 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
@@ -91,14 +91,24 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
 
   @ReactMethod
   fun takePhoto(viewTag: Int, options: ReadableMap, promise: Promise) {
+    coroutineScope.launch {
+        withPromise(promise) {
+          val view = findCameraView(viewTag)
+          view.takePhoto(options)
+        }
+    }
+  }
+
+  // Fabric implementation
+  fun takePhoto(view: CameraView, options: ReadableMap, promise: Promise) {
     coroutineScope.launch {
       withPromise(promise) {
-        val view = findCameraView(viewTag)
         view.takePhoto(options)
       }
     }
   }
 
+
   @Suppress("unused")
   @ReactMethod
   fun takeSnapshot(viewTag: Int, options: ReadableMap, promise: Promise) {
@@ -110,6 +120,14 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
     }
   }
 
+  fun takeSnapshot(view: CameraView, options: ReadableMap, promise: Promise) {
+    coroutineScope.launch {
+      withPromise(promise) {
+        view.takeSnapshot(options)
+      }
+    }
+  }
+
   // TODO: startRecording() cannot be awaited, because I can't have a Promise and a onRecordedCallback in the same function. Hopefully TurboModules allows that
   @ReactMethod
   fun startRecording(viewTag: Int, options: ReadableMap, onRecordCallback: Callback) {
@@ -127,6 +145,20 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
     }
   }
 
+  fun startRecording(view: CameraView, options: ReadableMap, onRecordCallback: Callback) {
+    coroutineScope.launch {
+      try {
+        view.startRecording(options, onRecordCallback)
+      } catch (error: CameraError) {
+        val map = makeErrorMap("${error.domain}/${error.id}", error.message, error)
+        onRecordCallback(null, map)
+      } catch (error: Throwable) {
+        val map = makeErrorMap("capture/unknown", "An unknown error occurred while trying to start a video recording!", error)
+        onRecordCallback(null, map)
+      }
+    }
+  }
+
   @ReactMethod
   fun pauseRecording(viewTag: Int, promise: Promise) {
     withPromise(promise) {
@@ -136,6 +168,13 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
     }
   }
 
+  fun pauseRecording(view: CameraView, promise: Promise) {
+    withPromise(promise) {
+      view.pauseRecording()
+      return@withPromise null
+    }
+  }
+
   @ReactMethod
   fun resumeRecording(viewTag: Int, promise: Promise) {
     withPromise(promise) {
@@ -145,6 +184,13 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
     }
   }
 
+  fun resumeRecording(view: CameraView, promise: Promise) {
+    withPromise(promise) {
+      view.resumeRecording()
+      return@withPromise null
+    }
+  }
+
   @ReactMethod
   fun stopRecording(viewTag: Int, promise: Promise) {
     withPromise(promise) {
@@ -154,14 +200,41 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
     }
   }
 
+  fun stopRecording(view: CameraView, promise: Promise) {
+    withPromise(promise) {
+      view.stopRecording()
+      return@withPromise null
+    }
+  }
+
   @ReactMethod
-  fun focus(viewTag: Int, point: ReadableMap, promise: Promise) {
+  fun focus(viewTag: Int, point: ReadableMap, promise: Promise?) {
     coroutineScope.launch {
-      withPromise(promise) {
+      if(promise != null){
+        withPromise(promise) {
+          val view = findCameraView(viewTag)
+          view.focus(point)
+          return@withPromise null
+        }
+      }else{
         val view = findCameraView(viewTag)
         view.focus(point)
-        return@withPromise null
       }
+
+    }
+  }
+
+  fun focus(view: CameraView, point: ReadableMap, promise: Promise?) {
+    coroutineScope.launch {
+      if(promise != null){
+        withPromise(promise) {
+          view.focus(point)
+          return@withPromise null
+        }
+      }else{
+        view.focus(point)
+      }
+
     }
   }
 
@@ -181,7 +254,7 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
 
         val cameraDevices: WritableArray = Arguments.createArray()
 
-        manager.cameraIdList.filter{ id -> id.toIntOrNull() != null }.forEach loop@{ id ->
+        manager.cameraIdList.forEach loop@{ id ->
           val cameraSelector = CameraSelector.Builder().byID(id).build()
 
           val characteristics = manager.getCameraCharacteristics(id)
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
index 48b85ca..fa9811d 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
@@ -17,11 +17,10 @@ class FrameProcessorRuntimeManager(context: ReactApplicationContext, frameProces
   companion object {
     const val TAG = "FrameProcessorRuntime"
     val Plugins: ArrayList<FrameProcessorPlugin> = ArrayList()
-    var enableFrameProcessors = true
+    var enableFrameProcessors = false
 
     init {
       try {
-        System.loadLibrary("reanimated")
         System.loadLibrary("VisionCamera")
       } catch (e: UnsatisfiedLinkError) {
         Log.w(TAG, "Failed to load Reanimated/VisionCamera C++ library. Frame Processors are disabled!")
diff --git a/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/CameraModule.java b/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/CameraModule.java
new file mode 100644
index 0000000..28b0c23
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/CameraModule.java
@@ -0,0 +1,99 @@
+package com.mrousavy.camera;
+
+import androidx.annotation.Nullable;
+
+import com.facebook.react.bridge.Callback;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.module.annotations.ReactModule;
+
+import java.util.concurrent.ExecutorService;
+
+@ReactModule(name = "CameraModule")
+public class CameraModule extends NativeCameraModuleSpec {
+    private final CameraViewModule cameraViewModule;
+
+    public CameraView getViewInstance() {
+        return viewInstance;
+    }
+
+    public void setViewInstance(CameraView viewInstance) {
+        this.viewInstance = viewInstance;
+    }
+
+    private CameraView viewInstance;
+    public CameraModule(ReactApplicationContext reactContext) {
+        super(reactContext);
+        this.cameraViewModule = new CameraViewModule(reactContext);
+    }
+
+    @Override
+    public void takePhoto(@Nullable ReadableMap options, Promise promise) {
+        cameraViewModule.takePhoto(viewInstance, options, promise);
+    }
+
+    @Override
+    public void takeSnapshot(@Nullable ReadableMap options, Promise promise) {
+        cameraViewModule.takeSnapshot(viewInstance, options, promise);
+    }
+
+    @Override
+    public void startRecording(@Nullable ReadableMap options, @Nullable Callback onRecordCallback) {
+        cameraViewModule.startRecording(viewInstance, options, onRecordCallback);
+    }
+
+    @Override
+    public void pauseRecording(Promise promise) {
+        cameraViewModule.pauseRecording(viewInstance, promise);
+    }
+
+    @Override
+    public void resumeRecording(Promise promise) {
+        cameraViewModule.resumeRecording(viewInstance, promise);
+    }
+
+    @Override
+    public void stopRecording(Promise promise) {
+        cameraViewModule.stopRecording(viewInstance, promise);
+    }
+
+    @Override
+    public void focus(ReadableMap point, Promise promise) {
+        cameraViewModule.focus(viewInstance, point, promise);
+    }
+
+    @Override
+    public void getAvailableVideoCodecs(@Nullable String fileType, Promise promise) {
+        // IOS only
+    }
+
+    @Override
+    public void getAvailableCameraDevices(Promise promise) {
+        cameraViewModule.getAvailableCameraDevices(promise);
+    }
+
+    @Override
+    public void getCameraPermissionStatus(Promise promise) {
+        cameraViewModule.getCameraPermissionStatus(promise);
+    }
+
+    @Override
+    public void getMicrophonePermissionStatus(Promise promise) {
+        cameraViewModule.getMicrophonePermissionStatus(promise);
+    }
+
+    @Override
+    public void requestCameraPermission(Promise promise) {
+        cameraViewModule.requestCameraPermission(promise);
+    }
+
+    @Override
+    public void requestMicrophonePermission(Promise promise) {
+        cameraViewModule.requestMicrophonePermission(promise);
+    }
+
+    public ExecutorService getFrameProcessorThread(){
+        return cameraViewModule.getFrameProcessorThread();
+    }
+}
diff --git a/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/VisionCameraManagerSpec.java b/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/VisionCameraManagerSpec.java
new file mode 100644
index 0000000..468bd53
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/src/newarch/com/mrousavy/camera/VisionCameraManagerSpec.java
@@ -0,0 +1,31 @@
+package com.mrousavy.camera;
+
+import android.view.View;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.SimpleViewManager;
+import com.facebook.react.uimanager.ViewManagerDelegate;
+import com.facebook.react.viewmanagers.CameraViewManagerDelegate;
+import com.facebook.react.viewmanagers.CameraViewManagerInterface;
+
+public abstract class VisionCameraManagerSpec<T extends View> extends SimpleViewManager<T> implements CameraViewManagerInterface<T> {
+  private final ViewManagerDelegate<T> mDelegate;
+
+  public VisionCameraManagerSpec() {
+    mDelegate = new CameraViewManagerDelegate<>(this);
+  }
+
+  @Nullable
+  @Override
+  protected ViewManagerDelegate<T> getDelegate() {
+    return mDelegate;
+  }
+
+  @Override
+  public void receiveCommand(@NonNull T root, String commandId, @Nullable ReadableArray args) {
+    mDelegate.receiveCommand(root, commandId, args);
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/src/oldarch/com/mrousavy/camera/VisionCameraManagerSpec.java b/node_modules/react-native-vision-camera/android/src/oldarch/com/mrousavy/camera/VisionCameraManagerSpec.java
new file mode 100644
index 0000000..f5b85e6
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/src/oldarch/com/mrousavy/camera/VisionCameraManagerSpec.java
@@ -0,0 +1,12 @@
+package com.mrousavy.camera;
+
+import android.view.View;
+
+import androidx.annotation.Nullable;
+
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.uimanager.SimpleViewManager;
+
+public abstract class VisionCameraManagerSpec<T extends View> extends SimpleViewManager<T> {
+
+}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/ios/CameraBridge.h b/node_modules/react-native-vision-camera/ios/CameraBridge.h
index de423ef..b2a92dd 100644
--- a/node_modules/react-native-vision-camera/ios/CameraBridge.h
+++ b/node_modules/react-native-vision-camera/ios/CameraBridge.h
@@ -13,17 +13,10 @@
 #import <React/RCTViewManager.h>
 #import <React/RCTUIManager.h>
 
-#import "FrameProcessorCallback.h"
-#import "FrameProcessorRuntimeManager.h"
-#import "Frame.h"
 #import "RCTBridge+runOnJS.h"
 #import "JSConsoleHelper.h"
 
-#ifdef VISION_CAMERA_DISABLE_FRAME_PROCESSORS
 static bool VISION_CAMERA_ENABLE_FRAME_PROCESSORS = false;
-#else
-static bool VISION_CAMERA_ENABLE_FRAME_PROCESSORS = true;
-#endif
 
 @interface CameraBridge: RCTViewManager
 
diff --git a/node_modules/react-native-vision-camera/ios/CameraModule.h b/node_modules/react-native-vision-camera/ios/CameraModule.h
new file mode 100644
index 0000000..e8c6c0c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/CameraModule.h
@@ -0,0 +1,15 @@
+#ifdef RCT_NEW_ARCH_ENABLED
+#import <React/RCTViewManager.h>
+#import <AVFoundation/AVCaptureAudioDataOutput.h>
+#import <AVFoundation/AVCaptureVideoDataOutput.h>
+#import "CameraNativeComponentSpec.h"
+
+
+NS_ASSUME_NONNULL_BEGIN
+
+@interface CameraModule : NSObject <NativeCameraModuleSpec>
+    +(void) setCurrentCamera:(UIView*)view;
+@end
+
+NS_ASSUME_NONNULL_END
+#endif
diff --git a/node_modules/react-native-vision-camera/ios/CameraModule.mm b/node_modules/react-native-vision-camera/ios/CameraModule.mm
new file mode 100644
index 0000000..c438459
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/CameraModule.mm
@@ -0,0 +1,111 @@
+#ifdef RCT_NEW_ARCH_ENABLED
+#import "CameraModule.h"
+#import "VisionCamera-Swift.h"
+
+static CameraView* cameraView;
+
+@implementation CameraModule
+
+RCT_EXPORT_MODULE()
+
++(void) setCurrentCamera:(UIView*)view{
+    cameraView = (CameraView*) view;
+}
+
+- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const facebook::react::ObjCTurboModule::InitParams &)params {
+    return std::make_shared<facebook::react::NativeCameraModuleSpecJSI>(params);
+}
+
+- (void)focus:(JS::NativeCameraModule::SpecFocusPoint &)point resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        NSDictionary* dictionary = @{@"x": [NSNumber numberWithDouble:point.x()], @"y": [NSNumber numberWithDouble:point.y()]};
+        [CameraViewManager focusWithPoint:dictionary  resolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)getAvailableVideoCodecs:(NSString *)fileType resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        [CameraViewManager getAvailableVideoCodecsWithFileType:fileType resolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)getMicrophonePermissionStatus:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    [CameraViewManager getMicrophonePermissionStatus:resolve reject:reject];
+}
+
+- (void)pauseRecording:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        [CameraViewManager pauseRecordingWithResolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)requestCameraPermission:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    [CameraViewManager requestCameraPermission:resolve reject:reject];
+}
+
+- (void)requestMicrophonePermission:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    [CameraViewManager requestMicrophonePermission:resolve reject:reject];
+}
+
+- (void)resumeRecording:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        [CameraViewManager resumeRecordingWithResolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)startRecording:(JS::NativeCameraModule::SpecStartRecordingOptions &)options onRecordCallback:(RCTResponseSenderBlock)onRecordCallback {
+    if(cameraView != nil){
+        NSMutableDictionary* optionsDict = [[NSMutableDictionary alloc] init]; // TODO: Convert struct to dictionary in a better way
+        if(options.fileType()){
+            [optionsDict setObject:options.fileType() forKey:@"fileType"];
+        }
+        if(options.flash()){
+            [optionsDict setObject:options.flash() forKey:@"flash"];
+        }
+        if(options.videoCodec()){
+            [optionsDict setObject:options.videoCodec() forKey:@"videoCodec"];
+        }
+        [CameraViewManager startRecordingWithOptions:optionsDict onRecordCallback:onRecordCallback view:cameraView];
+    }
+}
+
+- (void)stopRecording:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        [CameraViewManager stopRecordingWithResolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)takePhoto:(JS::NativeCameraModule::SpecTakePhotoOptions &)options resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    if(cameraView != nil){
+        NSNumber* enableAutoRedEyeReduction = options.enableAutoRedEyeReduction() ? @1 : @0; // TODO: find better way to convert optional<bool> to some objc object
+        NSNumber* enableAutoStabilization = options.enableAutoStabilization() ? @1 : @0;
+        NSNumber* enableAutoDistortionCorrection = options.enableAutoDistortionCorrection() ? @1 : @0;
+        NSNumber* skipMetadata = options.skipMetadata() ? @1 : @0;
+        
+        NSMutableDictionary* optionsDict = [[NSMutableDictionary alloc] initWithDictionary:@{@"enableAutoRedEyeReduction":enableAutoRedEyeReduction,@"enableAutoStabilization":enableAutoStabilization,@"enableAutoDistortionCorrection":enableAutoDistortionCorrection,@"skipMetadata":skipMetadata}]; // TODO: Convert struct to dictionary in a better way
+        
+        if(options.flash()){
+            [optionsDict setObject:options.flash() forKey:@"flash"];
+        }
+        if(options.qualityPrioritization()){
+            [optionsDict setObject:options.qualityPrioritization() forKey:@"qualityPrioritization"];
+        }
+        
+        [CameraViewManager takePhotoWithOptions:optionsDict resolve:resolve reject:reject view:cameraView];
+    }
+}
+
+- (void)takeSnapshot:(JS::NativeCameraModule::SpecTakeSnapshotOptions &)options resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    // DO NOTHING
+}
+
+- (void)getCameraPermissionStatus:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    [CameraViewManager getCameraPermissionStatus:resolve reject:reject];
+}
+
+- (void)getAvailableCameraDevices:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {
+    [CameraViewManager getAvailableCameraDevices:resolve reject:reject];
+}
+
+@end
+#endif
diff --git a/node_modules/react-native-vision-camera/ios/CameraView+Focus.swift b/node_modules/react-native-vision-camera/ios/CameraView+Focus.swift
index a0e4618..fc49f2d 100644
--- a/node_modules/react-native-vision-camera/ios/CameraView+Focus.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraView+Focus.swift
@@ -9,6 +9,7 @@
 import Foundation
 
 extension CameraView {
+
   func focus(point: CGPoint, promise: Promise) {
     withPromise(promise) {
       guard let device = self.videoDeviceInput?.device else {
diff --git a/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift b/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
index 0c5807c..2f4dff5 100644
--- a/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
@@ -5,7 +5,6 @@
 //  Created by Marc Rousavy on 16.12.20.
 //  Copyright Â© 2020 mrousavy. All rights reserved.
 //
-
 import AVFoundation
 
 // MARK: - CameraView + AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate
@@ -209,57 +208,26 @@ extension CameraView: AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAud
         break
       }
     }
-
-    if let frameProcessor = frameProcessorCallback, captureOutput is AVCaptureVideoDataOutput {
-      // check if last frame was x nanoseconds ago, effectively throttling FPS
-      let frameTime = UInt64(CMSampleBufferGetPresentationTimeStamp(sampleBuffer).seconds * 1_000_000_000.0)
-      let lastFrameProcessorCallElapsedTime = frameTime - lastFrameProcessorCall
-      let secondsPerFrame = 1.0 / actualFrameProcessorFps
-      let nanosecondsPerFrame = secondsPerFrame * 1_000_000_000.0
-      if lastFrameProcessorCallElapsedTime >= UInt64(nanosecondsPerFrame) {
-        if !isRunningFrameProcessor {
-          // we're not in the middle of executing the Frame Processor, so prepare for next call.
-          CameraQueues.frameProcessorQueue.async {
-            self.isRunningFrameProcessor = true
-
-            let perfSample = self.frameProcessorPerformanceDataCollector.beginPerformanceSampleCollection()
-            let frame = Frame(buffer: sampleBuffer, orientation: self.bufferOrientation)
-            frameProcessor(frame)
-            perfSample.endPerformanceSampleCollection()
-
-            self.isRunningFrameProcessor = false
-          }
-          lastFrameProcessorCall = frameTime
-        } else {
-          // we're still in the middle of executing a Frame Processor for a previous frame, so a frame was dropped.
-          ReactLogger.log(level: .warning, message: "The Frame Processor took so long to execute that a frame was dropped.")
-        }
-      }
-
-      if isReadyForNewEvaluation {
-        // last evaluation was more than 1sec ago, evaluate again
-        evaluateNewPerformanceSamples()
-      }
-    }
   }
 
   private func evaluateNewPerformanceSamples() {
-    lastFrameProcessorPerformanceEvaluation = DispatchTime.now()
-    guard let videoDevice = videoDeviceInput?.device else { return }
-    guard frameProcessorPerformanceDataCollector.hasEnoughData else { return }
-
-    let maxFrameProcessorFps = Double(videoDevice.activeVideoMinFrameDuration.timescale) * Double(videoDevice.activeVideoMinFrameDuration.value)
-    let averageFps = 1.0 / frameProcessorPerformanceDataCollector.averageExecutionTimeSeconds
-    let suggestedFrameProcessorFps = max(floor(min(averageFps, maxFrameProcessorFps)), 1)
-
-    if frameProcessorFps.intValue == -1 {
-      // frameProcessorFps="auto"
-      actualFrameProcessorFps = suggestedFrameProcessorFps
-    } else {
-      // frameProcessorFps={someCustomFpsValue}
-      invokeOnFrameProcessorPerformanceSuggestionAvailable(currentFps: frameProcessorFps.doubleValue,
-                                                           suggestedFps: suggestedFrameProcessorFps)
-    }
+    // Frame processors - disabled because of reanimated
+    // lastFrameProcessorPerformanceEvaluation = DispatchTime.now()
+    // guard let videoDevice = videoDeviceInput?.device else { return }
+    // guard frameProcessorPerformanceDataCollector.hasEnoughData else { return }
+
+    // let maxFrameProcessorFps = Double(videoDevice.activeVideoMinFrameDuration.timescale) * Double(videoDevice.activeVideoMinFrameDuration.value)
+    // let averageFps = 1.0 / frameProcessorPerformanceDataCollector.averageExecutionTimeSeconds
+    // let suggestedFrameProcessorFps = max(floor(min(averageFps, maxFrameProcessorFps)), 1)
+
+    // if frameProcessorFps.intValue == -1 {
+    //   // frameProcessorFps="auto"
+    //   actualFrameProcessorFps = suggestedFrameProcessorFps
+    // } else {
+    //   // frameProcessorFps={someCustomFpsValue}
+    //   invokeOnFrameProcessorPerformanceSuggestionAvailable(currentFps: frameProcessorFps.doubleValue,
+    //                                                        suggestedFps: suggestedFrameProcessorFps)
+    // }
   }
 
   private func recommendedVideoSettings(videoOutput: AVCaptureVideoDataOutput, fileType: AVFileType, videoCodec: AVVideoCodecType?) -> [String: Any]? {
diff --git a/node_modules/react-native-vision-camera/ios/CameraView.swift b/node_modules/react-native-vision-camera/ios/CameraView.swift
index e3cd1e0..82a0244 100644
--- a/node_modules/react-native-vision-camera/ios/CameraView.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraView.swift
@@ -39,36 +39,41 @@ public final class CameraView: UIView {
 
   // pragma MARK: Exported Properties
   // props that require reconfiguring
-  @objc var cameraId: NSString?
-  @objc var enableDepthData = false
-  @objc var enableHighQualityPhotos: NSNumber? // nullable bool
-  @objc var enablePortraitEffectsMatteDelivery = false
-  @objc var preset: String?
+  @objc public var cameraId: NSString?
+  @objc public var enableDepthData = false
+  @objc public var enableHighQualityPhotos: NSNumber? // nullable bool
+  @objc public var enablePortraitEffectsMatteDelivery = false
+  @objc public var preset: String?
   // use cases
-  @objc var photo: NSNumber? // nullable bool
-  @objc var video: NSNumber? // nullable bool
-  @objc var audio: NSNumber? // nullable bool
-  @objc var enableFrameProcessor = false
+  @objc public var photo: NSNumber? // nullable bool
+  @objc public var video: NSNumber? // nullable bool
+  @objc public var audio: NSNumber? // nullable bool
+  @objc public var enableFrameProcessor = false
   // props that require format reconfiguring
-  @objc var format: NSDictionary?
-  @objc var fps: NSNumber?
-  @objc var frameProcessorFps: NSNumber = -1.0 // "auto"
-  @objc var hdr: NSNumber? // nullable bool
-  @objc var lowLightBoost: NSNumber? // nullable bool
-  @objc var colorSpace: NSString?
-  @objc var orientation: NSString?
+  @objc public var format: NSMutableDictionary?
+  @objc public var fps: NSNumber?
+  @objc public var frameProcessorFps: NSNumber = -1.0 // "auto"
+  @objc public var hdr: NSNumber? // nullable bool
+  @objc public var lowLightBoost: NSNumber? // nullable bool
+  @objc public var colorSpace: NSString?
+  @objc public var orientation: NSString?
   // other props
-  @objc var isActive = false
-  @objc var torch = "off"
-  @objc var zoom: NSNumber = 1.0 // in "factor"
-  @objc var videoStabilizationMode: NSString?
+  @objc public var isActive = false
+  @objc public var torch = "off"
+  @objc public var zoom: NSNumber = 1.0 // in "factor"
+  @objc public var videoStabilizationMode: NSString?
+  #if RCT_NEW_ARCH_ENABLED
+  @objc public var delegate: RNCameraViewDirectEventDelegate?
+  #else
   // events
   @objc var onInitialized: RCTDirectEventBlock?
   @objc var onError: RCTDirectEventBlock?
   @objc var onFrameProcessorPerformanceSuggestionAvailable: RCTDirectEventBlock?
   @objc var onViewReady: RCTDirectEventBlock?
+  #endif
+    
   // zoom
-  @objc var enableZoomGesture = false {
+  @objc public var enableZoomGesture = false {
     didSet {
       if enableZoomGesture {
         addPinchGestureRecognizer()
@@ -93,7 +98,6 @@ public final class CameraView: UIView {
   // CameraView+RecordView (+ FrameProcessorDelegate.mm)
   internal var isRecording = false
   internal var recordingSession: RecordingSession?
-  @objc public var frameProcessorCallback: FrameProcessorCallback?
   internal var lastFrameProcessorCall = DispatchTime.now().uptimeNanoseconds
   // CameraView+TakePhoto
   internal var photoCaptureDelegates: [PhotoCaptureDelegate] = []
@@ -107,7 +111,6 @@ public final class CameraView: UIView {
 
   /// Specifies whether the frameProcessor() function is currently executing. used to drop late frames.
   internal var isRunningFrameProcessor = false
-  internal let frameProcessorPerformanceDataCollector = FrameProcessorPerformanceDataCollector()
   internal var actualFrameProcessorFps = 30.0
   internal var lastSuggestedFrameProcessorFps = 0.0
   internal var lastFrameProcessorPerformanceEvaluation = DispatchTime.now()
@@ -176,10 +179,17 @@ public final class CameraView: UIView {
     super.willMove(toSuperview: newSuperview)
     if !isMounted {
       isMounted = true
+    #if RCT_NEW_ARCH_ENABLED
+        guard let delegate = delegate else {
+          return
+        }
+        delegate.onViewReady();
+    #else
       guard let onViewReady = onViewReady else {
         return
       }
       onViewReady(nil)
+    #endif
     }
   }
 
@@ -262,14 +272,15 @@ public final class CameraView: UIView {
 
     // Frame Processor FPS Configuration
     if changedProps.contains("frameProcessorFps") {
-      if frameProcessorFps.doubleValue == -1 {
-        // "auto"
-        actualFrameProcessorFps = 30.0
-      } else {
-        actualFrameProcessorFps = frameProcessorFps.doubleValue
-      }
-      lastFrameProcessorPerformanceEvaluation = DispatchTime.now()
-      frameProcessorPerformanceDataCollector.clear()
+      // Frame Processor is disabled because of reanimated
+      // if frameProcessorFps.doubleValue == -1 {
+      //   // "auto"
+      //   actualFrameProcessorFps = 30.0
+      // } else {
+      //   actualFrameProcessorFps = frameProcessorFps.doubleValue
+      // }
+      // lastFrameProcessorPerformanceEvaluation = DispatchTime.now()
+      // frameProcessorPerformanceDataCollector.clear()
     }
   }
 
@@ -320,7 +331,7 @@ public final class CameraView: UIView {
   // pragma MARK: Event Invokers
   internal final func invokeOnError(_ error: CameraError, cause: NSError? = nil) {
     ReactLogger.log(level: .error, message: "Invoking onError(): \(error.message)")
-    guard let onError = onError else { return }
+
 
     var causeDictionary: [String: Any]?
     if let cause = cause {
@@ -331,21 +342,43 @@ public final class CameraView: UIView {
         "details": cause.userInfo,
       ]
     }
+    #if RCT_NEW_ARCH_ENABLED
+      guard let delegate = delegate else {
+        return
+      }
+      delegate.onError(error:[
+        "code": error.code,
+        "message": error.message,
+        "cause": causeDictionary ?? NSNull(),
+      ])
+    #else
+    guard let onError = onError else { return }
     onError([
       "code": error.code,
       "message": error.message,
       "cause": causeDictionary ?? NSNull(),
     ])
+    #endif
   }
 
   internal final func invokeOnInitialized() {
     ReactLogger.log(level: .info, message: "Camera initialized!")
+    #if RCT_NEW_ARCH_ENABLED
+      guard let delegate = delegate else {
+        return
+      }
+      delegate.onInitialized()
+    #else
     guard let onInitialized = onInitialized else { return }
     onInitialized([String: Any]())
+    #endif
   }
 
   internal final func invokeOnFrameProcessorPerformanceSuggestionAvailable(currentFps: Double, suggestedFps: Double) {
     ReactLogger.log(level: .info, message: "Frame Processor Performance Suggestion available!")
+    #if RCT_NEW_ARCH_ENABLED
+     // Nothing
+    #else
     guard let onFrameProcessorPerformanceSuggestionAvailable = onFrameProcessorPerformanceSuggestionAvailable else { return }
 
     if lastSuggestedFrameProcessorFps == suggestedFps { return }
@@ -356,5 +389,14 @@ public final class CameraView: UIView {
       "suggestedFrameProcessorFps": suggestedFps,
     ])
     lastSuggestedFrameProcessorFps = suggestedFps
+    #endif
   }
 }
+
+
+@objc public protocol RNCameraViewDirectEventDelegate: AnyObject { //TODO: Move to a separate file
+    func onInitialized()
+    func onError(error: NSDictionary)
+    func onViewReady()
+}
+
diff --git a/node_modules/react-native-vision-camera/ios/CameraViewManager.mm b/node_modules/react-native-vision-camera/ios/CameraViewManager.mm
index 6c9df17..7adad46 100644
--- a/node_modules/react-native-vision-camera/ios/CameraViewManager.mm
+++ b/node_modules/react-native-vision-camera/ios/CameraViewManager.mm
@@ -11,8 +11,26 @@
 #import <React/RCTViewManager.h>
 #import <React/RCTUtils.h>
 
-@interface RCT_EXTERN_REMAP_MODULE(CameraView, CameraViewManager, RCTViewManager)
+#ifdef RCT_NEW_ARCH_ENABLED
+
+#import "RNCameraView.h"
+
+@interface RNCameraViewViewManager : RCTViewManager
+@end
+
+@implementation RNCameraViewViewManager
+
+RCT_EXPORT_MODULE(CameraView)
+
+
+- (UIView *)view {
+    return [[RNCameraView alloc] init];
+}
+
 
+#else
+
+@interface RCT_EXTERN_REMAP_MODULE(CameraView, CameraViewManager, RCTViewManager)
 // Module Functions
 RCT_EXTERN_METHOD(getCameraPermissionStatus:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
 RCT_EXTERN_METHOD(getMicrophonePermissionStatus:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
@@ -21,6 +39,18 @@ @interface RCT_EXTERN_REMAP_MODULE(CameraView, CameraViewManager, RCTViewManager
 
 RCT_EXTERN_METHOD(getAvailableCameraDevices:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
 
+// Camera View Functions
+RCT_EXTERN_METHOD(startRecording:(nonnull NSNumber *)node options:(NSDictionary *)options onRecordCallback:(RCTResponseSenderBlock)onRecordCallback);
+RCT_EXTERN_METHOD(pauseRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+RCT_EXTERN_METHOD(resumeRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+RCT_EXTERN_METHOD(stopRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+RCT_EXTERN_METHOD(takePhoto:(nonnull NSNumber *)node options:(NSDictionary *)options resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+RCT_EXTERN_METHOD(focus:(nonnull NSNumber *)node point:(NSDictionary *)point resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+
+RCT_EXTERN_METHOD(getAvailableVideoCodecs:(nonnull NSNumber *)node fileType:(NSString *)fileType resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
+
+#endif
+
 // Camera View Properties
 RCT_EXPORT_VIEW_PROPERTY(isActive, BOOL);
 RCT_EXPORT_VIEW_PROPERTY(cameraId, NSString);
@@ -52,14 +82,5 @@ @interface RCT_EXTERN_REMAP_MODULE(CameraView, CameraViewManager, RCTViewManager
 RCT_EXPORT_VIEW_PROPERTY(onFrameProcessorPerformanceSuggestionAvailable, RCTDirectEventBlock);
 RCT_EXPORT_VIEW_PROPERTY(onViewReady, RCTDirectEventBlock);
 
-// Camera View Functions
-RCT_EXTERN_METHOD(startRecording:(nonnull NSNumber *)node options:(NSDictionary *)options onRecordCallback:(RCTResponseSenderBlock)onRecordCallback);
-RCT_EXTERN_METHOD(pauseRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-RCT_EXTERN_METHOD(resumeRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-RCT_EXTERN_METHOD(stopRecording:(nonnull NSNumber *)node resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-RCT_EXTERN_METHOD(takePhoto:(nonnull NSNumber *)node options:(NSDictionary *)options resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-RCT_EXTERN_METHOD(focus:(nonnull NSNumber *)node point:(NSDictionary *)point resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-
-RCT_EXTERN_METHOD(getAvailableVideoCodecs:(nonnull NSNumber *)node fileType:(NSString *)fileType resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject);
-
 @end
+
diff --git a/node_modules/react-native-vision-camera/ios/CameraViewManager.swift b/node_modules/react-native-vision-camera/ios/CameraViewManager.swift
index 74df8cb..67a7a3b 100644
--- a/node_modules/react-native-vision-camera/ios/CameraViewManager.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraViewManager.swift
@@ -10,85 +10,68 @@ import AVFoundation
 import Foundation
 
 @objc(CameraViewManager)
-final class CameraViewManager: RCTViewManager {
+final public class CameraViewManager: RCTViewManager {
   // pragma MARK: Properties
 
-  private var runtimeManager: FrameProcessorRuntimeManager?
-
-  override var bridge: RCTBridge! {
-    didSet {
-      // Install Frame Processor bindings and setup Runtime
-      if VISION_CAMERA_ENABLE_FRAME_PROCESSORS {
-        CameraQueues.frameProcessorQueue.async {
-          self.runtimeManager = FrameProcessorRuntimeManager(bridge: self.bridge)
-          self.bridge.runOnJS {
-            self.runtimeManager!.installFrameProcessorBindings()
-          }
-        }
-      }
-    }
-  }
-
-  override var methodQueue: DispatchQueue! {
+  override public var methodQueue: DispatchQueue! {
     return DispatchQueue.main
   }
 
-  override static func requiresMainQueueSetup() -> Bool {
+  override public static func requiresMainQueueSetup() -> Bool {
     return true
   }
 
-  override final func view() -> UIView! {
+  override public final func view() -> UIView! {
     return CameraView()
   }
 
   // pragma MARK: React Functions
 
   @objc
-  final func startRecording(_ node: NSNumber, options: NSDictionary, onRecordCallback: @escaping RCTResponseSenderBlock) {
-    let component = getCameraView(withTag: node)
-    component.startRecording(options: options, callback: onRecordCallback)
+    static public func startRecording(options: NSDictionary, onRecordCallback: @escaping RCTResponseSenderBlock, view: CameraView) {
+
+    view.startRecording(options: options, callback: onRecordCallback)
   }
 
   @objc
-  final func pauseRecording(_ node: NSNumber, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
-    let component = getCameraView(withTag: node)
-    component.pauseRecording(promise: Promise(resolver: resolve, rejecter: reject))
+    static public func pauseRecording( resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
+
+        view.pauseRecording(promise: Promise(resolver: resolve, rejecter: reject))
   }
 
   @objc
-  final func resumeRecording(_ node: NSNumber, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
-    let component = getCameraView(withTag: node)
-    component.resumeRecording(promise: Promise(resolver: resolve, rejecter: reject))
+    static public func resumeRecording( resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
+
+        view.resumeRecording(promise: Promise(resolver: resolve, rejecter: reject))
   }
 
   @objc
-  final func stopRecording(_ node: NSNumber, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
-    let component = getCameraView(withTag: node)
-    component.stopRecording(promise: Promise(resolver: resolve, rejecter: reject))
+    static public func stopRecording( resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
+
+        view.stopRecording(promise: Promise(resolver: resolve, rejecter: reject))
   }
 
   @objc
-  final func takePhoto(_ node: NSNumber, options: NSDictionary, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
-    let component = getCameraView(withTag: node)
-    component.takePhoto(options: options, promise: Promise(resolver: resolve, rejecter: reject))
+  static public func takePhoto( options: NSDictionary, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
+
+      view.takePhoto(options: options, promise: Promise(resolver: resolve, rejecter: reject))
   }
 
   @objc
-  final func focus(_ node: NSNumber, point: NSDictionary, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
+    static public func focus( point: NSDictionary, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
     let promise = Promise(resolver: resolve, rejecter: reject)
     guard let x = point["x"] as? NSNumber, let y = point["y"] as? NSNumber else {
       promise.reject(error: .parameter(.invalid(unionName: "point", receivedValue: point.description)))
       return
     }
-    let component = getCameraView(withTag: node)
-    component.focus(point: CGPoint(x: x.doubleValue, y: y.doubleValue), promise: promise)
+
+        view.focus(point: CGPoint(x: x.doubleValue, y: y.doubleValue), promise: promise)
   }
 
   @objc
-  final func getAvailableVideoCodecs(_ node: NSNumber, fileType: String?, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
+  static public func getAvailableVideoCodecs( fileType: String?, resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock, view: CameraView) {
     withPromise(resolve: resolve, reject: reject) {
-      let component = getCameraView(withTag: node)
-      guard let videoOutput = component.videoOutput else {
+      guard let videoOutput = view.videoOutput else {
         throw CameraError.session(SessionError.cameraNotReady)
       }
 
@@ -105,7 +88,7 @@ final class CameraViewManager: RCTViewManager {
   }
 
   @objc
-  final func getAvailableCameraDevices(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
+static public func getAvailableCameraDevices(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
     withPromise(resolve: resolve, reject: reject) {
       let discoverySession = AVCaptureDevice.DiscoverySession(deviceTypes: getAllDeviceTypes(), mediaType: .video, position: .unspecified)
       let devices = discoverySession.devices.filter {
@@ -141,7 +124,7 @@ final class CameraViewManager: RCTViewManager {
   }
 
   @objc
-  final func getCameraPermissionStatus(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
+  static public func getCameraPermissionStatus(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
     withPromise(resolve: resolve, reject: reject) {
       let status = AVCaptureDevice.authorizationStatus(for: .video)
       return status.descriptor
@@ -149,7 +132,7 @@ final class CameraViewManager: RCTViewManager {
   }
 
   @objc
-  final func getMicrophonePermissionStatus(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
+  static public func getMicrophonePermissionStatus(_ resolve: @escaping RCTPromiseResolveBlock, reject: @escaping RCTPromiseRejectBlock) {
     withPromise(resolve: resolve, reject: reject) {
       let status = AVCaptureDevice.authorizationStatus(for: .audio)
       return status.descriptor
@@ -157,7 +140,7 @@ final class CameraViewManager: RCTViewManager {
   }
 
   @objc
-  final func requestCameraPermission(_ resolve: @escaping RCTPromiseResolveBlock, reject _: @escaping RCTPromiseRejectBlock) {
+  static public func requestCameraPermission(_ resolve: @escaping RCTPromiseResolveBlock, reject _: @escaping RCTPromiseRejectBlock) {
     AVCaptureDevice.requestAccess(for: .video) { granted in
       let result: AVAuthorizationStatus = granted ? .authorized : .denied
       resolve(result.descriptor)
@@ -165,7 +148,7 @@ final class CameraViewManager: RCTViewManager {
   }
 
   @objc
-  final func requestMicrophonePermission(_ resolve: @escaping RCTPromiseResolveBlock, reject _: @escaping RCTPromiseRejectBlock) {
+  static public func requestMicrophonePermission(_ resolve: @escaping RCTPromiseResolveBlock, reject _: @escaping RCTPromiseRejectBlock) {
     AVCaptureDevice.requestAccess(for: .audio) { granted in
       let result: AVAuthorizationStatus = granted ? .authorized : .denied
       resolve(result.descriptor)
@@ -174,12 +157,12 @@ final class CameraViewManager: RCTViewManager {
 
   // MARK: Private
 
-  private func getCameraView(withTag tag: NSNumber) -> CameraView {
+//  private static func getCameraView(withTag tag: NSNumber) -> CameraView {
     // swiftlint:disable force_cast
-    return bridge.uiManager.view(forReactTag: tag) as! CameraView
-  }
+//      return bridge.uiManager.view(forReactTag: tag) as! CameraView
+//  }
 
-  private final func getAllDeviceTypes() -> [AVCaptureDevice.DeviceType] {
+  private static func getAllDeviceTypes() -> [AVCaptureDevice.DeviceType] {
     var deviceTypes: [AVCaptureDevice.DeviceType] = []
     if #available(iOS 13.0, *) {
       deviceTypes.append(.builtInTripleCamera)
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.h b/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.h
deleted file mode 100644
index 70d2179..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.h	
+++ /dev/null
@@ -1,22 +0,0 @@
-//
-//  Frame.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 15.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <Foundation/Foundation.h>
-#import <CoreMedia/CMSampleBuffer.h>
-#import <UIKit/UIImage.h>
-
-@interface Frame : NSObject
-
-- (instancetype) initWithBuffer:(CMSampleBufferRef)buffer orientation:(UIImageOrientation)orientation;
-
-@property (nonatomic, readonly) CMSampleBufferRef buffer;
-@property (nonatomic, readonly) UIImageOrientation orientation;
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.m b/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.m
deleted file mode 100644
index 25e9ff7..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/Frame.m	
+++ /dev/null
@@ -1,30 +0,0 @@
-//
-//  Frame.m
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 08.06.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import "Frame.h"
-#import <Foundation/Foundation.h>
-#import <CoreMedia/CMSampleBuffer.h>
-
-@implementation Frame {
-  CMSampleBufferRef buffer;
-  UIImageOrientation orientation;
-}
-
-- (instancetype) initWithBuffer:(CMSampleBufferRef)buffer orientation:(UIImageOrientation)orientation {
-  self = [super init];
-  if (self) {
-    _buffer = buffer;
-    _orientation = orientation;
-  }
-  return self;
-}
-
-@synthesize buffer = _buffer;
-@synthesize orientation = _orientation;
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.h
deleted file mode 100644
index 7cdadab..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.h	
+++ /dev/null
@@ -1,31 +0,0 @@
-//
-//  FrameHostObject.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 22.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <jsi/jsi.h>
-#import <CoreMedia/CMSampleBuffer.h>
-#import "Frame.h"
-
-using namespace facebook;
-
-class JSI_EXPORT FrameHostObject: public jsi::HostObject {
-public:
-  explicit FrameHostObject(Frame* frame): frame(frame) {}
-
-public:
-  jsi::Value get(jsi::Runtime&, const jsi::PropNameID& name) override;
-  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& rt) override;
-  void close();
-
-public:
-  Frame* frame;
-
-private:
-  void assertIsFrameStrong(jsi::Runtime& runtime, const std::string& accessedPropName);
-};
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.mm
deleted file mode 100644
index a4967a9..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameHostObject.mm	
+++ /dev/null
@@ -1,98 +0,0 @@
-//
-//  FrameHostObject.m
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 22.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import "FrameHostObject.h"
-#import <Foundation/Foundation.h>
-#import <jsi/jsi.h>
-
-std::vector<jsi::PropNameID> FrameHostObject::getPropertyNames(jsi::Runtime& rt) {
-  std::vector<jsi::PropNameID> result;
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("toString")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("isValid")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("width")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("height")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("bytesPerRow")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("planesCount")));
-  result.push_back(jsi::PropNameID::forUtf8(rt, std::string("close")));
-  return result;
-}
-
-jsi::Value FrameHostObject::get(jsi::Runtime& runtime, const jsi::PropNameID& propName) {
-  auto name = propName.utf8(runtime);
-
-  if (name == "toString") {
-    auto toString = [this] (jsi::Runtime& runtime, const jsi::Value&, const jsi::Value*, size_t) -> jsi::Value {
-      if (this->frame == nil) {
-        return jsi::String::createFromUtf8(runtime, "[closed frame]");
-      }
-      auto imageBuffer = CMSampleBufferGetImageBuffer(frame.buffer);
-      auto width = CVPixelBufferGetWidth(imageBuffer);
-      auto height = CVPixelBufferGetHeight(imageBuffer);
-
-      NSMutableString* string = [NSMutableString stringWithFormat:@"%lu x %lu Frame", width, height];
-      return jsi::String::createFromUtf8(runtime, string.UTF8String);
-    };
-    return jsi::Function::createFromHostFunction(runtime, jsi::PropNameID::forUtf8(runtime, "toString"), 0, toString);
-  }
-  if (name == "close") {
-    auto close = [this] (jsi::Runtime& runtime, const jsi::Value&, const jsi::Value*, size_t) -> jsi::Value {
-      if (this->frame == nil) {
-        throw jsi::JSError(runtime, "Trying to close an already closed frame! Did you call frame.close() twice?");
-      }
-      this->close();
-      return jsi::Value::undefined();
-    };
-    return jsi::Function::createFromHostFunction(runtime, jsi::PropNameID::forUtf8(runtime, "close"), 0, close);
-  }
-
-  if (name == "isValid") {
-    auto isValid = frame != nil && CMSampleBufferIsValid(frame.buffer);
-    return jsi::Value(isValid);
-  }
-  if (name == "width") {
-    this->assertIsFrameStrong(runtime, name);
-    auto imageBuffer = CMSampleBufferGetImageBuffer(frame.buffer);
-    auto width = CVPixelBufferGetWidth(imageBuffer);
-    return jsi::Value((double) width);
-  }
-  if (name == "height") {
-    this->assertIsFrameStrong(runtime, name);
-    auto imageBuffer = CMSampleBufferGetImageBuffer(frame.buffer);
-    auto height = CVPixelBufferGetHeight(imageBuffer);
-    return jsi::Value((double) height);
-  }
-  if (name == "bytesPerRow") {
-    this->assertIsFrameStrong(runtime, name);
-    auto imageBuffer = CMSampleBufferGetImageBuffer(frame.buffer);
-    auto bytesPerRow = CVPixelBufferGetBytesPerRow(imageBuffer);
-    return jsi::Value((double) bytesPerRow);
-  }
-  if (name == "planesCount") {
-    this->assertIsFrameStrong(runtime, name);
-    auto imageBuffer = CMSampleBufferGetImageBuffer(frame.buffer);
-    auto planesCount = CVPixelBufferGetPlaneCount(imageBuffer);
-    return jsi::Value((double) planesCount);
-  }
-
-  return jsi::Value::undefined();
-}
-
-void FrameHostObject::assertIsFrameStrong(jsi::Runtime &runtime, const std::string &accessedPropName) {
-  if (frame == nil) {
-    auto message = "Cannot get `" + accessedPropName + "`, frame is already closed!";
-    throw jsi::JSError(runtime, message.c_str());
-  }
-}
-
-void FrameHostObject::close() {
-  if (frame != nil) {
-    CMSampleBufferInvalidate(frame.buffer);
-    // ARC will hopefully delete it lol
-    this->frame = nil;
-  }
-}
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorCallback.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorCallback.h
deleted file mode 100644
index 6fd0737..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorCallback.h	
+++ /dev/null
@@ -1,14 +0,0 @@
-//
-//  FrameProcessorCallback.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 11.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <Foundation/Foundation.h>
-#import "Frame.h"
-
-typedef void (^FrameProcessorCallback) (Frame* frame);
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPerformanceDataCollector.swift b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPerformanceDataCollector.swift
deleted file mode 100644
index c87c941..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPerformanceDataCollector.swift	
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  FrameProcessorPerformanceDataCollector.swift
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 30.08.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-import Foundation
-
-// keep a maximum of `maxSampleSize` historical performance data samples cached.
-private let maxSampleSize = 15
-
-// MARK: - PerformanceSampleCollection
-
-struct PerformanceSampleCollection {
-  var endPerformanceSampleCollection: () -> Void
-
-  init(end: @escaping () -> Void) {
-    endPerformanceSampleCollection = end
-  }
-}
-
-// MARK: - FrameProcessorPerformanceDataCollector
-
-class FrameProcessorPerformanceDataCollector {
-  private var performanceSamples: [Double] = []
-  private var counter = 0
-  private var lastEvaluation = -1
-
-  var hasEnoughData: Bool {
-    return !performanceSamples.isEmpty
-  }
-
-  var averageExecutionTimeSeconds: Double {
-    let sum = performanceSamples.reduce(0, +)
-    let average = sum / Double(performanceSamples.count)
-
-    lastEvaluation = counter
-
-    return average
-  }
-
-  func beginPerformanceSampleCollection() -> PerformanceSampleCollection {
-    let begin = DispatchTime.now()
-
-    return PerformanceSampleCollection {
-      let end = DispatchTime.now()
-      let seconds = Double(end.uptimeNanoseconds - begin.uptimeNanoseconds) / 1_000_000_000.0
-
-      let index = self.counter % maxSampleSize
-
-      if self.performanceSamples.count > index {
-        self.performanceSamples[index] = seconds
-      } else {
-        self.performanceSamples.append(seconds)
-      }
-
-      self.counter += 1
-    }
-  }
-
-  func clear() {
-    counter = 0
-    performanceSamples.removeAll()
-  }
-}
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h
deleted file mode 100644
index 135d804..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h	
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  FrameProcessorPlugin.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 01.05.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#ifndef FrameProcessorPlugin_h
-#define FrameProcessorPlugin_h
-
-#import <Foundation/Foundation.h>
-#import "FrameProcessorPluginRegistry.h"
-#import "Frame.h"
-
-@protocol FrameProcessorPluginBase
-+ (id) callback:(Frame*)frame withArgs:(NSArray<id>*)args;
-@end
-
-
-#define VISION_CONCAT2(A, B) A##B
-#define VISION_CONCAT(A, B) VISION_CONCAT2(A, B)
-
-/**
- * Use this Macro to register the given function as a Frame Processor.
- * * Make sure the given function is a C-style function with the following signature: static inline id callback(Frame* frame, NSArray* args)
- * * Make sure the given function's name is unique across other frame processor plugins
- * * Make sure your frame processor returns a Value that can be converted to JS
- * * Make sure to use this Macro in an @implementation, not @interface
- *
- * The JS function will have the same name as the given Objective-C function, but with a "__" prefix.
- * Make sure to add that function to the babel.config.js under reanimated's "globals" option, and add TypeScript type declarations.
- */
-#define VISION_EXPORT_FRAME_PROCESSOR(frame_processor)                              \
-                                                                                    \
-+(void)load                                                                   \
-{                                                                                   \
-  [FrameProcessorPluginRegistry addFrameProcessorPlugin:@"__" @ #frame_processor callback:^id(Frame* frame, NSArray<id>* args) { \
-    return frame_processor(frame, args);                                            \
-  }];                                                                               \
-}
-
-
-/**
- * Same as VISION_EXPORT_FRAME_PROCESSOR, but uses __attribute__((constructor)) for
- * registration. Useful for registering swift classes that forbids use of +(void)load.
- */
-#define VISION_EXPORT_SWIFT_FRAME_PROCESSOR(name, objc_name) \
-objc_name : NSObject<FrameProcessorPluginBase>                                      \
-@end                                                                                \
-                                                                                    \
-@interface objc_name (FrameProcessorPlugin) <FrameProcessorPluginBase>              \
-@end                                                                                \
-@implementation objc_name (FrameProcessorPlugin)                                    \
-                                                                                    \
-__attribute__((constructor)) static void VISION_CONCAT(initialize_, objc_name)()    \
-{                                                                                   \
-  [FrameProcessorPluginRegistry addFrameProcessorPlugin:@"__" @ #name callback:^id(Frame* frame, NSArray<id>* args) { \
-    return [objc_name callback:frame withArgs:args];                              \
-  }];                                                                             \
-}
-
-#endif /* FrameProcessorPlugin_h */
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.h
deleted file mode 100644
index ce3b13f..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.h	
+++ /dev/null
@@ -1,21 +0,0 @@
-//
-//  FrameProcessorPluginRegistry.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 24.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <Foundation/Foundation.h>
-#import "Frame.h"
-
-typedef id (^FrameProcessorPlugin) (Frame* frame, NSArray<id>* arguments);
-
-@interface FrameProcessorPluginRegistry : NSObject
-
-+ (NSMutableDictionary<NSString*, FrameProcessorPlugin>*)frameProcessorPlugins;
-+ (void) addFrameProcessorPlugin:(NSString*)name callback:(FrameProcessorPlugin)callback;
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.mm
deleted file mode 100644
index 3b57594..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPluginRegistry.mm	
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  FrameProcessorPluginRegistry.mm
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 24.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import "FrameProcessorPluginRegistry.h"
-#import <Foundation/Foundation.h>
-
-@implementation FrameProcessorPluginRegistry
-
-+ (NSMutableDictionary<NSString*, FrameProcessorPlugin>*)frameProcessorPlugins {
-  static NSMutableDictionary<NSString*, FrameProcessorPlugin>* plugins = nil;
-  if (plugins == nil) {
-    plugins = [[NSMutableDictionary alloc] init];
-  }
-  return plugins;
-}
-
-+ (void) addFrameProcessorPlugin:(NSString*)name callback:(FrameProcessorPlugin)callback {
-  BOOL alreadyExists = [[FrameProcessorPluginRegistry frameProcessorPlugins] valueForKey:name] != nil;
-  NSAssert(!alreadyExists, @"Tried to two Frame Processor Plugins with the same name! Either choose unique names, or remove the unused plugin.");
-
-  [[FrameProcessorPluginRegistry frameProcessorPlugins] setValue:callback forKey:name];
-}
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.h
deleted file mode 100644
index a7e1190..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.h	
+++ /dev/null
@@ -1,26 +0,0 @@
-//
-//  FrameProcessorRuntimeManager.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 23.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <Foundation/Foundation.h>
-#import <React/RCTBridge.h>
-
-@interface FrameProcessorRuntimeManager : NSObject
-
-- (instancetype)init NS_UNAVAILABLE;
-
-/**
- Initializes the Frame Processor Runtime Manager with the given bridge.
- This init is not thread safe, so only init this on the Thread you want the runtime to run on.
- */
-- (instancetype) initWithBridge:(RCTBridge*)bridge;
-
-- (void) installFrameProcessorBindings;
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm
deleted file mode 100644
index 726b715..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm	
+++ /dev/null
@@ -1,208 +0,0 @@
-//
-//  FrameProcessorRuntimeManager.m
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 23.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import <Foundation/Foundation.h>
-#import "FrameProcessorRuntimeManager.h"
-#import "FrameProcessorPluginRegistry.h"
-#import "FrameHostObject.h"
-
-#import <memory>
-
-#import <React/RCTBridge.h>
-#import <ReactCommon/RCTTurboModule.h>
-#import <React/RCTBridge+Private.h>
-#import <React/RCTUIManager.h>
-#import <ReactCommon/RCTTurboModuleManager.h>
-
-#ifndef VISION_CAMERA_DISABLE_FRAME_PROCESSORS
-  #if __has_include(<RNReanimated/NativeReanimatedModule.h>)
-    #if __has_include(<RNReanimated/WorkletRuntime.h>)
-      #import <RNReanimated/WorkletRuntime.h>
-      #import "VisionCameraScheduler.h"
-      #define ENABLE_FRAME_PROCESSORS
-    #else
-      #warning Your react-native-reanimated version is not compatible with VisionCamera, Frame Processors are disabled. Make sure you're using react-native-reanimated 3.5.0 or above!
-    #endif
-  #else
-    #warning NativeReanimatedModule.h header could not be found, Frame Processors are disabled. If you want to use Frame Processors, make sure you install react-native-reanimated 3.5.0 or above!
-  #endif
-#endif
-
-#import "FrameProcessorCallback.h"
-#import "../React Utils/JSIUtils.h"
-
-// Forward declarations for the Swift classes
-__attribute__((objc_runtime_name("_TtC12VisionCamera12CameraQueues")))
-@interface CameraQueues : NSObject
-@property (nonatomic, class, readonly, strong) dispatch_queue_t _Nonnull frameProcessorQueue;
-@end
-__attribute__((objc_runtime_name("_TtC12VisionCamera10CameraView")))
-@interface CameraView : UIView
-@property (nonatomic, copy) FrameProcessorCallback _Nullable frameProcessorCallback;
-@end
-
-@implementation FrameProcessorRuntimeManager {
-#ifdef ENABLE_FRAME_PROCESSORS
-  std::shared_ptr<reanimated::WorkletRuntime> workletRuntime;
-#endif
-  __weak RCTBridge* weakBridge;
-}
-
-- (instancetype) initWithBridge:(RCTBridge*)bridge {
-  self = [super init];
-  if (self) {
-#ifdef ENABLE_FRAME_PROCESSORS
-    NSLog(@"FrameProcessorBindings: Creating Runtime Manager...");
-    weakBridge = bridge;
-    NSLog(@"FrameProcessorBindings: Frame Processor plugins installed!");
-#else
-    NSLog(@"Reanimated not found, Frame Processors are disabled.");
-#endif
-  }
-  return self;
-}
-
-- (void) installFrameProcessorBindings {
-#ifdef ENABLE_FRAME_PROCESSORS
-  if (!weakBridge) {
-    NSLog(@"FrameProcessorBindings: Failed to install Frame Processor Bindings - bridge was null!");
-    return;
-  }
-
-  NSLog(@"FrameProcessorBindings: Installing Frame Processor Bindings for Bridge...");
-  RCTCxxBridge *cxxBridge = (RCTCxxBridge *)weakBridge;
-  if (!cxxBridge.runtime) {
-    return;
-  }
-
-  jsi::Runtime& jsiRuntime = *(jsi::Runtime*)cxxBridge.runtime;
-  NSLog(@"FrameProcessorBindings: Installing global functions...");
-
-  // setFrameProcessor(viewTag: number, frameProcessor: (frame: Frame) => void)
-  auto setFrameProcessor = [self](jsi::Runtime& rnRuntime,
-                                  const jsi::Value& thisValue,
-                                  const jsi::Value* arguments,
-                                  size_t count) -> jsi::Value {
-    self->workletRuntime = reanimated::extractWorkletRuntime(rnRuntime, arguments[2].asObject(rnRuntime));
-    jsi::Runtime &visionRuntime = self->workletRuntime->getJSIRuntime();
-
-    // TODO: call reanimated::RuntimeDecorator::decorateRuntime(*runtime, "FRAME_PROCESSOR");
-    visionRuntime.global().setProperty(visionRuntime, "_FRAME_PROCESSOR", jsi::Value(true));
-
-    for (NSString* pluginKey in [FrameProcessorPluginRegistry frameProcessorPlugins]) {
-      auto pluginName = [pluginKey UTF8String];
-
-      NSLog(@"FrameProcessorBindings: Installing Frame Processor plugin \"%s\"...", pluginName);
-      FrameProcessorPlugin callback = [[FrameProcessorPluginRegistry frameProcessorPlugins] valueForKey:pluginKey];
-
-      auto function = [callback](jsi::Runtime& runtime,
-                                              const jsi::Value& thisValue,
-                                              const jsi::Value* arguments,
-                                              size_t count) -> jsi::Value {
-        auto frameHostObject = arguments[0].asObject(runtime).asHostObject(runtime);
-        auto frame = static_cast<FrameHostObject*>(frameHostObject.get());
-
-        auto args = convertJSICStyleArrayToNSArray(runtime,
-                                                   arguments + 1, // start at index 1 since first arg = Frame
-                                                   count - 1, // use smaller count
-                                                   nullptr);
-        id result = callback(frame->frame, args);
-
-        return convertObjCObjectToJSIValue(runtime, result);
-      };
-
-      visionRuntime.global().setProperty(visionRuntime, pluginName, jsi::Function::createFromHostFunction(visionRuntime,
-                                                                                                jsi::PropNameID::forAscii(visionRuntime, pluginName),
-                                                                                                1, // frame
-                                                                                                function));
-    }
-
-    NSLog(@"FrameProcessorBindings: Setting new frame processor...");
-    if (!arguments[0].isNumber()) throw jsi::JSError(rnRuntime, "Camera::setFrameProcessor: First argument ('viewTag') must be a number!");
-    if (!arguments[1].isObject()) throw jsi::JSError(rnRuntime, "Camera::setFrameProcessor: Second argument ('frameProcessor') must be a function!");
-
-    auto viewTag = arguments[0].asNumber();
-    NSLog(@"FrameProcessorBindings: Adapting Shareable value from function (conversion to worklet)...");
-
-    auto worklet = reanimated::extractShareableOrThrow<reanimated::ShareableWorklet>(rnRuntime, arguments[1].asObject(rnRuntime));
-    NSLog(@"FrameProcessorBindings: Successfully created worklet!");
-
-    RCTExecuteOnMainQueue([=]() {
-      auto currentBridge = [RCTBridge currentBridge];
-      auto anonymousView = [currentBridge.uiManager viewForReactTag:[NSNumber numberWithDouble:viewTag]];
-      auto view = static_cast<CameraView*>(anonymousView);
-
-      dispatch_async(CameraQueues.frameProcessorQueue, [=]() {
-        NSLog(@"FrameProcessorBindings: Converting worklet to Objective-C callback...");
-
-        std::weak_ptr<reanimated::WorkletRuntime> weakWorkletRuntime = workletRuntime;
-        std::weak_ptr<reanimated::ShareableWorklet> weakShareableWorklet = worklet;
-
-        view.frameProcessorCallback = ^(Frame* frame) {
-          auto workletRuntime = weakWorkletRuntime.lock();
-          auto shareableWorklet = weakShareableWorklet.lock();
-          if (workletRuntime == nullptr || shareableWorklet == nullptr) {
-            return;
-          }
-
-          auto frameHostObject = std::make_shared<FrameHostObject>(frame);
-          jsi::Runtime &runtime = workletRuntime->getJSIRuntime();
-          auto hostObject = jsi::Object::createFromHostObject(runtime, frameHostObject);
-          workletRuntime->runGuarded(shareableWorklet, hostObject);
-
-          // Manually free the buffer because:
-          //  1. we are sure we don't need it anymore, the frame processor worklet has finished executing.
-          //  2. we don't know when the JS runtime garbage collects this object, it might be holding it for a few more frames
-          //     which then blocks the camera queue from pushing new frames (memory limit)
-          frameHostObject->close();
-        };
-
-        NSLog(@"FrameProcessorBindings: Frame processor set!");
-      });
-    });
-
-    return jsi::Value::undefined();
-  };
-  jsiRuntime.global().setProperty(jsiRuntime, "setFrameProcessor", jsi::Function::createFromHostFunction(jsiRuntime,
-                                                                                                         jsi::PropNameID::forAscii(jsiRuntime, "setFrameProcessor"),
-                                                                                                         2,  // viewTag, frameProcessor
-                                                                                                         setFrameProcessor));
-
-  // unsetFrameProcessor(viewTag: number)
-  auto unsetFrameProcessor = [](jsi::Runtime& runtime,
-                                const jsi::Value& thisValue,
-                                const jsi::Value* arguments,
-                                size_t count) -> jsi::Value {
-    NSLog(@"FrameProcessorBindings: Removing frame processor...");
-    if (!arguments[0].isNumber()) throw jsi::JSError(runtime, "Camera::unsetFrameProcessor: First argument ('viewTag') must be a number!");
-    auto viewTag = arguments[0].asNumber();
-
-    RCTExecuteOnMainQueue(^{
-      auto currentBridge = [RCTBridge currentBridge];
-      if (!currentBridge) return;
-
-      auto anonymousView = [currentBridge.uiManager viewForReactTag:[NSNumber numberWithDouble:viewTag]];
-      if (!anonymousView) return;
-
-      auto view = static_cast<CameraView*>(anonymousView);
-      view.frameProcessorCallback = nil;
-      NSLog(@"FrameProcessorBindings: Frame processor removed!");
-    });
-
-    return jsi::Value::undefined();
-  };
-  jsiRuntime.global().setProperty(jsiRuntime, "unsetFrameProcessor", jsi::Function::createFromHostFunction(jsiRuntime,
-                                                                                                           jsi::PropNameID::forAscii(jsiRuntime, "unsetFrameProcessor"),
-                                                                                                           1,  // viewTag
-                                                                                                           unsetFrameProcessor));
-
-  NSLog(@"FrameProcessorBindings: Finished installing bindings.");
-#endif
-}
-
-@end
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h
deleted file mode 100644
index d92a342..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h	
+++ /dev/null
@@ -1,20 +0,0 @@
-//
-//  VisionCameraScheduler.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 23.07.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#include <functional>
-
-namespace vision {
-
-class VisionCameraScheduler {
- public:
-  void scheduleOnUI(std::function<void()> job);
-};
-
-} // namespace vision
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm
deleted file mode 100644
index b4ba23e..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm	
+++ /dev/null
@@ -1,27 +0,0 @@
-//
-//  VisionCameraScheduler.mm
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 23.07.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import <Foundation/Foundation.h>
-#import "VisionCameraScheduler.h"
-
-// Forward declarations for the Swift classes
-__attribute__((objc_runtime_name("_TtC12VisionCamera12CameraQueues")))
-@interface CameraQueues : NSObject
-@property (nonatomic, class, readonly, strong) dispatch_queue_t _Nonnull frameProcessorQueue;
-@end
-
-namespace vision {
-
-// does not schedule on UI thread but rather on Frame Processor Thread
-void VisionCameraScheduler::scheduleOnUI(std::function<void()> job) {
-  dispatch_async(CameraQueues.frameProcessorQueue, ^{
-    job();
-  });
-}
-
-} // namespace vision
diff --git a/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift b/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
index 48fa031..13a403b 100644
--- a/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
+++ b/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
@@ -38,7 +38,7 @@ extension AVCaptureColorSpace {
     case .sRGB:
       return "srgb"
     default:
-      return "unknown"
+      fatalError("AVCaptureDevice.Position has unknown state.")
     }
   }
 }
diff --git a/node_modules/react-native-vision-camera/ios/RNCameraView.h b/node_modules/react-native-vision-camera/ios/RNCameraView.h
new file mode 100644
index 0000000..46c2c2c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/RNCameraView.h
@@ -0,0 +1,14 @@
+// This guard prevent this file to be compiled in the old architecture.
+#ifdef RCT_NEW_ARCH_ENABLED
+#import <React/RCTViewComponentView.h>
+#import <UIKit/UIKit.h>
+
+
+NS_ASSUME_NONNULL_BEGIN
+
+@interface RNCameraView : RCTViewComponentView
+@end
+
+NS_ASSUME_NONNULL_END
+
+#endif /* RCT_NEW_ARCH_ENABLED */
diff --git a/node_modules/react-native-vision-camera/ios/RNCameraView.mm b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
new file mode 100644
index 0000000..fe4d561
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/RNCameraView.mm
@@ -0,0 +1,270 @@
+// This guard prevent the code from being compiled in the old architecture
+#ifdef RCT_NEW_ARCH_ENABLED
+//#import "RNCameraView.h"
+#import <React/RCTViewComponentView.h>
+
+#import <react/renderer/components/CameraNativeComponentSpec/ComponentDescriptors.h>
+#import <react/renderer/components/CameraNativeComponentSpec/EventEmitters.h>
+#import <react/renderer/components/CameraNativeComponentSpec/Props.h>
+#import <react/renderer/components/CameraNativeComponentSpec/RCTComponentViewHelpers.h>
+
+#import "CameraModule.h"
+#import "RCTFabricComponentsPlugins.h"
+#import <AVFoundation/AVCaptureAudioDataOutput.h>
+#import <AVFoundation/AVCaptureVideoDataOutput.h>
+#import <React/RCTViewManager.h>
+#import <React/RCTConversions.h>
+#import "VisionCamera-Swift.h"
+
+@interface RNCameraView : RCTViewComponentView <RNCameraViewDirectEventDelegate>
+@end
+
+
+using namespace facebook::react;
+
+@implementation RNCameraView {
+    CameraView * _view;
+}
+
++ (ComponentDescriptorProvider)componentDescriptorProvider
+{
+    return concreteComponentDescriptorProvider<CameraViewComponentDescriptor>();
+}
+
+- (instancetype)initWithFrame:(CGRect)frame
+{
+    self = [super initWithFrame:frame];
+if (self) {
+    static const auto defaultProps = std::make_shared<const CameraViewProps>();
+    _props = defaultProps;
+
+    //The remaining part of the initializer is standard Objective-C code to create views and layout them with AutoLayout. Here we can change whatever we want to.
+    _view = [[CameraView alloc] init];
+    _view.delegate = self;
+    [CameraModule setCurrentCamera:_view];
+    
+
+    self.contentView = _view;
+}
+
+return self;
+}
+
+// why we need this func -> https://reactnative.dev/docs/next/the-new-architecture/pillars-fabric-components#write-the-native-ios-code
+- (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &)oldProps
+{
+    const auto &newViewProps = *std::static_pointer_cast<CameraViewProps const>(props);
+    const auto &oldViewProps = *std::static_pointer_cast<CameraViewProps const>(_props);
+    
+    NSMutableArray* changedProps = [[NSMutableArray alloc] init];
+    
+    if(oldViewProps.isActive != newViewProps.isActive){
+        _view.isActive = newViewProps.isActive;
+        [changedProps addObject:@"isActive"];
+    }
+    if(oldViewProps.cameraId != newViewProps.cameraId){
+        _view.cameraId = RCTNSStringFromString(newViewProps.cameraId);
+        [changedProps addObject:@"cameraId"];
+    }
+    if(oldViewProps.enableDepthData != newViewProps.enableDepthData){
+        _view.enableDepthData = newViewProps.enableDepthData;
+        [changedProps addObject:@"enableDepthData"];
+    }
+    if(oldViewProps.enableHighQualityPhotos != newViewProps.enableHighQualityPhotos){
+        _view.enableHighQualityPhotos = [NSNumber numberWithBool:newViewProps.enableHighQualityPhotos];
+        [changedProps addObject:@"enableHighQualityPhotos"];
+    }
+    if(oldViewProps.enablePortraitEffectsMatteDelivery != newViewProps.enablePortraitEffectsMatteDelivery){
+        _view.enablePortraitEffectsMatteDelivery = newViewProps.enablePortraitEffectsMatteDelivery;
+        [changedProps addObject:@"enablePortraitEffectsMatteDelivery"];
+    }
+    if(oldViewProps.photo != newViewProps.photo){
+        _view.photo = [NSNumber numberWithBool:newViewProps.photo];
+        [changedProps addObject:@"photo"];
+    }
+    if(oldViewProps.video != newViewProps.video){
+        _view.video = [NSNumber numberWithBool:newViewProps.video];
+        [changedProps addObject:@"video"];
+    }
+    if(oldViewProps.audio != newViewProps.audio){
+        _view.audio = [NSNumber numberWithBool:newViewProps.audio];
+        [changedProps addObject:@"audio"];
+    }
+    if(oldViewProps.enableFrameProcessor != newViewProps.enableFrameProcessor){
+        _view.enableFrameProcessor = newViewProps.enableFrameProcessor;
+        [changedProps addObject:@"enableFrameProcessor"];
+    }
+    if(oldViewProps.fps != newViewProps.fps){
+        _view.fps = [NSNumber numberWithInt:newViewProps.fps];
+        [changedProps addObject:@"fps"];
+    }
+    if(oldViewProps.frameProcessorFps != newViewProps.frameProcessorFps){
+        _view.frameProcessorFps = [NSNumber numberWithInt:newViewProps.frameProcessorFps];
+        [changedProps addObject:@"frameProcessorFps"];
+    }
+    if(oldViewProps.hdr != newViewProps.hdr){
+        _view.hdr = [NSNumber numberWithInt:newViewProps.hdr];
+        [changedProps addObject:@"hdr"];
+    }
+    if(oldViewProps.lowLightBoost != newViewProps.lowLightBoost){
+        _view.lowLightBoost = [NSNumber numberWithInt:newViewProps.lowLightBoost];
+        [changedProps addObject:@"lowLightBoost"];
+    }
+    if(oldViewProps.colorSpace != newViewProps.colorSpace){
+        _view.colorSpace = RCTNSStringFromString(newViewProps.colorSpace);
+        [changedProps addObject:@"colorSpace"];
+    }
+    if(oldViewProps.videoStabilizationMode != newViewProps.videoStabilizationMode){
+        _view.videoStabilizationMode = RCTNSStringFromString(newViewProps.videoStabilizationMode);
+        [changedProps addObject:@"videoStabilizationMode"];
+    }
+    if(oldViewProps.preset != newViewProps.preset){ // Empty preset string breaks starting of the session
+        _view.preset = RCTNSStringFromString(newViewProps.preset);
+        [changedProps addObject:@"preset"];
+    }
+    if(oldViewProps.torch != newViewProps.torch){
+        _view.torch = RCTNSStringFromString(newViewProps.torch);
+        [changedProps addObject:@"torch"];
+    }
+    if(oldViewProps.orientation != newViewProps.orientation){
+        _view.orientation = RCTNSStringFromString(newViewProps.orientation);
+        [changedProps addObject:@"orientation"];
+    }
+    if(oldViewProps.zoom != newViewProps.zoom){
+        _view.zoom = [NSNumber numberWithDouble:newViewProps.zoom];
+        [changedProps addObject:@"zoom"];
+    }
+    if(oldViewProps.enableZoomGesture != newViewProps.enableZoomGesture){
+        _view.enableZoomGesture = newViewProps.enableZoomGesture;
+        [changedProps addObject:@"enableZoomGesture"];
+    }
+    
+        
+    if(_view.format == nil){
+        _view.format =[ [NSMutableDictionary alloc] init];
+    }
+    
+    //Checking format props, TODO: find cleaner way to do it
+    if(oldViewProps.format.autoFocusSystem != newViewProps.format.autoFocusSystem){
+        [_view.format setValue:RCTNSStringFromString(newViewProps.format.autoFocusSystem) forKey:@"autoFocusSystem"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.pixelFormat != newViewProps.format.pixelFormat){
+        [_view.format setValue:RCTNSStringFromString(newViewProps.format.pixelFormat) forKey:@"pixelFormat"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.videoStabilizationModes.size() != newViewProps.format.videoStabilizationModes.size()){
+        NSMutableArray* newVideoStabilizationModes = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.format.videoStabilizationModes.size(); i++){
+            [newVideoStabilizationModes addObject:RCTNSStringFromString(newViewProps.format.videoStabilizationModes.at(i))];
+        }
+        [_view.format setValue:newVideoStabilizationModes forKey:@"videoStabilizationModes"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.colorSpaces.size() != newViewProps.format.colorSpaces.size()){
+        NSMutableArray* newColorSpaces = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.format.colorSpaces.size(); i++){
+            [newColorSpaces addObject:RCTNSStringFromString(newViewProps.format.colorSpaces.at(i))];
+        }
+        [_view.format setValue:newColorSpaces forKey:@"colorSpaces"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.frameRateRanges.size() != newViewProps.format.frameRateRanges.size()){
+        NSMutableArray* newFrameRateRanges = [[NSMutableArray alloc] init];
+        for(int i = 0; i < newViewProps.format.frameRateRanges.size(); i++){
+            [newFrameRateRanges addObject:@{@"minFrameRate": [NSNumber numberWithInt:newViewProps.format.frameRateRanges.at(i).minFrameRate], @"maxFrameRate": [NSNumber numberWithInt:newViewProps.format.frameRateRanges.at(i).maxFrameRate]}];
+        }
+        [_view.format setValue:newFrameRateRanges forKey:@"frameRateRanges"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.photoHeight != newViewProps.format.photoHeight){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.photoHeight] forKey:@"photoHeight"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.photoWidth != newViewProps.format.photoWidth){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.photoWidth] forKey:@"photoWidth"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.videoHeight != newViewProps.format.videoHeight){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.videoHeight] forKey:@"videoHeight"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.videoWidth != newViewProps.format.videoWidth){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.videoWidth] forKey:@"videoWidth"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.maxISO != newViewProps.format.maxISO){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.maxISO] forKey:@"maxISO"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.minISO != newViewProps.format.minISO){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.minISO] forKey:@"minISO"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.fieldOfView != newViewProps.format.fieldOfView){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.fieldOfView] forKey:@"fieldOfView"];
+        [changedProps addObject:@"format"];
+    }
+    if(oldViewProps.format.maxZoom != newViewProps.format.maxZoom){
+        [_view.format setValue:[NSNumber numberWithDouble:newViewProps.format.maxZoom] forKey:@"maxZoom"];
+        [changedProps addObject:@"format"];
+    }
+    
+    if(oldViewProps.format.isHighestPhotoQualitySupported != newViewProps.format.isHighestPhotoQualitySupported){
+        NSNumber* isHighestPhotoQualitySupported = newViewProps.format.isHighestPhotoQualitySupported ? @1 : @0;
+        [_view.format setValue:isHighestPhotoQualitySupported forKey:@"isHighestPhotoQualitySupported"];
+        [changedProps addObject:@"format"];
+    }
+
+    if(oldViewProps.format.supportsVideoHDR != newViewProps.format.supportsVideoHDR){
+        NSNumber* supportsVideoHDR = newViewProps.format.supportsVideoHDR ? @1 : @0;
+        [_view.format setValue:supportsVideoHDR forKey:@"supportsVideoHDR"];
+        [changedProps addObject:@"format"];
+    }
+
+    [_view didSetProps:changedProps];
+
+    [super updateProps:props oldProps:oldProps];
+}
+
+- (void)onViewReady{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onViewReady( CameraViewEventEmitter::OnViewReady{});
+    }
+}
+
+- (void)onErrorWithError:(NSDictionary *)error{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onError( CameraViewEventEmitter::OnError{
+            .code = std::string([(error != nil ? [error objectForKey:@"code"] : @"") UTF8String]),
+            .message = std::string([(error != nil ? [error objectForKey:@"message"] : @"") UTF8String]),
+            .cause = {
+                .code = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"code"] : @"") UTF8String]), // TODO: Further secure type safety to prevent crashes
+                .domain = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"domain"]  : @"") UTF8String]),
+                .message = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"message"]  : @"") UTF8String]),
+                .details = std::string([(error != nil ? [[error objectForKey:@"cause"] objectForKey:@"details"]  : @"") UTF8String])
+            }
+        });
+    }
+}
+
+- (void)onInitialized{
+    if(_eventEmitter){
+        std::dynamic_pointer_cast<const CameraViewEventEmitter>(_eventEmitter)
+        ->onInitialized( CameraViewEventEmitter::OnInitialized{});
+    }
+}
+
+Class<RCTComponentViewProtocol> CameraViewCls(void)
+{
+    return RNCameraView.class;
+}
+
+@end
+#endif
diff --git a/node_modules/react-native-vision-camera/ios/React Utils/JSIUtils.mm b/node_modules/react-native-vision-camera/ios/React Utils/JSIUtils.mm
index adbb762..dd4027f 100644
--- a/node_modules/react-native-vision-camera/ios/React Utils/JSIUtils.mm	
+++ b/node_modules/react-native-vision-camera/ios/React Utils/JSIUtils.mm	
@@ -20,8 +20,6 @@
 #import <ReactCommon/CallInvoker.h>
 #import <React/RCTBridge.h>
 #import <ReactCommon/TurboModuleUtils.h>
-#import "../Frame Processor/Frame.h"
-#import "../Frame Processor/FrameHostObject.h"
 
 using namespace facebook;
 using namespace facebook::react;
@@ -76,10 +74,8 @@
     return convertNSArrayToJSIArray(runtime, (NSArray *)value);
   } else if (value == (id)kCFNull) {
     return jsi::Value::null();
-  } else if ([value isKindOfClass:[Frame class]]) {
-    auto frameHostObject = std::make_shared<FrameHostObject>((Frame*)value);
-    return jsi::Object::createFromHostObject(runtime, frameHostObject);
   }
+
   return jsi::Value::undefined();
 }
 
@@ -157,13 +153,14 @@ id convertJSIValueToObjCObject(jsi::Runtime &runtime, const jsi::Value &value, s
     if (o.isFunction(runtime)) {
       return convertJSIFunctionToCallback(runtime, std::move(o.getFunction(runtime)), jsInvoker);
     }
-    if (o.isHostObject(runtime)) {
-      auto hostObject = o.asHostObject(runtime);
-      auto frame = dynamic_cast<FrameHostObject*>(hostObject.get());
-      if (frame != nullptr) {
-        return frame->frame;
-      }
-    }
+    // Frame disabled because of reanimated
+    // if (o.isHostObject(runtime)) {
+    //   auto hostObject = o.asHostObject(runtime);
+    //   auto frame = dynamic_cast<FrameHostObject*>(hostObject.get());
+    //   if (frame != nullptr) {
+    //     return frame->frame;
+    //   }
+    // }
     return convertJSIObjectToNSDictionary(runtime, o, jsInvoker);
   }
 
diff --git a/node_modules/react-native-vision-camera/ios/VisionCamera.h b/node_modules/react-native-vision-camera/ios/VisionCamera.h
new file mode 100644
index 0000000..f896bd6
--- /dev/null
+++ b/node_modules/react-native-vision-camera/ios/VisionCamera.h
@@ -0,0 +1,13 @@
+//
+//  VisionCamera.h
+//  VisionCamera
+//
+//  Created by Dominik on 19/10/2023.
+//  Copyright Â© 2023 mrousavy. All rights reserved.
+//
+
+#ifndef VisionCamera_h
+#define VisionCamera_h
+
+
+#endif /* VisionCamera_h */
diff --git a/node_modules/react-native-vision-camera/ios/VisionCamera.xcodeproj/project.pbxproj b/node_modules/react-native-vision-camera/ios/VisionCamera.xcodeproj/project.pbxproj
index bda8f78..ed6966b 100644
--- a/node_modules/react-native-vision-camera/ios/VisionCamera.xcodeproj/project.pbxproj
+++ b/node_modules/react-native-vision-camera/ios/VisionCamera.xcodeproj/project.pbxproj
@@ -7,12 +7,11 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
-		B80C0E00260BDDF7001699AB /* FrameProcessorPluginRegistry.mm in Sources */ = {isa = PBXBuildFile; fileRef = B80C0DFF260BDDF7001699AB /* FrameProcessorPluginRegistry.mm */; };
+		B4A25FB62A6E8BEF00EF5A3F /* CameraModule.mm in Sources */ = {isa = PBXBuildFile; fileRef = B4DC400B2A44685E001326CA /* CameraModule.mm */; };
+		B4DC40092A430B8C001326CA /* RNCameraView.mm in Sources */ = {isa = PBXBuildFile; fileRef = B4DC40082A430B8C001326CA /* RNCameraView.mm */; };
 		B80E06A0266632F000728644 /* AVAudioSession+updateCategory.swift in Sources */ = {isa = PBXBuildFile; fileRef = B80E069F266632F000728644 /* AVAudioSession+updateCategory.swift */; };
-		B8103E1C25FF553B007A1684 /* FrameProcessorUtils.mm in Sources */ = {isa = PBXBuildFile; fileRef = B8103E1B25FF553B007A1684 /* FrameProcessorUtils.mm */; };
 		B81BE1BF26B936FF002696CC /* AVCaptureDevice.Format+videoDimensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = B81BE1BE26B936FF002696CC /* AVCaptureDevice.Format+videoDimensions.swift */; };
 		B82FBA962614B69D00909718 /* RCTBridge+runOnJS.mm in Sources */ = {isa = PBXBuildFile; fileRef = B82FBA952614B69D00909718 /* RCTBridge+runOnJS.mm */; };
-		B84760A62608EE7C004C3180 /* FrameHostObject.mm in Sources */ = {isa = PBXBuildFile; fileRef = B84760A52608EE7C004C3180 /* FrameHostObject.mm */; };
 		B84760DF2608F57D004C3180 /* CameraQueues.swift in Sources */ = {isa = PBXBuildFile; fileRef = B84760DE2608F57D004C3180 /* CameraQueues.swift */; };
 		B864005027849A2400E9D2CA /* UIInterfaceOrientation+descriptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = B864004F27849A2400E9D2CA /* UIInterfaceOrientation+descriptor.swift */; };
 		B86400522784A23400E9D2CA /* CameraView+Orientation.swift in Sources */ = {isa = PBXBuildFile; fileRef = B86400512784A23400E9D2CA /* CameraView+Orientation.swift */; };
@@ -23,7 +22,7 @@
 		B882721026AEB1A100B14107 /* AVCaptureConnection+setInterfaceOrientation.swift in Sources */ = {isa = PBXBuildFile; fileRef = B882720F26AEB1A100B14107 /* AVCaptureConnection+setInterfaceOrientation.swift */; };
 		B887518525E0102000DB86D6 /* PhotoCaptureDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887515C25E0102000DB86D6 /* PhotoCaptureDelegate.swift */; };
 		B887518625E0102000DB86D6 /* CameraView+RecordVideo.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887515D25E0102000DB86D6 /* CameraView+RecordVideo.swift */; };
-		B887518725E0102000DB86D6 /* CameraViewManager.m in Sources */ = {isa = PBXBuildFile; fileRef = B887515F25E0102000DB86D6 /* CameraViewManager.m */; };
+		B887518725E0102000DB86D6 /* CameraViewManager.mm in Sources */ = {isa = PBXBuildFile; fileRef = B887515F25E0102000DB86D6 /* CameraViewManager.mm */; };
 		B887518925E0102000DB86D6 /* Collection+safe.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887516225E0102000DB86D6 /* Collection+safe.swift */; };
 		B887518A25E0102000DB86D6 /* AVCaptureDevice+neutralZoom.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887516325E0102000DB86D6 /* AVCaptureDevice+neutralZoom.swift */; };
 		B887518B25E0102000DB86D6 /* AVCaptureDevice.Format+isBetterThan.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887516425E0102000DB86D6 /* AVCaptureDevice.Format+isBetterThan.swift */; };
@@ -56,7 +55,6 @@
 		B88751A925E0102000DB86D6 /* CameraView.swift in Sources */ = {isa = PBXBuildFile; fileRef = B887518425E0102000DB86D6 /* CameraView.swift */; };
 		B88B47472667C8E00091F538 /* AVCaptureSession+setVideoStabilizationMode.swift in Sources */ = {isa = PBXBuildFile; fileRef = B88B47462667C8E00091F538 /* AVCaptureSession+setVideoStabilizationMode.swift */; };
 		B8994E6C263F03E100069589 /* JSIUtils.mm in Sources */ = {isa = PBXBuildFile; fileRef = B8994E6B263F03E100069589 /* JSIUtils.mm */; };
-		B8A751D82609E4B30011C623 /* FrameProcessorRuntimeManager.mm in Sources */ = {isa = PBXBuildFile; fileRef = B8A751D72609E4B30011C623 /* FrameProcessorRuntimeManager.mm */; };
 		B8BD3BA2266E22D2006C80A2 /* Callback.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8BD3BA1266E22D2006C80A2 /* Callback.swift */; };
 		B8D22CDC2642DB4D00234472 /* AVAssetWriterInputPixelBufferAdaptor+initWithVideoSettings.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8D22CDB2642DB4D00234472 /* AVAssetWriterInputPixelBufferAdaptor+initWithVideoSettings.swift */; };
 		B8DB3BC8263DC28C004C18D7 /* AVAssetWriter.Status+descriptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8DB3BC7263DC28C004C18D7 /* AVAssetWriter.Status+descriptor.swift */; };
@@ -78,21 +76,16 @@
 
 /* Begin PBXFileReference section */
 		134814201AA4EA6300B7C361 /* libVisionCamera.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libVisionCamera.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		B80416F026AB16E8000DEB6A /* VisionCameraScheduler.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = VisionCameraScheduler.mm; sourceTree = "<group>"; };
-		B80416F126AB16F3000DEB6A /* VisionCameraScheduler.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = VisionCameraScheduler.h; sourceTree = "<group>"; };
-		B80C0DFE260BDD97001699AB /* FrameProcessorPluginRegistry.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameProcessorPluginRegistry.h; sourceTree = "<group>"; };
-		B80C0DFF260BDDF7001699AB /* FrameProcessorPluginRegistry.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = FrameProcessorPluginRegistry.mm; sourceTree = "<group>"; };
-		B80D67A825FA25380008FE8D /* FrameProcessorCallback.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameProcessorCallback.h; sourceTree = "<group>"; };
+		B46705F02AE14988002C6D29 /* VisionCamera.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = VisionCamera.h; sourceTree = "<group>"; };
+		B4DC40072A430B8C001326CA /* RNCameraView.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; path = RNCameraView.h; sourceTree = "<group>"; };
+		B4DC40082A430B8C001326CA /* RNCameraView.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = RNCameraView.mm; sourceTree = "<group>"; };
+		B4DC400B2A44685E001326CA /* CameraModule.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = CameraModule.mm; sourceTree = "<group>"; };
+		B4DC400C2A44685E001326CA /* CameraModule.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; path = CameraModule.h; sourceTree = "<group>"; };
 		B80E069F266632F000728644 /* AVAudioSession+updateCategory.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVAudioSession+updateCategory.swift"; sourceTree = "<group>"; };
-		B8103E1B25FF553B007A1684 /* FrameProcessorUtils.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = FrameProcessorUtils.mm; sourceTree = "<group>"; };
-		B8103E1E25FF5550007A1684 /* FrameProcessorUtils.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameProcessorUtils.h; sourceTree = "<group>"; };
-		B8103E5725FF56F0007A1684 /* Frame.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Frame.h; sourceTree = "<group>"; };
 		B81BE1BE26B936FF002696CC /* AVCaptureDevice.Format+videoDimensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVCaptureDevice.Format+videoDimensions.swift"; sourceTree = "<group>"; };
 		B81D41EF263C86F900B041FD /* JSIUtils.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = JSIUtils.h; sourceTree = "<group>"; };
 		B82FBA942614B69D00909718 /* RCTBridge+runOnJS.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "RCTBridge+runOnJS.h"; sourceTree = "<group>"; };
 		B82FBA952614B69D00909718 /* RCTBridge+runOnJS.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = "RCTBridge+runOnJS.mm"; sourceTree = "<group>"; };
-		B84760A22608EE38004C3180 /* FrameHostObject.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameHostObject.h; sourceTree = "<group>"; };
-		B84760A52608EE7C004C3180 /* FrameHostObject.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = FrameHostObject.mm; sourceTree = "<group>"; };
 		B84760DE2608F57D004C3180 /* CameraQueues.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CameraQueues.swift; sourceTree = "<group>"; };
 		B84C10592694A182006EFA70 /* MakeJSIRuntime.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = MakeJSIRuntime.h; sourceTree = "<group>"; };
 		B864004F27849A2400E9D2CA /* UIInterfaceOrientation+descriptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UIInterfaceOrientation+descriptor.swift"; sourceTree = "<group>"; };
@@ -105,8 +98,7 @@
 		B882720F26AEB1A100B14107 /* AVCaptureConnection+setInterfaceOrientation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVCaptureConnection+setInterfaceOrientation.swift"; sourceTree = "<group>"; };
 		B887515C25E0102000DB86D6 /* PhotoCaptureDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = PhotoCaptureDelegate.swift; sourceTree = "<group>"; };
 		B887515D25E0102000DB86D6 /* CameraView+RecordVideo.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "CameraView+RecordVideo.swift"; sourceTree = "<group>"; };
-		B887515E25E0102000DB86D6 /* CameraBridge.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CameraBridge.h; sourceTree = "<group>"; };
-		B887515F25E0102000DB86D6 /* CameraViewManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CameraViewManager.m; sourceTree = "<group>"; };
+		B887515F25E0102000DB86D6 /* CameraViewManager.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = CameraViewManager.mm; sourceTree = "<group>"; };
 		B887516225E0102000DB86D6 /* Collection+safe.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "Collection+safe.swift"; sourceTree = "<group>"; };
 		B887516325E0102000DB86D6 /* AVCaptureDevice+neutralZoom.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "AVCaptureDevice+neutralZoom.swift"; sourceTree = "<group>"; };
 		B887516425E0102000DB86D6 /* AVCaptureDevice.Format+isBetterThan.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "AVCaptureDevice.Format+isBetterThan.swift"; sourceTree = "<group>"; };
@@ -137,18 +129,13 @@
 		B887518225E0102000DB86D6 /* CameraView+Zoom.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "CameraView+Zoom.swift"; sourceTree = "<group>"; };
 		B887518325E0102000DB86D6 /* CameraError.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = CameraError.swift; sourceTree = "<group>"; };
 		B887518425E0102000DB86D6 /* CameraView.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = CameraView.swift; sourceTree = "<group>"; };
-		B88873E5263D46C7008B1D0E /* FrameProcessorPlugin.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameProcessorPlugin.h; sourceTree = "<group>"; };
 		B88B47462667C8E00091F538 /* AVCaptureSession+setVideoStabilizationMode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVCaptureSession+setVideoStabilizationMode.swift"; sourceTree = "<group>"; };
-		B8948BDF26DCEE2B00B430E2 /* FrameProcessorPerformanceDataCollector.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FrameProcessorPerformanceDataCollector.swift; sourceTree = "<group>"; };
 		B8994E6B263F03E100069589 /* JSIUtils.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = JSIUtils.mm; sourceTree = "<group>"; };
-		B8A751D62609E4980011C623 /* FrameProcessorRuntimeManager.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FrameProcessorRuntimeManager.h; sourceTree = "<group>"; };
-		B8A751D72609E4B30011C623 /* FrameProcessorRuntimeManager.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = FrameProcessorRuntimeManager.mm; sourceTree = "<group>"; };
 		B8BD3BA1266E22D2006C80A2 /* Callback.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Callback.swift; sourceTree = "<group>"; };
 		B8D22CDB2642DB4D00234472 /* AVAssetWriterInputPixelBufferAdaptor+initWithVideoSettings.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVAssetWriterInputPixelBufferAdaptor+initWithVideoSettings.swift"; sourceTree = "<group>"; };
 		B8DB3BC7263DC28C004C18D7 /* AVAssetWriter.Status+descriptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVAssetWriter.Status+descriptor.swift"; sourceTree = "<group>"; };
 		B8DB3BC9263DC4D8004C18D7 /* RecordingSession.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RecordingSession.swift; sourceTree = "<group>"; };
 		B8DB3BCB263DC97E004C18D7 /* AVFileType+descriptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AVFileType+descriptor.swift"; sourceTree = "<group>"; };
-		B8F7DDD1266F715D00120533 /* Frame.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = Frame.m; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -173,8 +160,9 @@
 		58B511D21A9E6C8500147676 = {
 			isa = PBXGroup;
 			children = (
-				B8DCF2D725EA940700EA5C72 /* Frame Processor */,
-				B887515E25E0102000DB86D6 /* CameraBridge.h */,
+				B46705F02AE14988002C6D29 /* VisionCamera.h */,
+				B4DC400B2A44685E001326CA /* CameraModule.mm */,
+				B4DC400C2A44685E001326CA /* CameraModule.h */,
 				B84760DE2608F57D004C3180 /* CameraQueues.swift */,
 				B887518325E0102000DB86D6 /* CameraError.swift */,
 				B887518425E0102000DB86D6 /* CameraView.swift */,
@@ -184,8 +172,10 @@
 				B887515D25E0102000DB86D6 /* CameraView+RecordVideo.swift */,
 				B887517125E0102000DB86D6 /* CameraView+TakePhoto.swift */,
 				B887518225E0102000DB86D6 /* CameraView+Zoom.swift */,
+				B4DC40072A430B8C001326CA /* RNCameraView.h */,
+				B4DC40082A430B8C001326CA /* RNCameraView.mm */,
 				B86400512784A23400E9D2CA /* CameraView+Orientation.swift */,
-				B887515F25E0102000DB86D6 /* CameraViewManager.m */,
+				B887515F25E0102000DB86D6 /* CameraViewManager.mm */,
 				B887518125E0102000DB86D6 /* CameraViewManager.swift */,
 				B8DB3BC9263DC4D8004C18D7 /* RecordingSession.swift */,
 				B887515C25E0102000DB86D6 /* PhotoCaptureDelegate.swift */,
@@ -258,28 +248,6 @@
 			path = Parsers;
 			sourceTree = "<group>";
 		};
-		B8DCF2D725EA940700EA5C72 /* Frame Processor */ = {
-			isa = PBXGroup;
-			children = (
-				B80D67A825FA25380008FE8D /* FrameProcessorCallback.h */,
-				B8103E1E25FF5550007A1684 /* FrameProcessorUtils.h */,
-				B8103E1B25FF553B007A1684 /* FrameProcessorUtils.mm */,
-				B8103E5725FF56F0007A1684 /* Frame.h */,
-				B8F7DDD1266F715D00120533 /* Frame.m */,
-				B84760A22608EE38004C3180 /* FrameHostObject.h */,
-				B84760A52608EE7C004C3180 /* FrameHostObject.mm */,
-				B8A751D62609E4980011C623 /* FrameProcessorRuntimeManager.h */,
-				B8A751D72609E4B30011C623 /* FrameProcessorRuntimeManager.mm */,
-				B80C0DFE260BDD97001699AB /* FrameProcessorPluginRegistry.h */,
-				B80C0DFF260BDDF7001699AB /* FrameProcessorPluginRegistry.mm */,
-				B88873E5263D46C7008B1D0E /* FrameProcessorPlugin.h */,
-				B80416F026AB16E8000DEB6A /* VisionCameraScheduler.mm */,
-				B80416F126AB16F3000DEB6A /* VisionCameraScheduler.h */,
-				B8948BDF26DCEE2B00B430E2 /* FrameProcessorPerformanceDataCollector.swift */,
-			);
-			path = "Frame Processor";
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -385,13 +353,15 @@
 				B88751A225E0102000DB86D6 /* AVCaptureColorSpace+descriptor.swift in Sources */,
 				B887518925E0102000DB86D6 /* Collection+safe.swift in Sources */,
 				B887519125E0102000DB86D6 /* AVCaptureDevice.Format+toDictionary.swift in Sources */,
+				B4DC40092A430B8C001326CA /* RNCameraView.mm in Sources */,
+				B4A25FB62A6E8BEF00EF5A3F /* CameraModule.mm in Sources */,
 				B887519725E0102000DB86D6 /* CameraView+TakePhoto.swift in Sources */,
 				B887519825E0102000DB86D6 /* EnumParserError.swift in Sources */,
 				B887518C25E0102000DB86D6 /* AVCaptureDevice+isMultiCam.swift in Sources */,
 				B887518D25E0102000DB86D6 /* AVCaptureDevice+physicalDevices.swift in Sources */,
 				B887519625E0102000DB86D6 /* Promise.swift in Sources */,
 				B8DB3BC8263DC28C004C18D7 /* AVAssetWriter.Status+descriptor.swift in Sources */,
-				B887518725E0102000DB86D6 /* CameraViewManager.m in Sources */,
+				B887518725E0102000DB86D6 /* CameraViewManager.mm in Sources */,
 				B88751A925E0102000DB86D6 /* CameraView.swift in Sources */,
 				B887519925E0102000DB86D6 /* AVCaptureVideoStabilizationMode+descriptor.swift in Sources */,
 				B80E06A0266632F000728644 /* AVAudioSession+updateCategory.swift in Sources */,
@@ -403,16 +373,13 @@
 				B887518525E0102000DB86D6 /* PhotoCaptureDelegate.swift in Sources */,
 				B887518B25E0102000DB86D6 /* AVCaptureDevice.Format+isBetterThan.swift in Sources */,
 				B8BD3BA2266E22D2006C80A2 /* Callback.swift in Sources */,
-				B84760A62608EE7C004C3180 /* FrameHostObject.mm in Sources */,
 				B864005027849A2400E9D2CA /* UIInterfaceOrientation+descriptor.swift in Sources */,
-				B8103E1C25FF553B007A1684 /* FrameProcessorUtils.mm in Sources */,
 				B887518E25E0102000DB86D6 /* AVFrameRateRange+includes.swift in Sources */,
 				B88751A125E0102000DB86D6 /* AVCaptureDevice.Position+descriptor.swift in Sources */,
 				B882721026AEB1A100B14107 /* AVCaptureConnection+setInterfaceOrientation.swift in Sources */,
 				B86DC977260E315100FB17B2 /* CameraView+AVCaptureSession.swift in Sources */,
 				B887518A25E0102000DB86D6 /* AVCaptureDevice+neutralZoom.swift in Sources */,
 				B88751A325E0102000DB86D6 /* AVCaptureDevice.FlashMode+descriptor.swift in Sources */,
-				B8A751D82609E4B30011C623 /* FrameProcessorRuntimeManager.mm in Sources */,
 				B887519A25E0102000DB86D6 /* AVVideoCodecType+descriptor.swift in Sources */,
 				B88751A825E0102000DB86D6 /* CameraError.swift in Sources */,
 				B88751A625E0102000DB86D6 /* CameraViewManager.swift in Sources */,
@@ -425,7 +392,6 @@
 				B88751A425E0102000DB86D6 /* AVCaptureDevice.Format.AutoFocusSystem+descriptor.swift in Sources */,
 				B8DB3BCC263DC97E004C18D7 /* AVFileType+descriptor.swift in Sources */,
 				B88751A025E0102000DB86D6 /* AVAuthorizationStatus+descriptor.swift in Sources */,
-				B80C0E00260BDDF7001699AB /* FrameProcessorPluginRegistry.mm in Sources */,
 				B887519C25E0102000DB86D6 /* AVCaptureDevice.TorchMode+descriptor.swift in Sources */,
 				B8994E6C263F03E100069589 /* JSIUtils.mm in Sources */,
 				B88751A525E0102000DB86D6 /* CameraView+Focus.swift in Sources */,
@@ -485,6 +451,7 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
+				HEADER_SEARCH_PATHS = "\"${SRCROOT}\"/**";
 				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
 				MTL_ENABLE_DEBUG_INFO = YES;
 				ONLY_ACTIVE_ARCH = YES;
@@ -531,6 +498,7 @@
 				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
 				GCC_WARN_UNUSED_FUNCTION = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
+				HEADER_SEARCH_PATHS = "\"${SRCROOT}\"/**";
 				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
 				MTL_ENABLE_DEBUG_INFO = NO;
 				SDKROOT = iphoneos;
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
index ed0bdcb..2b72495 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
@@ -4,26 +4,29 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.Camera = void 0;
+
 var _react = _interopRequireDefault(require("react"));
+
 var _reactNative = require("react-native");
+
 var _CameraError = require("./CameraError");
-var _FrameProcessorContext = require("./FrameProcessorContext");
+
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-//#region Types
 
-//#endregion
+function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+
+function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
 
+//#endregion
 // NativeModules automatically resolves 'CameraView' to 'CameraViewModule'
 // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
 const CameraModule = _reactNative.NativeModules.CameraView;
-if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?");
+if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?"); //#region Camera Component
 
-//#region Camera Component
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
+ * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -49,15 +52,24 @@ if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was
  *
  * @component
  */
+
 class Camera extends _react.default.PureComponent {
   /** @internal */
-  static displayName = 'Camera';
+
   /** @internal */
-  displayName = Camera.displayName;
-  isNativeViewMounted = false;
+
   /** @internal */
   constructor(props) {
     super(props);
+
+    _defineProperty(this, "displayName", Camera.displayName);
+
+    _defineProperty(this, "lastFrameProcessor", void 0);
+
+    _defineProperty(this, "isNativeViewMounted", false);
+
+    _defineProperty(this, "ref", void 0);
+
     this.onViewReady = this.onViewReady.bind(this);
     this.onInitialized = this.onInitialized.bind(this);
     this.onError = this.onError.bind(this);
@@ -65,15 +77,17 @@ class Camera extends _react.default.PureComponent {
     this.ref = /*#__PURE__*/_react.default.createRef();
     this.lastFrameProcessor = undefined;
   }
+
   get handle() {
     const nodeHandle = (0, _reactNative.findNodeHandle)(this.ref.current);
+
     if (nodeHandle == null || nodeHandle === -1) {
       throw new _CameraError.CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
     }
+
     return nodeHandle;
-  }
+  } //#region View-specific functions (UIViewManager)
 
-  //#region View-specific functions (UIViewManager)
   /**
    * Take a single photo and write it's content to a temporary file.
    *
@@ -87,14 +101,15 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
+
+
   async takePhoto(options) {
     try {
-      return await CameraModule.takePhoto(this.handle, options ?? {});
+      return await CameraModule.takePhoto(this.handle, options !== null && options !== void 0 ? options : {});
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Take a snapshot of the current preview view.
    *
@@ -111,15 +126,17 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
+
+
   async takeSnapshot(options) {
     if (_reactNative.Platform.OS !== 'android') throw new _CameraError.CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${_reactNative.Platform.OS}!`);
+
     try {
-      return await CameraModule.takeSnapshot(this.handle, options ?? {});
+      return await CameraModule.takeSnapshot(this.handle, options !== null && options !== void 0 ? options : {});
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Start a new video recording.
    *
@@ -142,6 +159,8 @@ class Camera extends _react.default.PureComponent {
    * }, 5000)
    * ```
    */
+
+
   startRecording(options) {
     const {
       onRecordingError,
@@ -149,18 +168,19 @@ class Camera extends _react.default.PureComponent {
       ...passThroughOptions
     } = options;
     if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
+
     const onRecordCallback = (video, error) => {
       if (error != null) return onRecordingError(error);
       if (video != null) return onRecordingFinished(video);
-    };
-    // TODO: Use TurboModules to either make this a sync invokation, or make it async.
+    }; // TODO: Use TurboModules to either make this a sync invokation, or make it async.
+
+
     try {
       CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Pauses the current video recording.
    *
@@ -181,6 +201,8 @@ class Camera extends _react.default.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
+
+
   async pauseRecording() {
     try {
       return await CameraModule.pauseRecording(this.handle);
@@ -188,7 +210,6 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Resumes a currently paused video recording.
    *
@@ -209,6 +230,8 @@ class Camera extends _react.default.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
+
+
   async resumeRecording() {
     try {
       return await CameraModule.resumeRecording(this.handle);
@@ -216,7 +239,6 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Stop the current video recording.
    *
@@ -230,6 +252,8 @@ class Camera extends _react.default.PureComponent {
    * }, 5000)
    * ```
    */
+
+
   async stopRecording() {
     try {
       return await CameraModule.stopRecording(this.handle);
@@ -237,7 +261,6 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
-
   /**
    * Focus the camera to a specific point in the coordinate system.
    * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,
@@ -256,14 +279,15 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
+
+
   async focus(point) {
     try {
       return await CameraModule.focus(this.handle, point);
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  }
-  //#endregion
+  } //#endregion
 
   /**
    * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).
@@ -274,6 +298,8 @@ class Camera extends _react.default.PureComponent {
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error
    * @platform iOS
    */
+
+
   async getAvailableVideoCodecs(fileType) {
     if (_reactNative.Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.
 
@@ -282,9 +308,8 @@ class Camera extends _react.default.PureComponent {
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  }
+  } //#region Static Functions (NativeModule)
 
-  //#region Static Functions (NativeModule)
   /**
    * Get a list of all available camera devices on the current phone.
    *
@@ -300,6 +325,8 @@ class Camera extends _react.default.PureComponent {
    * }
    * ```
    */
+
+
   static async getAvailableCameraDevices() {
     try {
       return await CameraModule.getAvailableCameraDevices();
@@ -315,6 +342,8 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async getCameraPermissionStatus() {
     try {
       return await CameraModule.getCameraPermissionStatus();
@@ -330,6 +359,8 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async getMicrophonePermissionStatus() {
     try {
       return await CameraModule.getMicrophonePermissionStatus();
@@ -345,6 +376,8 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async requestCameraPermission() {
     try {
       return await CameraModule.requestCameraPermission();
@@ -360,74 +393,86 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async requestMicrophonePermission() {
     try {
       return await CameraModule.requestMicrophonePermission();
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  }
-  //#endregion
-
+  } //#endregion
   //#region Events (Wrapped to maintain reference equality)
+
+
   onError(event) {
     if (this.props.onError != null) {
       const error = event.nativeEvent;
       const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;
-      this.props.onError(
-      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+      this.props.onError( // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
       new _CameraError.CameraRuntimeError(error.code, error.message, cause));
     }
   }
+
   onInitialized() {
     var _this$props$onInitial, _this$props;
+
     (_this$props$onInitial = (_this$props = this.props).onInitialized) === null || _this$props$onInitial === void 0 ? void 0 : _this$props$onInitial.call(_this$props);
   }
+
   onFrameProcessorPerformanceSuggestionAvailable(event) {
     if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null) this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);
-  }
-  //#endregion
-
+  } //#endregion
   //#region Lifecycle
+
   /** @internal */
+
+
   assertFrameProcessorsEnabled() {
     // @ts-expect-error JSI functions aren't typed
     if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {
-      throw new _CameraError.CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://react-native-vision-camera.com/docs/guides/troubleshooting');
+      throw new _CameraError.CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting');
     }
   }
+
   setFrameProcessor(frameProcessor) {
-    this.assertFrameProcessorsEnabled();
-    // @ts-expect-error JSI functions aren't typed
-    global.setFrameProcessor(this.handle, _FrameProcessorContext.FrameProcessorContext.createWorklet(frameProcessor), _FrameProcessorContext.FrameProcessorContext.workletRuntime);
+    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
+
+    global.setFrameProcessor(this.handle, frameProcessor);
   }
+
   unsetFrameProcessor() {
-    this.assertFrameProcessorsEnabled();
-    // @ts-expect-error JSI functions aren't typed
+    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
+
     global.unsetFrameProcessor(this.handle);
   }
+
   onViewReady() {
     this.isNativeViewMounted = true;
+
     if (this.props.frameProcessor != null) {
       // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
       this.setFrameProcessor(this.props.frameProcessor);
       this.lastFrameProcessor = this.props.frameProcessor;
     }
   }
-
   /** @internal */
+
+
   componentDidUpdate() {
     if (!this.isNativeViewMounted) return;
     const frameProcessor = this.props.frameProcessor;
+
     if (frameProcessor !== this.lastFrameProcessor) {
       // frameProcessor argument identity changed. Update native to reflect the change.
       if (frameProcessor != null) this.setFrameProcessor(frameProcessor);else this.unsetFrameProcessor();
       this.lastFrameProcessor = frameProcessor;
     }
-  }
-  //#endregion
+  } //#endregion
 
   /** @internal */
+
+
   render() {
     // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
     const {
@@ -447,12 +492,15 @@ class Camera extends _react.default.PureComponent {
       enableFrameProcessor: frameProcessor != null
     }));
   }
-}
-//#endregion
 
+} //#endregion
 // requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'
+
+
 exports.Camera = Camera;
-const NativeCameraView = (0, _reactNative.requireNativeComponent)('CameraView',
-// @ts-expect-error because the type declarations are kinda wrong, no?
+
+_defineProperty(Camera, "displayName", 'Camera');
+
+const NativeCameraView = (0, _reactNative.requireNativeComponent)('CameraView', // @ts-expect-error because the type declarations are kinda wrong, no?
 Camera);
 //# sourceMappingURL=Camera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
index 49b2996..141286c 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_CameraError","_FrameProcessorContext","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","CameraModule","NativeModules","CameraView","console","error","Camera","React","PureComponent","displayName","isNativeViewMounted","constructor","props","onViewReady","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","findNodeHandle","current","CameraRuntimeError","takePhoto","options","e","tryParseNativeCameraError","takeSnapshot","Platform","OS","CameraCaptureError","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","isErrorWithCause","code","message","_this$props$onInitial","_this$props","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","FrameProcessorContext","createWorklet","workletRuntime","componentDidUpdate","render","device","frameProcessorFps","createElement","NativeCameraView","cameraId","id","enableFrameProcessor","exports","requireNativeComponent"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["Camera.tsx"],"names":["CameraModule","NativeModules","CameraView","console","error","Camera","React","PureComponent","constructor","props","displayName","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","CameraRuntimeError","takePhoto","options","e","takeSnapshot","Platform","OS","CameraCaptureError","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","isNativeViewMounted","componentDidUpdate","render","device","frameProcessorFps","id","NativeCameraView"],"mappings":";;;;;;;AAAA;;AACA;;AAIA;;;;;;;;AA8BA;AAEA;AACA;AACA,MAAMA,YAAY,GAAGC,2BAAcC,UAAnC;AACA,IAAIF,YAAY,IAAI,IAApB,EAA0BG,OAAO,CAACC,KAAR,CAAc,uEAAd,E,CAE1B;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,MAAN,SAAqBC,eAAMC,aAA3B,CAAsD;AAC3D;;AAEA;;AAOA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAqB;AAC9B,UAAMA,KAAN;;AAD8B,yCAPlBJ,MAAM,CAACK,WAOW;;AAAA;;AAAA,iDALF,KAKE;;AAAA;;AAE9B,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKG,8CAAL,GAAsD,KAAKA,8CAAL,CAAoDH,IAApD,CAAyD,IAAzD,CAAtD;AACA,SAAKI,GAAL,gBAAWV,eAAMW,SAAN,EAAX;AACA,SAAKC,kBAAL,GAA0BC,SAA1B;AACD;;AAEiB,MAANC,MAAM,GAAkB;AAClC,UAAMC,UAAU,GAAG,iCAAe,KAAKL,GAAL,CAASM,OAAxB,CAAnB;;AACA,QAAID,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAK,CAAC,CAA1C,EAA6C;AAC3C,YAAM,IAAIE,+BAAJ,CACJ,uBADI,EAEJ,iGAFI,CAAN;AAID;;AAED,WAAOF,UAAP;AACD,GA/B0D,CAiC3D;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACwB,QAATG,SAAS,CAACC,OAAD,EAAiD;AACrE,QAAI;AACF,aAAO,MAAMzB,YAAY,CAACwB,SAAb,CAAuB,KAAKJ,MAA5B,EAAoCK,OAApC,aAAoCA,OAApC,cAAoCA,OAApC,GAA+C,EAA/C,CAAb;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC2B,QAAZC,YAAY,CAACF,OAAD,EAAoD;AAC3E,QAAIG,sBAASC,EAAT,KAAgB,SAApB,EACE,MAAM,IAAIC,+BAAJ,CAAuB,oCAAvB,EAA8D,wCAAuCF,sBAASC,EAAG,GAAjH,CAAN;;AAEF,QAAI;AACF,aAAO,MAAM7B,YAAY,CAAC2B,YAAb,CAA0B,KAAKP,MAA/B,EAAuCK,OAAvC,aAAuCA,OAAvC,cAAuCA,OAAvC,GAAkD,EAAlD,CAAb;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSK,EAAAA,cAAc,CAACN,OAAD,EAAoC;AACvD,UAAM;AAAEO,MAAAA,gBAAF;AAAoBC,MAAAA,mBAApB;AAAyC,SAAGC;AAA5C,QAAmET,OAAzE;AACA,QAAI,OAAOO,gBAAP,KAA4B,UAA5B,IAA0C,OAAOC,mBAAP,KAA+B,UAA7E,EACE,MAAM,IAAIV,+BAAJ,CAAuB,6BAAvB,EAAsD,qEAAtD,CAAN;;AAEF,UAAMY,gBAAgB,GAAG,CAACC,KAAD,EAAoBhC,KAApB,KAAyD;AAChF,UAAIA,KAAK,IAAI,IAAb,EAAmB,OAAO4B,gBAAgB,CAAC5B,KAAD,CAAvB;AACnB,UAAIgC,KAAK,IAAI,IAAb,EAAmB,OAAOH,mBAAmB,CAACG,KAAD,CAA1B;AACpB,KAHD,CALuD,CASvD;;;AACA,QAAI;AACFpC,MAAAA,YAAY,CAAC+B,cAAb,CAA4B,KAAKX,MAAjC,EAAyCc,kBAAzC,EAA6DC,gBAA7D;AACD,KAFD,CAEE,OAAOT,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC6B,QAAdW,cAAc,GAAkB;AAC3C,QAAI;AACF,aAAO,MAAMrC,YAAY,CAACqC,cAAb,CAA4B,KAAKjB,MAAjC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC8B,QAAfY,eAAe,GAAkB;AAC5C,QAAI;AACF,aAAO,MAAMtC,YAAY,CAACsC,eAAb,CAA6B,KAAKlB,MAAlC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC4B,QAAba,aAAa,GAAkB;AAC1C,QAAI;AACF,aAAO,MAAMvC,YAAY,CAACuC,aAAb,CAA2B,KAAKnB,MAAhC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,QAALc,KAAK,CAACC,KAAD,EAA8B;AAC9C,QAAI;AACF,aAAO,MAAMzC,YAAY,CAACwC,KAAb,CAAmB,KAAKpB,MAAxB,EAAgCqB,KAAhC,CAAb;AACD,KAFD,CAEE,OAAOf,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF,GA9N0D,CA+N3D;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACsC,QAAvBgB,uBAAuB,CAACC,QAAD,EAAwD;AAC1F,QAAIf,sBAASC,EA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","sourcesContent":["import React from 'react';\nimport { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';\nimport type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';\nimport type { CameraDevice } from './CameraDevice';\nimport type { ErrorWithCause } from './CameraError';\nimport { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';\nimport type { CameraProps } from './CameraProps';\nimport type { Frame } from './Frame';\nimport type { PhotoFile, TakePhotoOptions } from './PhotoFile';\nimport type { Point } from './Point';\nimport type { TakeSnapshotOptions } from './Snapshot';\nimport type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';\n\n//#region Types\nexport type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';\nexport type CameraPermissionRequestResult = 'authorized' | 'denied';\n\ninterface OnErrorEvent {\n  code: string;\n  message: string;\n  cause?: ErrorWithCause;\n}\ntype NativeCameraViewProps = Omit<\n  CameraProps,\n  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'\n> & {\n  cameraId: string;\n  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'\n  enableFrameProcessor: boolean;\n  onInitialized?: (event: NativeSyntheticEvent<void>) => void;\n  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;\n  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;\n  onViewReady: () => void;\n};\ntype RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;\n//#endregion\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst CameraModule = NativeModules.CameraView;\nif (CameraModule == null) console.error(\"Camera: Native Module 'CameraView' was null! Did you run pod install?\");\n\n//#region Camera Component\n/**\n * ### A powerful `<Camera>` component.\n *\n * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.\n *\n * The `<Camera>` component's most important (and therefore _required_) properties are:\n *\n * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using the {@linkcode useCameraDevices | useCameraDevices()} hook, or manually by using the {@linkcode Camera.getAvailableCameraDevices Camera.getAvailableCameraDevices()} function.\n * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n *\n * @example\n * ```tsx\n * function App() {\n *   const devices = useCameraDevices('wide-angle-camera')\n *   const device = devices.back\n *\n *   if (device == null) return <LoadingView />\n *   return (\n *     <Camera\n *       style={StyleSheet.absoluteFill}\n *       device={device}\n *       isActive={true}\n *     />\n *   )\n * }\n * ```\n *\n * @component\n */\nexport class Camera extends React.PureComponent<CameraProps> {\n  /** @internal */\n  static displayName = 'Camera';\n  /** @internal */\n  displayName = Camera.displayName;\n  private lastFrameProcessor: ((frame: Frame) => void) | undefined;\n  private isNativeViewMounted = false;\n\n  private readonly ref: React.RefObject<RefType>;\n\n  /** @internal */\n  constructor(props: CameraProps) {\n    super(props);\n    this.onViewReady = this.onViewReady.bind(this);\n    this.onInitialized = this.onInitialized.bind(this);\n    this.onError = this.onError.bind(this);\n    this.onFrameProcessorPerformanceSuggestionAvailable = this.onFrameProcessorPerformanceSuggestionAvailable.bind(this);\n    this.ref = React.createRef<RefType>();\n    this.lastFrameProcessor = undefined;\n  }\n\n  private get handle(): number | null {\n    const nodeHandle = findNodeHandle(this.ref.current);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new CameraRuntimeError(\n        'system/view-not-found',\n        \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\",\n      );\n    }\n\n    return nodeHandle;\n  }\n\n  //#region View-specific functions (UIViewManager)\n  /**\n   * Take a single photo and write it's content to a temporary file.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const photo = await camera.current.takePhoto({\n   *   qualityPrioritization: 'quality',\n   *   flash: 'on',\n   *   enableAutoRedEyeReduction: true\n   * })\n   * ```\n   */\n  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {\n    try {\n      return await CameraModule.takePhoto(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Take a snapshot of the current preview view.\n   *\n   * This can be used as an alternative to {@linkcode Camera.takePhoto | takePhoto()} if speed is more important than quality\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while taking a snapshot. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @platform Android\n   * @example\n   * ```ts\n   * const photo = await camera.current.takeSnapshot({\n   *   quality: 85,\n   *   skipMetadata: true\n   * })\n   * ```\n   */\n  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {\n    if (Platform.OS !== 'android')\n      throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);\n\n    try {\n      return await CameraModule.takeSnapshot(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Start a new video recording.\n   *\n   * Records in the following formats:\n   * * **iOS**: QuickTime (`.mov`)\n   * * **Android**: MPEG4 (`.mp4`)\n   *\n   * @blocking This function is synchronized/blocking.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * camera.current.startRecording({\n   *   onRecordingFinished: (video) => console.log(video),\n   *   onRecordingError: (error) => console.error(error),\n   * })\n   * setTimeout(() => {\n   *   camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public startRecording(options: RecordVideoOptions): void {\n    const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;\n    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')\n      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n\n    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {\n      if (error != null) return onRecordingError(error);\n      if (video != null) return onRecordingFinished(video);\n    };\n    // TODO: Use TurboModules to either make this a sync invokation, or make it async.\n    try {\n      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Pauses the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async pauseRecording(): Promise<void> {\n    try {\n      return await CameraModule.pauseRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Resumes a currently paused video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async resumeRecording(): Promise<void> {\n    try {\n      return await CameraModule.resumeRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Stop the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * await camera.current.startRecording()\n   * setTimeout(async () => {\n   *  const video = await camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public async stopRecording(): Promise<void> {\n    try {\n      return await CameraModule.stopRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Focus the camera to a specific point in the coordinate system.\n   * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,\n   * and expressed in Pixel on iOS and Points on Android.\n   *  * `(0, 0)` means **top left**.\n   *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n   *\n   * Make sure the value doesn't exceed the CameraView's dimensions.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * await camera.current.focus({\n   *   x: tapEvent.x,\n   *   y: tapEvent.y\n   * })\n   * ```\n   */\n  public async focus(point: Point): Promise<void> {\n    try {\n      return await CameraModule.focus(this.handle, point);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  /**\n   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).\n   * @example\n   * ```ts\n   * const codecs = await camera.current.getAvailableVideoCodecs(\"mp4\")\n   * ```\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error\n   * @platform iOS\n   */\n  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {\n    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.\n\n    try {\n      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  //#region Static Functions (NativeModule)\n  /**\n   * Get a list of all available camera devices on the current phone.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting all available camera devices. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const devices = await Camera.getAvailableCameraDevices()\n   * const filtered = devices.filter((d) => matchesMyExpectations(d))\n   * const sorted = devices.sort(sortDevicesByAmountOfCameras)\n   * return {\n   *   back: sorted.find((d) => d.position === \"back\"),\n   *   front: sorted.find((d) => d.position === \"front\")\n   * }\n   * ```\n   */\n  public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {\n    try {\n      return await CameraModule.getAvailableCameraDevices();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the camera.\n   *\n   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getCameraPermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Microphone-Recording Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the microphone.\n   *\n   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getMicrophonePermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n   *\n   * If the user has previously blocked the app from using the camera, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestCameraPermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n   *\n   * If the user has previously blocked the app from using the microphone, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestMicrophonePermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  //#region Events (Wrapped to maintain reference equality)\n  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {\n    if (this.props.onError != null) {\n      const error = event.nativeEvent;\n      const cause = isErrorWithCause(error.cause) ? error.cause : undefined;\n      this.props.onError(\n        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n        new CameraRuntimeError(error.code, error.message, cause),\n      );\n    }\n  }\n\n  private onInitialized(): void {\n    this.props.onInitialized?.();\n  }\n\n  private onFrameProcessorPerformanceSuggestionAvailable(event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>): void {\n    if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null)\n      this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);\n  }\n  //#endregion\n\n  //#region Lifecycle\n  /** @internal */\n  private assertFrameProcessorsEnabled(): void {\n    // @ts-expect-error JSI functions aren't typed\n    if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {\n      throw new CameraRuntimeError(\n        'frame-processor/unavailable',\n        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',\n      );\n    }\n  }\n\n  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.setFrameProcessor(this.handle, frameProcessor);\n  }\n\n  private unsetFrameProcessor(): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.unsetFrameProcessor(this.handle);\n  }\n\n  private onViewReady(): void {\n    this.isNativeViewMounted = true;\n    if (this.props.frameProcessor != null) {\n      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n      this.setFrameProcessor(this.props.frameProcessor);\n      this.lastFrameProcessor = this.props.frameProcessor;\n    }\n  }\n\n  /** @internal */\n  componentDidUpdate(): void {\n    if (!this.isNativeViewMounted) return;\n    const frameProcessor = this.props.frameProcessor;\n    if (frameProcessor !== this.lastFrameProcessor) {\n      // frameProcessor argument identity changed. Update native to reflect the change.\n      if (frameProcessor != null) this.setFrameProcessor(frameProcessor);\n      else this.unsetFrameProcessor();\n\n      this.lastFrameProcessor = frameProcessor;\n    }\n  }\n  //#endregion\n\n  /** @internal */\n  public render(): React.ReactNode {\n    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n    const { device, frameProcessor, frameProcessorFps, ...props } = this.props;\n    return (\n      <NativeCameraView\n        {...props}\n        frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}\n        cameraId={device.id}\n        ref={this.ref}\n        onViewReady={this.onViewReady}\n        onInitialized={this.onInitialized}\n        onError={this.onError}\n        onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}\n        enableFrameProcessor={frameProcessor != null}\n      />\n    );\n  }\n}\n//#endregion\n\n// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'\nconst NativeCameraView = requireNativeComponent<NativeCameraViewProps>(\n  'CameraView',\n  // @ts-expect-error because the type declarations are kinda wrong, no?\n  Camera,\n);\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
index c505e8c..8ce9420 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
@@ -4,6 +4,7 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.parsePhysicalDeviceTypes = void 0;
+
 /**
  * Indentifiers for a physical camera (one that actually exists on the back/front of the device)
  *
@@ -29,6 +30,7 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
     // @ts-expect-error for very obvious reasons
     return physicalDeviceTypes[0];
   }
+
   const hasWide = physicalDeviceTypes.includes('wide-angle-camera');
   const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');
   const hasTele = physicalDeviceTypes.includes('telephoto-camera');
@@ -37,7 +39,6 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
   if (hasWide && hasTele) return 'dual-camera';
   throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);
 };
-
 /**
  * Indicates a format's color space.
  *
@@ -61,30 +62,6 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
 
-/**
- * Indicates a format's autofocus system.
- *
- * * `"none"`: Indicates that autofocus is not available
- * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
- * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
- */
 
-/**
- * Indicates a format's supported video stabilization mode
- *
- * * `"off"`: Indicates that video should not be stabilized
- * * `"standard"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline
- * * `"cinematic"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode
- * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
- * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
- */
-
-/**
- * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.
- */
-
-/**
- * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function
- */
 exports.parsePhysicalDeviceTypes = parsePhysicalDeviceTypes;
 //# sourceMappingURL=CameraDevice.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
index adb18fb..4fdc944 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
@@ -1 +1 @@
-{"version":3,"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join","exports"],"sourceRoot":"../../src","sources":["CameraDevice.ts"],"mappings":";;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,wBAAwB,GACnCC,mBAA+C,IACQ;EACvD,IAAIA,mBAAmB,CAACC,MAAM,KAAK,CAAC,EAAE;IACpC;IACA,OAAOD,mBAAmB,CAAC,CAAC,CAAC;EAC/B;EAEA,MAAME,OAAO,GAAGF,mBAAmB,CAACG,QAAQ,CAAC,mBAAmB,CAAC;EACjE,MAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAAQ,CAAC,yBAAyB,CAAC;EACxE,MAAME,OAAO,GAAGL,mBAAmB,CAACG,QAAQ,CAAC,kBAAkB,CAAC;EAEhE,IAAIE,OAAO,IAAIH,OAAO,IAAIE,QAAQ,EAAE,OAAO,eAAe;EAC1D,IAAIF,OAAO,IAAIE,QAAQ,EAAE,OAAO,kBAAkB;EAClD,IAAIF,OAAO,IAAIG,OAAO,EAAE,OAAO,aAAa;EAE5C,MAAM,IAAIC,KAAK,CAAE,6CAA4CN,mBAAmB,CAACO,IAAI,CAAC,KAAK,CAAE,EAAC,CAAC;AACjG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AA0EA;AACA;AACA;AAFAC,OAAA,CAAAT,wBAAA,GAAAA,wBAAA"}
\ No newline at end of file
+{"version":3,"sources":["CameraDevice.ts"],"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,wBAAwB,GACnCC,mBADsC,IAEiB;AACvD,MAAIA,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACA,WAAOD,mBAAmB,CAAC,CAAD,CAA1B;AACD;;AAED,QAAME,OAAO,GAAGF,mBAAmB,CAACG,QAApB,CAA6B,mBAA7B,CAAhB;AACA,QAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAApB,CAA6B,yBAA7B,CAAjB;AACA,QAAME,OAAO,GAAGL,mBAAmB,CAACG,QAApB,CAA6B,kBAA7B,CAAhB;AAEA,MAAIE,OAAO,IAAIH,OAAX,IAAsBE,QAA1B,EAAoC,OAAO,eAAP;AACpC,MAAIF,OAAO,IAAIE,QAAf,EAAyB,OAAO,kBAAP;AACzB,MAAIF,OAAO,IAAIG,OAAf,EAAwB,OAAO,aAAP;AAExB,QAAM,IAAIC,KAAJ,CAAW,6CAA4CN,mBAAmB,CAACO,IAApB,CAAyB,KAAzB,CAAgC,EAAvF,CAAN;AACD,CAjBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import type { CameraPosition } from './CameraPosition';\nimport type { PixelFormat } from './PixelFormat';\n\n/**\n * Indentifiers for a physical camera (one that actually exists on the back/front of the device)\n *\n * * `\"ultra-wide-angle-camera\"`: A built-in camera with a shorter focal length than that of a wide-angle camera. (focal length between below 24mm)\n * * `\"wide-angle-camera\"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)\n * * `\"telephoto-camera\"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)\n */\nexport type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';\n\n/**\n * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).\n *\n * * `\"dual-camera\"`: A combination of wide-angle and telephoto cameras that creates a capture device.\n * * `\"dual-wide-camera\"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.\n * * `\"triple-camera\"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.\n */\nexport type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';\n\n/**\n * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.\n * @method\n */\nexport const parsePhysicalDeviceTypes = (\n  physicalDeviceTypes: PhysicalCameraDeviceType[],\n): PhysicalCameraDeviceType | LogicalCameraDeviceType => {\n  if (physicalDeviceTypes.length === 1) {\n    // @ts-expect-error for very obvious reasons\n    return physicalDeviceTypes[0];\n  }\n\n  const hasWide = physicalDeviceTypes.includes('wide-angle-camera');\n  const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');\n  const hasTele = physicalDeviceTypes.includes('telephoto-camera');\n\n  if (hasTele && hasWide && hasUltra) return 'triple-camera';\n  if (hasWide && hasUltra) return 'dual-wide-camera';\n  if (hasWide && hasTele) return 'dual-camera';\n\n  throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);\n};\n\n/**\n * Indicates a format's color space.\n *\n * #### The following colorspaces are available on iOS:\n * * `\"srgb\"`: The sGRB color space.\n * * `\"p3-d65\"`: The P3 D65 wide color space which uses Illuminant D65 as the white point\n * * `\"hlg-bt2020\"`: The BT2020 wide color space which uses Illuminant D65 as the white point and Hybrid Log-Gamma as the transfer function\n *\n * > See [\"AVCaptureColorSpace\"](https://developer.apple.com/documentation/avfoundation/avcapturecolorspace) for more information.\n *\n * #### The following colorspaces are available on Android:\n * * `\"yuv\"`: The Multi-plane Android YCbCr color space. (YUV 420_888, 422_888 or 444_888)\n * * `\"jpeg\"`: The compressed JPEG color space.\n * * `\"jpeg-depth\"`: The compressed JPEG color space including depth data.\n * * `\"raw\"`: The Camera's RAW sensor color space. (Single-channel Bayer-mosaic image, usually 16 bit)\n * * `\"heic\"`: The compressed HEIC color space.\n * * `\"private\"`: The Android private opaque image format. (The choices of the actual format and pixel data layout are entirely up to the device-specific and framework internal implementations, and may vary depending on use cases even for the same device. These buffers are not directly accessible to the application)\n * * `\"depth-16\"`: The Android dense depth image format (16 bit)\n * * `\"unknown\"`: Placeholder for an unknown image/pixel format. [Edit this file](https://github.com/mrousavy/react-native-vision-camera/edit/main/android/src/main/java/com/mrousavy/camera/parsers/ImageFormat+String.kt) to add a name for the unknown format.\n *\n * > See [\"Android Color Formats\"](https://jbit.net/Android_Colors/) for more information.\n */\nexport type ColorSpace =\n  // ios\n  | 'hlg-bt2020'\n  | 'p3-d65'\n  | 'srgb'\n  // android\n  | 'yuv'\n  | 'jpeg'\n  | 'jpeg-depth'\n  | 'raw'\n  | 'heic'\n  | 'private'\n  | 'depth-16'\n  | 'unknown';\n\n/**\n * Indicates a format's autofocus system.\n *\n * * `\"none\"`: Indicates that autofocus is not available\n * * `\"contrast-detection\"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position\n * * `\"phase-detection\"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus\n */\nexport type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';\n\n/**\n * Indicates a format's supported video stabilization mode\n *\n * * `\"off\"`: Indicates that video should not be stabilized\n * * `\"standard\"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline\n * * `\"cinematic\"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode\n * * `\"cinematic-extended\"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)\n * * `\"auto\"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically\n */\nexport type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';\n\nexport interface FrameRateRange {\n  minFrameRate: number;\n  maxFrameRate: number;\n}\n\n/**\n * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.\n */\nexport interface CameraDeviceFormat {\n  /**\n   * The height of the highest resolution a still image (photo) can be produced in\n   */\n  photoHeight: number;\n  /**\n   * The width of the highest resolution a still image (photo) can be produced in\n   */\n  photoWidth: number;\n  /**\n   * The video resolutions's height\n   */\n  videoHeight: number;\n  /**\n   * The video resolution's width\n   */\n  videoWidth: number;\n  /**\n   * A boolean value specifying whether this format supports the highest possible photo quality that can be delivered on the current platform.\n   *\n   * @platform iOS 13.0+\n   */\n  isHighestPhotoQualitySupported?: boolean;\n  /**\n   * Maximum supported ISO value\n   */\n  maxISO: number;\n  /**\n   * Minimum supported ISO value\n   */\n  minISO: number;\n  /**\n   * The video field of view in degrees\n   */\n  fieldOfView: number;\n  /**\n   * The maximum zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The available color spaces.\n   *\n   * Note: On Android, this will always be only `[\"yuv\"]`\n   */\n  colorSpaces: ColorSpace[];\n  /**\n   * Specifies whether this format supports HDR mode for video capture\n   */\n  supportsVideoHDR: boolean;\n  /**\n   * Specifies whether this format supports HDR mode for photo capture\n   */\n  supportsPhotoHDR: boolean;\n  /**\n   * All available frame rate ranges. You can query this to find the highest frame rate available\n   */\n  frameRateRanges: FrameRateRange[];\n  /**\n   * Specifies this format's auto focus system.\n   */\n  autoFocusSystem: AutoFocusSystem;\n  /**\n   * All supported video stabilization modes\n   */\n  videoStabilizationModes: VideoStabilizationMode[];\n  /**\n   * Specifies this format's pixel format. The pixel format specifies how the individual pixels are interpreted as a visual image.\n   *\n   * The most common format is `420v`. Some formats (like `x420`) are not compatible with some frame processor plugins (e.g. MLKit)\n   */\n  pixelFormat: PixelFormat;\n}\n\n/**\n * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function\n */\nexport interface CameraDevice {\n  /**\n   * The native ID of the camera device instance.\n   */\n  id: string;\n  /**\n   * The physical devices this `CameraDevice` contains.\n   *\n   * * If this camera device is a **logical camera** (combination of multiple physical cameras), there are multiple cameras in this array.\n   * * If this camera device is a **physical camera**, there is only a single element in this array.\n   *\n   * You can check if the camera is a logical multi-camera by using the `isMultiCam` property.\n   */\n  devices: PhysicalCameraDeviceType[];\n  /**\n   * Specifies the physical position of this camera. (back or front)\n   */\n  position: CameraPosition;\n  /**\n   * A friendly localized name describing the camera.\n   */\n  name: string;\n  /**\n   * Specifies whether this camera supports enabling flash for photo capture.\n   */\n  hasFlash: boolean;\n  /**\n   * Specifies whether this camera supports continuously enabling the flash to act like a torch (flash with video capture)\n   */\n  hasTorch: boolean;\n  /**\n   * A property indicating whether the device is a virtual multi-camera consisting of multiple combined physical cameras.\n   *\n   * Examples:\n   * * The Dual Camera, which supports seamlessly switching between a wide and telephoto camera while zooming and generating depth data from the disparities between the different points of view of the physical cameras.\n   * * The TrueDepth Camera, which generates depth data from disparities between a YUV camera and an Infrared camera pointed in the same direction.\n   */\n  isMultiCam: boolean;\n  /**\n   * Minimum available zoom factor (e.g. `1`)\n   */\n  minZoom: number;\n  /**\n   * Maximum available zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The zoom factor where the camera is \"neutral\".\n   *\n   * * For single-physical cameras this property is always `1.0`.\n   * * For multi cameras this property is a value between `minZoom` and `maxZoom`, where the camera is in _wide-angle_ mode and hasn't switched to the _ultra-wide-angle_ (\"fish-eye\") or telephoto camera yet.\n   *\n   * Use this value as an initial value for the zoom property if you implement custom zoom. (e.g. reanimated shared value should be initially set to this value)\n   * @example\n   * const device = ...\n   *\n   * const zoom = useSharedValue(device.neutralZoom) // <-- initial value so it doesn't start at ultra-wide\n   * const cameraProps = useAnimatedProps(() => ({\n   *   zoom: zoom.value\n   * }))\n   */\n  neutralZoom: number;\n  /**\n   * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.\n   *\n   * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.\n   */\n  formats: CameraDeviceFormat[];\n  /**\n   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See [\"The `supportsParallelVideoProcessing` prop\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.\n   *\n   * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.\n   *\n   * * On iOS this value is always `true`.\n   * * On newer Android devices this value is always `true`.\n   * * On older Android devices this value is `false` if the Camera's hardware level is `LEGACY` or `LIMITED`, `true` otherwise. (See [`INFO_SUPPORTED_HARDWARE_LEVEL`](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL) or [the tables at \"Regular capture\"](https://developer.android.com/reference/android/hardware/camera2/CameraDevice#regular-capture))\n   */\n  supportsParallelVideoProcessing: boolean;\n  /**\n   * Whether this camera device supports low light boost.\n   */\n  supportsLowLightBoost: boolean;\n  /**\n   * Whether this camera supports taking photos with depth data.\n   *\n   * **! Work in Progress !**\n   */\n  supportsDepthCapture: boolean;\n  /**\n   * Whether this camera supports taking photos in RAW format\n   *\n   * **! Work in Progress !**\n   */\n  supportsRawCapture: boolean;\n  /**\n   * Specifies whether this device supports focusing ({@linkcode Camera.focus | Camera.focus(...)})\n   */\n  supportsFocus: boolean;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
index 4720c88..34691b7 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
@@ -4,6 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.tryParseNativeCameraError = exports.isErrorWithCause = exports.CameraRuntimeError = exports.CameraCaptureError = void 0;
+
+function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -15,86 +18,100 @@ class CameraError extends Error {
   get code() {
     return this._code;
   }
+
   get message() {
     return this._message;
   }
+
   get cause() {
     const c = this._cause;
     if (c == null) return undefined;
     return new Error(`[${c.code}]: ${c.message}`);
   }
-
   /**
    * @internal
    */
+
+
   constructor(code, message, cause) {
     super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);
+
+    _defineProperty(this, "_code", void 0);
+
+    _defineProperty(this, "_message", void 0);
+
+    _defineProperty(this, "_cause", void 0);
+
     super.name = code;
     super.message = message;
     this._code = code;
     this._message = message;
     this._cause = cause;
   }
+
   toString() {
     return `[${this.code}]: ${this.message}`;
   }
-}
 
+}
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
-class CameraCaptureError extends CameraError {}
 
+
+class CameraCaptureError extends CameraError {}
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
+
+
 exports.CameraCaptureError = CameraCaptureError;
-class CameraRuntimeError extends CameraError {}
 
+class CameraRuntimeError extends CameraError {}
 /**
  * Checks if the given `error` is of type {@linkcode ErrorWithCause}
  * @param {unknown} error Any unknown object to validate
  * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}
  */
+
+
 exports.CameraRuntimeError = CameraRuntimeError;
-const isErrorWithCause = error => typeof error === 'object' && error != null &&
-// @ts-expect-error error is still unknown
-typeof error.message === 'string' && (
-// @ts-expect-error error is still unknown
-typeof error.stacktrace === 'string' || error.stacktrace == null) && (
-// @ts-expect-error error is still unknown
+
+const isErrorWithCause = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
+typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+typeof error.stacktrace === 'string' || error.stacktrace == null) && ( // @ts-expect-error error is still unknown
 isErrorWithCause(error.cause) || error.cause == null);
+
 exports.isErrorWithCause = isErrorWithCause;
-const isCameraErrorJson = error => typeof error === 'object' && error != null &&
-// @ts-expect-error error is still unknown
-typeof error.code === 'string' &&
-// @ts-expect-error error is still unknown
-typeof error.message === 'string' && (
-// @ts-expect-error error is still unknown
-typeof error.cause === 'object' || error.cause == null);
 
+const isCameraErrorJson = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
+typeof error.code === 'string' && // @ts-expect-error error is still unknown
+typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+typeof error.cause === 'object' || error.cause == null);
 /**
  * Tries to parse an error coming from native to a typed JS camera error.
  * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.
  * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable
  * @method
  */
+
+
 const tryParseNativeCameraError = nativeError => {
   if (isCameraErrorJson(nativeError)) {
     if (nativeError.code.startsWith('capture')) {
       return new CameraCaptureError(nativeError.code, nativeError.message, nativeError.cause);
     } else {
-      return new CameraRuntimeError(
-      // @ts-expect-error the code is string, we narrow it down to TS union.
+      return new CameraRuntimeError( // @ts-expect-error the code is string, we narrow it down to TS union.
       nativeError.code, nativeError.message, nativeError.cause);
     }
   } else {
     return nativeError;
   }
 };
+
 exports.tryParseNativeCameraError = tryParseNativeCameraError;
 //# sourceMappingURL=CameraError.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
index bb67471..c350653 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
@@ -1 +1 @@
-{"version":3,"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","exports","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"sourceRoot":"../../src","sources":["CameraError.ts"],"mappings":";;;;;;AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAW,SAAwCC,KAAK,CAAC;EAK7D,IAAWC,IAAIA,CAAA,EAAU;IACvB,OAAO,IAAI,CAACC,KAAK;EACnB;EACA,IAAWC,OAAOA,CAAA,EAAW;IAC3B,OAAO,IAAI,CAACC,QAAQ;EACtB;EACA,IAAWC,KAAKA,CAAA,EAAsB;IACpC,MAAMC,CAAC,GAAG,IAAI,CAACC,MAAM;IACrB,IAAID,CAAC,IAAI,IAAI,EAAE,OAAOE,SAAS;IAC/B,OAAO,IAAIR,KAAK,CAAE,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAAC,CAAC;EAC/C;;EAEA;AACF;AACA;EACEM,WAAWA,CAACR,IAAW,EAAEE,OAAe,EAAEE,KAAsB,EAAE;IAChE,KAAK,CAAE,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAI,GAAI,YAAWA,KAAK,CAACF,OAAQ,GAAE,GAAG,EAAG,EAAC,CAAC;IAClF,KAAK,CAACO,IAAI,GAAGT,IAAI;IACjB,KAAK,CAACE,OAAO,GAAGA,OAAO;IACvB,IAAI,CAACD,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGF,KAAK;EACrB;EAEOM,QAAQA,CAAA,EAAW;IACxB,OAAQ,IAAG,IAAI,CAACV,IAAK,MAAK,IAAI,CAACE,OAAQ,EAAC;EAC1C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMS,kBAAkB,SAASb,WAAW,CAAe;;AAElE;AACA;AACA;AACA;AACA;AAJAc,OAAA,CAAAD,kBAAA,GAAAA,kBAAA;AAKO,MAAME,kBAAkB,SAASf,WAAW,CAEjD;;AAEF;AACA;AACA;AACA;AACA;AAJAc,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAKO,MAAMC,gBAAgB,GAAIC,KAAc,IAC7C,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACb,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOa,KAAK,CAACC,UAAU,KAAK,QAAQ,IAAID,KAAK,CAACC,UAAU,IAAI,IAAI,CAAC;AAClE;AACCF,gBAAgB,CAACC,KAAK,CAACX,KAAK,CAAC,IAAIW,KAAK,CAACX,KAAK,IAAI,IAAI,CAAC;AAACQ,OAAA,CAAAE,gBAAA,GAAAA,gBAAA;AAEzD,MAAMG,iBAAiB,GAAIF,KAAc,IACvC,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACf,IAAI,KAAK,QAAQ;AAC9B;AACA,OAAOe,KAAK,CAACb,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOa,KAAK,CAACX,KAAK,KAAK,QAAQ,IAAIW,KAAK,CAACX,KAAK,IAAI,IAAI,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACO,MAAMc,yBAAyB,GAAOC,WAAc,IAAoD;EAC7G,IAAIF,iBAAiB,CAACE,WAAW,CAAC,EAAE;IAClC,IAAIA,WAAW,CAACnB,IAAI,CAACoB,UAAU,CAAC,SAAS,CAAC,EAAE;MAC1C,OAAO,IAAIT,kBAAkB,CAACQ,WAAW,CAACnB,IAAI,EAAkBmB,WAAW,CAACjB,OAAO,EAAEiB,WAAW,CAACf,KAAK,CAAC;IACzG,CAAC,MAAM;MACL,OAAO,IAAIS,kBAAkB;MAC3B;MACAM,WAAW,CAACnB,IAAI,EAChBmB,WAAW,CAACjB,OAAO,EACnBiB,WAAW,CAACf,KACd,CAAC;IACH;EACF,CAAC,MAAM;IACL,OAAOe,WAAW;EACpB;AACF,CAAC;AAACP,OAAA,CAAAM,yBAAA,GAAAA,yBAAA"}
\ No newline at end of file
+{"version":3,"sources":["CameraError.ts"],"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"mappings":";;;;;;;;;AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAN,SAAyDC,KAAzD,CAA+D;AAK9C,MAAJC,IAAI,GAAU;AACvB,WAAO,KAAKC,KAAZ;AACD;;AACiB,MAAPC,OAAO,GAAW;AAC3B,WAAO,KAAKC,QAAZ;AACD;;AACe,MAALC,KAAK,GAAsB;AACpC,UAAMC,CAAC,GAAG,KAAKC,MAAf;AACA,QAAID,CAAC,IAAI,IAAT,EAAe,OAAOE,SAAP;AACf,WAAO,IAAIR,KAAJ,CAAW,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAApC,CAAP;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,WAAW,CAACR,IAAD,EAAcE,OAAd,EAA+BE,KAA/B,EAAuD;AAChE,UAAO,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAT,GAAiB,YAAWA,KAAK,CAACF,OAAQ,GAA1C,GAA+C,EAAG,EAAhF;;AADgE;;AAAA;;AAAA;;AAEhE,UAAMO,IAAN,GAAaT,IAAb;AACA,UAAME,OAAN,GAAgBA,OAAhB;AACA,SAAKD,KAAL,GAAaD,IAAb;AACA,SAAKG,QAAL,GAAgBD,OAAhB;AACA,SAAKI,MAAL,GAAcF,KAAd;AACD;;AAEMM,EAAAA,QAAQ,GAAW;AACxB,WAAQ,IAAG,KAAKV,IAAK,MAAK,KAAKE,OAAQ,EAAvC;AACD;;AA/B4D;AAkC/D;AACA;AACA;AACA;AACA;;;AACO,MAAMS,kBAAN,SAAiCb,WAAjC,CAA2D;AAElE;AACA;AACA;AACA;AACA;;;;;AACO,MAAMc,kBAAN,SAAiCd,WAAjC,CAEL;AAEF;AACA;AACA;AACA;AACA;;;;;AACO,MAAMe,gBAAgB,GAAIC,KAAD,IAC9B,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACZ,OAAb,KAAyB,QAHzB,MAIA;AACC,OAAOY,KAAK,CAACC,UAAb,KAA4B,QAA5B,IAAwCD,KAAK,CAACC,UAAN,IAAoB,IAL7D,OAMA;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAP,CAAhB,IAAiCU,KAAK,CAACV,KAAN,IAAe,IAPjD,CADK;;;;AAUP,MAAMY,iBAAiB,GAAIF,KAAD,IACxB,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACd,IAAb,KAAsB,QAHtB,IAIA;AACA,OAAOc,KAAK,CAACZ,OAAb,KAAyB,QALzB,MAMA;AACC,OAAOY,KAAK,CAACV,KAAb,KAAuB,QAAvB,IAAmCU,KAAK,CAACV,KAAN,IAAe,IAPnD,CADF;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMa,yBAAyB,GAAOC,WAAJ,IAAsE;AAC7G,MAAIF,iBAAiB,CAACE,WAAD,CAArB,EAAoC;AAClC,QAAIA,WAAW,CAAClB,IAAZ,CAAiBmB,UAAjB,CAA4B,SAA5B,CAAJ,EAA4C;AAC1C,aAAO,IAAIR,kBAAJ,CAAuBO,WAAW,CAAClB,IAAnC,EAAyDkB,WAAW,CAAChB,OAArE,EAA8EgB,WAAW,CAACd,KAA1F,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAIQ,kBAAJ,EACL;AACAM,MAAAA,WAAW,CAAClB,IAFP,EAGLkB,WAAW,CAAChB,OAHP,EAILgB,WAAW,CAACd,KAJP,CAAP;AAMD;AACF,GAXD,MAWO;AACL,WAAOc,WAAP;AACD;AACF,CAfM","sourcesContent":["export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';\nexport type ParameterError =\n  | 'parameter/invalid-parameter'\n  | 'parameter/unsupported-os'\n  | 'parameter/unsupported-output'\n  | 'parameter/unsupported-input'\n  | 'parameter/invalid-combination';\nexport type DeviceError =\n  | 'device/configuration-error'\n  | 'device/no-device'\n  | 'device/invalid-device'\n  | 'device/parallel-video-processing-not-supported'\n  | 'device/torch-unavailable'\n  | 'device/microphone-unavailable'\n  | 'device/low-light-boost-not-supported'\n  | 'device/focus-not-supported'\n  | 'device/camera-not-available-on-simulator';\nexport type FrameProcessorError = 'frame-processor/unavailable';\nexport type FormatError =\n  | 'format/invalid-fps'\n  | 'format/invalid-hdr'\n  | 'format/invalid-low-light-boost'\n  | 'format/invalid-format'\n  | 'format/invalid-color-space'\n  | 'format/invalid-preset';\nexport type SessionError =\n  | 'session/camera-not-ready'\n  | 'session/audio-session-setup-failed'\n  | 'session/audio-in-use-by-other-app'\n  | 'session/audio-session-failed-to-activate';\nexport type CaptureError =\n  | 'capture/invalid-photo-format'\n  | 'capture/encoder-error'\n  | 'capture/muxer-error'\n  | 'capture/recording-in-progress'\n  | 'capture/no-recording-in-progress'\n  | 'capture/file-io-error'\n  | 'capture/create-temp-file-error'\n  | 'capture/invalid-video-options'\n  | 'capture/create-recorder-error'\n  | 'capture/recorder-error'\n  | 'capture/no-valid-data'\n  | 'capture/inactive-source'\n  | 'capture/insufficient-storage'\n  | 'capture/file-size-limit-reached'\n  | 'capture/invalid-photo-codec'\n  | 'capture/not-bound-error'\n  | 'capture/capture-type-not-supported'\n  | 'capture/video-not-enabled'\n  | 'capture/photo-not-enabled'\n  | 'capture/aborted'\n  | 'capture/unknown';\nexport type SystemError = 'system/no-camera-manager' | 'system/view-not-found';\nexport type UnknownError = 'unknown/unknown';\n\n/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\nexport interface ErrorWithCause {\n  /**\n   * The native error's code.\n   *\n   * * iOS: `NSError.code`\n   * * Android: N/A\n   */\n  code?: number;\n  /**\n   * The native error's domain.\n   *\n   * * iOS: `NSError.domain`\n   * * Android: N/A\n   */\n  domain?: string;\n  /**\n   * The native error description\n   *\n   * * iOS: `NSError.message`\n   * * Android: `Throwable.message`\n   */\n  message: string;\n  /**\n   * Optional additional details\n   *\n   * * iOS: `NSError.userInfo`\n   * * Android: N/A\n   */\n  details?: Record<string, unknown>;\n  /**\n   * Optional Java stacktrace\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.stacktrace.toString()`\n   */\n  stacktrace?: string;\n  /**\n   * Optional additional cause for nested errors\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.cause`\n   */\n  cause?: ErrorWithCause;\n}\n\ntype CameraErrorCode =\n  | PermissionError\n  | ParameterError\n  | DeviceError\n  | FrameProcessorError\n  | FormatError\n  | SessionError\n  | CaptureError\n  | SystemError\n  | UnknownError;\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError<TCode extends CameraErrorCode> extends Error {\n  private readonly _code: TCode;\n  private readonly _message: string;\n  private readonly _cause?: ErrorWithCause;\n\n  public get code(): TCode {\n    return this._code;\n  }\n  public get message(): string {\n    return this._message;\n  }\n  public get cause(): Error | undefined {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code: TCode, message: string, cause?: ErrorWithCause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n\n  public toString(): string {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError<CaptureError> {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError<\n  PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError\n> {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = (error: unknown): error is ErrorWithCause =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.stacktrace === 'string' || error.stacktrace == null) &&\n  // @ts-expect-error error is still unknown\n  (isErrorWithCause(error.cause) || error.cause == null);\n\nconst isCameraErrorJson = (error: unknown): error is { code: string; message: string; cause?: ErrorWithCause } =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.code === 'string' &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = <T>(nativeError: T): (CameraRuntimeError | CameraCaptureError) | T => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code as CaptureError, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n        // @ts-expect-error the code is string, we narrow it down to TS union.\n        nativeError.code,\n        nativeError.message,\n        nativeError.cause,\n      );\n    }\n  } else {\n    return nativeError;\n  }\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
index f4e0458..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPosition.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
index 7260b12..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPreset.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
index f5d0d4d..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraProps.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
index b6541a5..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Frame.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js
deleted file mode 100644
index 1e3c29a..0000000
--- a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js
+++ /dev/null
@@ -1,26 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.FrameProcessorContext = void 0;
-let workletRuntime = null;
-let createWorklet = () => {
-  throw new Error("Reanimated V3 is not installed, Frame Processors are not available!");
-};
-try {
-  const reanimated = require('react-native-reanimated');
-  if (reanimated.createWorkletRuntime == null) {
-    console.warn("Frame Processors are disabled because you're using an incompatible version of Reanimated.");
-  }
-  workletRuntime = reanimated.createWorkletRuntime('VisionCamera');
-  createWorklet = reanimated.makeShareableCloneRecursive;
-} catch {
-  // Frame Processors are not enabled
-}
-const FrameProcessorContext = {
-  workletRuntime: workletRuntime,
-  createWorklet: createWorklet
-};
-exports.FrameProcessorContext = FrameProcessorContext;
-//# sourceMappingURL=FrameProcessorContext.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map
deleted file mode 100644
index 9e8a13b..0000000
--- a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"names":["workletRuntime","createWorklet","Error","reanimated","require","createWorkletRuntime","console","warn","makeShareableCloneRecursive","FrameProcessorContext","exports"],"sourceRoot":"../../src","sources":["FrameProcessorContext.ts"],"mappings":";;;;;;AAAA,IAAIA,cAAc,GAAG,IAAI;AACzB,IAAIC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;AACxF,CAAC;AAED,IAAI;EACF,MAAMC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EACrD,IAAID,UAAU,CAACE,oBAAoB,IAAI,IAAI,EAAE;IAC3CC,OAAO,CAACC,IAAI,CAAC,2FAA2F,CAAC;EAC3G;EACAP,cAAc,GAAGG,UAAU,CAACE,oBAAoB,CAAC,cAAc,CAAC;EAChEJ,aAAa,GAAGE,UAAU,CAACK,2BAA2B;AACxD,CAAC,CAAC,MAAM;EACN;AAAA;AAGK,MAAMC,qBAAqB,GAAG;EACnCT,cAAc,EAAEA,cAAc;EAC9BC,aAAa,EAAEA;AACjB,CAAC;AAAAS,OAAA,CAAAD,qBAAA,GAAAA,qBAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
index 220a942..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["PhotoFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map b/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
index b89d3e3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["PixelFormat.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
index 7805603..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Point.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
index 5eb9af3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Snapshot.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
index a710f60..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["TemporaryFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
index 72015f6..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["VideoFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
index 6c0924e..5339e2d 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
@@ -4,7 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.withDisableFrameProcessorsAndroid = void 0;
+
 var _configPlugins = require("@expo/config-plugins");
+
 /**
  * Set the `disableFrameProcessors` value in the static `gradle.properties` file.
  * This is used to disable frame processors if you don't need it for android.
@@ -24,5 +26,6 @@ const withDisableFrameProcessorsAndroid = c => {
     return config;
   });
 };
+
 exports.withDisableFrameProcessorsAndroid = withDisableFrameProcessorsAndroid;
 //# sourceMappingURL=withDisableFrameProcessorsAndroid.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
index 966cebb..631027a 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
@@ -1 +1 @@
-{"version":3,"names":["_configPlugins","require","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","withGradleProperties","config","modResults","filter","item","type","key","push","value","exports"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsAndroid.ts"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACO,MAAMC,iCAA+C,GAAIC,CAAC,IAAK;EACpE,MAAMC,yBAAyB,GAAG,wBAAwB;EAC1D,OAAO,IAAAC,mCAAoB,EAACF,CAAC,EAAGG,MAAM,IAAK;IACzCA,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACC,MAAM,CAAEC,IAAI,IAAK;MACrD,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACE,GAAG,KAAKP,yBAAyB,EAAE,OAAO,KAAK;MACpF,OAAO,IAAI;IACb,CAAC,CAAC;IAEFE,MAAM,CAACC,UAAU,CAACK,IAAI,CAAC;MACrBF,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAEP,yBAAyB;MAC9BS,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,OAAOP,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACQ,OAAA,CAAAZ,iCAAA,GAAAA,iCAAA"}
\ No newline at end of file
+{"version":3,"sources":["withDisableFrameProcessorsAndroid.ts"],"names":["withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACO,MAAMA,iCAA+C,GAAIC,CAAD,IAAO;AACpE,QAAMC,yBAAyB,GAAG,wBAAlC;AACA,SAAO,yCAAqBD,CAArB,EAAyBE,MAAD,IAAY;AACzCA,IAAAA,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACC,UAAP,CAAkBC,MAAlB,CAA0BC,IAAD,IAAU;AACrD,UAAIA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BD,IAAI,CAACE,GAAL,KAAaN,yBAA7C,EAAwE,OAAO,KAAP;AACxE,aAAO,IAAP;AACD,KAHmB,CAApB;AAKAC,IAAAA,MAAM,CAACC,UAAP,CAAkBK,IAAlB,CAAuB;AACrBF,MAAAA,IAAI,EAAE,UADe;AAErBC,MAAAA,GAAG,EAAEN,yBAFgB;AAGrBQ,MAAAA,KAAK,EAAE;AAHc,KAAvB;AAMA,WAAOP,MAAP;AACD,GAbM,CAAP;AAcD,CAhBM","sourcesContent":["import { ConfigPlugin, withGradleProperties } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` value in the static `gradle.properties` file.\n * This is used to disable frame processors if you don't need it for android.\n */\nexport const withDisableFrameProcessorsAndroid: ConfigPlugin = (c) => {\n  const disableFrameProcessorsKey = 'disableFrameProcessors';\n  return withGradleProperties(c, (config) => {\n    config.modResults = config.modResults.filter((item) => {\n      if (item.type === 'property' && item.key === disableFrameProcessorsKey) return false;\n      return true;\n    });\n\n    config.modResults.push({\n      type: 'property',\n      key: disableFrameProcessorsKey,\n      value: 'true',\n    });\n\n    return config;\n  });\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
index 6b8ae7f..a2a8571 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
@@ -4,7 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.withDisableFrameProcessorsIOS = void 0;
+
 var _configPlugins = require("@expo/config-plugins");
+
 /* eslint-disable @typescript-eslint/no-unsafe-assignment */
 
 /**
@@ -17,15 +19,20 @@ const withDisableFrameProcessorsIOS = c => {
     const configurations = xcodeProject.pbxXCBuildConfigurationSection();
     const inheritKey = '"$(inherited)"';
     const valueKey = '"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1"';
+
     for (const key in configurations) {
+      var _buildSettings$GCC_PR;
+
       const buildSettings = configurations[key].buildSettings;
       if (buildSettings == null) continue;
-      const preprocessorDefinitions = buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey];
+      const preprocessorDefinitions = (_buildSettings$GCC_PR = buildSettings.GCC_PREPROCESSOR_DEFINITIONS) !== null && _buildSettings$GCC_PR !== void 0 ? _buildSettings$GCC_PR : [inheritKey];
       if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);
       buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;
     }
+
     return config;
   });
 };
+
 exports.withDisableFrameProcessorsIOS = withDisableFrameProcessorsIOS;
 //# sourceMappingURL=withDisableFrameProcessorsIOS.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
index 081bb57..3bc4450 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
@@ -1 +1 @@
-{"version":3,"names":["_configPlugins","require","withDisableFrameProcessorsIOS","c","withXcodeProject","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push","exports"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsIOS.ts"],"mappings":";;;;;;AACA,IAAAA,cAAA,GAAAC,OAAA;AADA;;AAGA;AACA;AACA;AACA;AACO,MAAMC,6BAA2C,GAAIC,CAAC,IAAK;EAChE,OAAO,IAAAC,+BAAgB,EAACD,CAAC,EAAGE,MAAM,IAAK;IACrC,MAAMC,YAA0B,GAAGD,MAAM,CAACE,UAAU;IAEpD,MAAMC,cAAc,GAAGF,YAAY,CAACG,8BAA8B,CAAC,CAAC;IAEpE,MAAMC,UAAU,GAAG,gBAAgB;IACnC,MAAMC,QAAQ,GAAG,4CAA4C;IAE7D,KAAK,MAAMC,GAAG,IAAIJ,cAAc,EAAE;MAChC,MAAMK,aAAa,GAAGL,cAAc,CAACI,GAAG,CAAC,CAACC,aAAa;MACvD,IAAIA,aAAa,IAAI,IAAI,EAAE;MAE3B,MAAMC,uBAAuB,GAAID,aAAa,CAACE,4BAA4B,IAAI,CAACL,UAAU,CAAc;MAExG,IAAI,CAACI,uBAAuB,CAACE,QAAQ,CAACL,QAAQ,CAAC,EAAEG,uBAAuB,CAACG,IAAI,CAACN,QAAQ,CAAC;MACvFE,aAAa,CAACE,4BAA4B,GAAGD,uBAAuB;IACtE;IACA,OAAOT,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACa,OAAA,CAAAhB,6BAAA,GAAAA,6BAAA"}
\ No newline at end of file
+{"version":3,"sources":["withDisableFrameProcessorsIOS.ts"],"names":["withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"mappings":";;;;;;;AACA;;AADA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,6BAA2C,GAAIC,CAAD,IAAO;AAChE,SAAO,qCAAiBA,CAAjB,EAAqBC,MAAD,IAAY;AACrC,UAAMC,YAA0B,GAAGD,MAAM,CAACE,UAA1C;AAEA,UAAMC,cAAc,GAAGF,YAAY,CAACG,8BAAb,EAAvB;AAEA,UAAMC,UAAU,GAAG,gBAAnB;AACA,UAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAAK,MAAMC,GAAX,IAAkBJ,cAAlB,EAAkC;AAAA;;AAChC,YAAMK,aAAa,GAAGL,cAAc,CAACI,GAAD,CAAd,CAAoBC,aAA1C;AACA,UAAIA,aAAa,IAAI,IAArB,EAA2B;AAE3B,YAAMC,uBAAuB,4BAAID,aAAa,CAACE,4BAAlB,yEAAkD,CAACL,UAAD,CAA/E;AAEA,UAAI,CAACI,uBAAuB,CAACE,QAAxB,CAAiCL,QAAjC,CAAL,EAAiDG,uBAAuB,CAACG,IAAxB,CAA6BN,QAA7B;AACjDE,MAAAA,aAAa,CAACE,4BAAd,GAA6CD,uBAA7C;AACD;;AACD,WAAOT,MAAP;AACD,GAlBM,CAAP;AAmBD,CApBM","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ConfigPlugin, withXcodeProject, XcodeProject } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` inside of the XcodeProject.\n * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)\n */\nexport const withDisableFrameProcessorsIOS: ConfigPlugin = (c) => {\n  return withXcodeProject(c, (config) => {\n    const xcodeProject: XcodeProject = config.modResults;\n\n    const configurations = xcodeProject.pbxXCBuildConfigurationSection();\n\n    const inheritKey = '\"$(inherited)\"';\n    const valueKey = '\"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1\"';\n\n    for (const key in configurations) {\n      const buildSettings = configurations[key].buildSettings;\n      if (buildSettings == null) continue;\n\n      const preprocessorDefinitions = (buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey]) as string[];\n\n      if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);\n      buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;\n    }\n    return config;\n  });\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
index 521ca62..dc7b48f 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
@@ -4,29 +4,45 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.default = void 0;
+
 var _configPlugins = require("@expo/config-plugins");
+
 var _withDisableFrameProcessorsAndroid = require("./withDisableFrameProcessorsAndroid");
+
 var _withDisableFrameProcessorsIOS = require("./withDisableFrameProcessorsIOS");
+
 // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
 const pkg = require('../../../package.json');
+
 const CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';
 const MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';
+
 const withCamera = function (config) {
+  var _ref, _props$cameraPermissi;
+
   let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
   if (config.ios == null) config.ios = {};
   if (config.ios.infoPlist == null) config.ios.infoPlist = {};
-  config.ios.infoPlist.NSCameraUsageDescription = props.cameraPermissionText ?? config.ios.infoPlist.NSCameraUsageDescription ?? CAMERA_USAGE;
+  config.ios.infoPlist.NSCameraUsageDescription = (_ref = (_props$cameraPermissi = props.cameraPermissionText) !== null && _props$cameraPermissi !== void 0 ? _props$cameraPermissi : config.ios.infoPlist.NSCameraUsageDescription) !== null && _ref !== void 0 ? _ref : CAMERA_USAGE;
+
   if (props.enableMicrophonePermission) {
-    config.ios.infoPlist.NSMicrophoneUsageDescription = props.microphonePermissionText ?? config.ios.infoPlist.NSMicrophoneUsageDescription ?? MICROPHONE_USAGE;
+    var _ref2, _props$microphonePerm;
+
+    config.ios.infoPlist.NSMicrophoneUsageDescription = (_ref2 = (_props$microphonePerm = props.microphonePermissionText) !== null && _props$microphonePerm !== void 0 ? _props$microphonePerm : config.ios.infoPlist.NSMicrophoneUsageDescription) !== null && _ref2 !== void 0 ? _ref2 : MICROPHONE_USAGE;
   }
+
   const androidPermissions = ['android.permission.CAMERA'];
   if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');
+
   if (props.disableFrameProcessors) {
     config = (0, _withDisableFrameProcessorsAndroid.withDisableFrameProcessorsAndroid)(config);
     config = (0, _withDisableFrameProcessorsIOS.withDisableFrameProcessorsIOS)(config);
   }
+
   return (0, _configPlugins.withPlugins)(config, [[_configPlugins.AndroidConfig.Permissions.withPermissions, androidPermissions]]);
 };
+
 var _default = (0, _configPlugins.createRunOncePlugin)(withCamera, pkg.name, pkg.version);
+
 exports.default = _default;
 //# sourceMappingURL=withVisionCamera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
index 850e368..eb73e91 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
@@ -1 +1 @@
-{"version":3,"names":["_configPlugins","require","_withDisableFrameProcessorsAndroid","_withDisableFrameProcessorsIOS","pkg","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","arguments","length","undefined","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","withPlugins","AndroidConfig","Permissions","withPermissions","_default","createRunOncePlugin","name","version","exports","default"],"sourceRoot":"../../../src","sources":["expo-plugin/withVisionCamera.ts"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,kCAAA,GAAAD,OAAA;AACA,IAAAE,8BAAA,GAAAF,OAAA;AACA;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAE5C,MAAMI,YAAY,GAAG,6CAA6C;AAClE,MAAMC,gBAAgB,GAAG,iDAAiD;AAS1E,MAAMC,UAA+B,GAAG,SAAAA,CAACC,MAAM,EAAiB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAIF,MAAM,CAACK,GAAG,IAAI,IAAI,EAAEL,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC;EACvC,IAAIL,MAAM,CAACK,GAAG,CAACC,SAAS,IAAI,IAAI,EAAEN,MAAM,CAACK,GAAG,CAACC,SAAS,GAAG,CAAC,CAAC;EAC3DN,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAAwB,GAC3CN,KAAK,CAACO,oBAAoB,IAAKR,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAA+C,IAAIV,YAAY;EACrH,IAAII,KAAK,CAACQ,0BAA0B,EAAE;IACpCT,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAA4B,GAC/CT,KAAK,CAACU,wBAAwB,IAAKX,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAAmD,IAAIZ,gBAAgB;EACnI;EACA,MAAMc,kBAAkB,GAAG,CAAC,2BAA2B,CAAC;EACxD,IAAIX,KAAK,CAACQ,0BAA0B,EAAEG,kBAAkB,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAEhG,IAAIZ,KAAK,CAACa,sBAAsB,EAAE;IAChCd,MAAM,GAAG,IAAAe,oEAAiC,EAACf,MAAM,CAAC;IAClDA,MAAM,GAAG,IAAAgB,4DAA6B,EAAChB,MAAM,CAAC;EAChD;EAEA,OAAO,IAAAiB,0BAAW,EAACjB,MAAM,EAAE,CAAC,CAACkB,4BAAa,CAACC,WAAW,CAACC,eAAe,EAAER,kBAAkB,CAAC,CAAC,CAAC;AAC/F,CAAC;AAAC,IAAAS,QAAA,GAEa,IAAAC,kCAAmB,EAACvB,UAAU,EAAEH,GAAG,CAAC2B,IAAI,EAAE3B,GAAG,CAAC4B,OAAO,CAAC;AAAAC,OAAA,CAAAC,OAAA,GAAAL,QAAA"}
\ No newline at end of file
+{"version":3,"sources":["withVisionCamera.ts"],"names":["pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","AndroidConfig","Permissions","withPermissions","name","version"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,MAAMC,YAAY,GAAG,6CAArB;AACA,MAAMC,gBAAgB,GAAG,iDAAzB;;AASA,MAAMC,UAA+B,GAAG,UAACC,MAAD,EAAwB;AAAA;;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC9D,MAAID,MAAM,CAACE,GAAP,IAAc,IAAlB,EAAwBF,MAAM,CAACE,GAAP,GAAa,EAAb;AACxB,MAAIF,MAAM,CAACE,GAAP,CAAWC,SAAX,IAAwB,IAA5B,EAAkCH,MAAM,CAACE,GAAP,CAAWC,SAAX,GAAuB,EAAvB;AAClCH,EAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBAArB,oCACEH,KAAK,CAACI,oBADR,yEACiCL,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBADtD,uCACyGP,YADzG;;AAEA,MAAII,KAAK,CAACK,0BAAV,EAAsC;AAAA;;AACpCN,IAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAArB,qCACEN,KAAK,CAACO,wBADR,yEACqCR,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAD1D,yCACiHT,gBADjH;AAED;;AACD,QAAMW,kBAAkB,GAAG,CAAC,2BAAD,CAA3B;AACA,MAAIR,KAAK,CAACK,0BAAV,EAAsCG,kBAAkB,CAACC,IAAnB,CAAwB,iCAAxB;;AAEtC,MAAIT,KAAK,CAACU,sBAAV,EAAkC;AAChCX,IAAAA,MAAM,GAAG,0EAAkCA,MAAlC,CAAT;AACAA,IAAAA,MAAM,GAAG,kEAA8BA,MAA9B,CAAT;AACD;;AAED,SAAO,gCAAYA,MAAZ,EAAoB,CAAC,CAACY,6BAAcC,WAAd,CAA0BC,eAA3B,EAA4CL,kBAA5C,CAAD,CAApB,CAAP;AACD,CAlBD;;eAoBe,wCAAoBV,UAApB,EAAgCJ,GAAG,CAACoB,IAApC,EAA0CpB,GAAG,CAACqB,OAA9C,C","sourcesContent":["import { withPlugins, AndroidConfig, ConfigPlugin, createRunOncePlugin } from '@expo/config-plugins';\nimport { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';\nimport { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\nconst CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';\nconst MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';\n\ntype Props = {\n  cameraPermissionText?: string;\n  enableMicrophonePermission?: boolean;\n  microphonePermissionText?: string;\n  disableFrameProcessors?: boolean;\n};\n\nconst withCamera: ConfigPlugin<Props> = (config, props = {}) => {\n  if (config.ios == null) config.ios = {};\n  if (config.ios.infoPlist == null) config.ios.infoPlist = {};\n  config.ios.infoPlist.NSCameraUsageDescription =\n    props.cameraPermissionText ?? (config.ios.infoPlist.NSCameraUsageDescription as string | undefined) ?? CAMERA_USAGE;\n  if (props.enableMicrophonePermission) {\n    config.ios.infoPlist.NSMicrophoneUsageDescription =\n      props.microphonePermissionText ?? (config.ios.infoPlist.NSMicrophoneUsageDescription as string | undefined) ?? MICROPHONE_USAGE;\n  }\n  const androidPermissions = ['android.permission.CAMERA'];\n  if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');\n\n  if (props.disableFrameProcessors) {\n    config = withDisableFrameProcessorsAndroid(config);\n    config = withDisableFrameProcessorsIOS(config);\n  }\n\n  return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);\n};\n\nexport default createRunOncePlugin(withCamera, pkg.name, pkg.version);\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map b/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
index 329e9d3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["globals.d.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
index 8cbeb64..53cd54f 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
@@ -4,17 +4,21 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useCameraDevices = useCameraDevices;
+
 var _react = require("react");
+
 var _FormatFilter = require("../utils/FormatFilter");
+
 var _Camera = require("../Camera");
+
 var _CameraDevice = require("../CameraDevice");
+
 const DefaultCameraDevices = {
   back: undefined,
   external: undefined,
   front: undefined,
   unspecified: undefined
 };
-
 /**
  * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.
  *
@@ -28,34 +32,23 @@ const DefaultCameraDevices = {
  * ```
  */
 
-/**
- * Gets a {@linkcode CameraDevice} for the requested device type.
- *
- * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.
- * @returns A {@linkcode CameraDevice} for the requested device type.
- * @throws {@linkcode CameraRuntimeError} if no device was found.
- * @example
- * ```tsx
- * const device = useCameraDevice('wide-angle-camera')
- * // ...
- * return <Camera device={device} />
- * ```
- */
-
 function useCameraDevices(deviceType) {
   const [cameraDevices, setCameraDevices] = (0, _react.useState)(DefaultCameraDevices);
   (0, _react.useEffect)(() => {
     let isMounted = true;
+
     const loadDevice = async () => {
       let devices = await _Camera.Camera.getAvailableCameraDevices();
       if (!isMounted) return;
       devices = devices.sort(_FormatFilter.sortDevices);
+
       if (deviceType != null) {
         devices = devices.filter(d => {
           const parsedType = (0, _CameraDevice.parsePhysicalDeviceTypes)(d.devices);
           return parsedType === deviceType;
         });
       }
+
       setCameraDevices({
         back: devices.find(d => d.position === 'back'),
         external: devices.find(d => d.position === 'external'),
@@ -63,6 +56,7 @@ function useCameraDevices(deviceType) {
         unspecified: devices.find(d => d.position === 'unspecified')
       });
     };
+
     loadDevice();
     return () => {
       isMounted = false;
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
index 81b0749..61d26c2 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","require","_FormatFilter","_Camera","_CameraDevice","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","useState","useEffect","isMounted","loadDevice","devices","Camera","getAvailableCameraDevices","sort","sortDevices","filter","d","parsedType","parsePhysicalDeviceTypes","find","position"],"sourceRoot":"../../../src","sources":["hooks/useCameraDevices.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAKA,MAAMI,oBAAmC,GAAG;EAC1CC,IAAI,EAAEC,SAAS;EACfC,QAAQ,EAAED,SAAS;EACnBE,KAAK,EAAEF,SAAS;EAChBG,WAAW,EAAEH;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGO,SAASI,gBAAgBA,CAACC,UAA+D,EAAiB;EAC/G,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG,IAAAC,eAAQ,EAAgBV,oBAAoB,CAAC;EAEvF,IAAAW,gBAAS,EAAC,MAAM;IACd,IAAIC,SAAS,GAAG,IAAI;IAEpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA2B;MAC5C,IAAIC,OAAO,GAAG,MAAMC,cAAM,CAACC,yBAAyB,CAAC,CAAC;MACtD,IAAI,CAACJ,SAAS,EAAE;MAEhBE,OAAO,GAAGA,OAAO,CAACG,IAAI,CAACC,yBAAW,CAAC;MACnC,IAAIX,UAAU,IAAI,IAAI,EAAE;QACtBO,OAAO,GAAGA,OAAO,CAACK,MAAM,CAAEC,CAAC,IAAK;UAC9B,MAAMC,UAAU,GAAG,IAAAC,sCAAwB,EAACF,CAAC,CAACN,OAAO,CAAC;UACtD,OAAOO,UAAU,KAAKd,UAAU;QAClC,CAAC,CAAC;MACJ;MACAE,gBAAgB,CAAC;QACfR,IAAI,EAAEa,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,MAAM,CAAC;QAChDrB,QAAQ,EAAEW,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,UAAU,CAAC;QACxDpB,KAAK,EAAEU,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,OAAO,CAAC;QAClDnB,WAAW,EAAES,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,aAAa;MAC/D,CAAC,CAAC;IACJ,CAAC;IACDX,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,OAAOC,aAAa;AACtB"}
\ No newline at end of file
+{"version":3,"sources":["useCameraDevices.ts"],"names":["DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","Camera","getAvailableCameraDevices","sort","sortDevices","filter","d","parsedType","find","position"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAKA,MAAMA,oBAAmC,GAAG;AAC1CC,EAAAA,IAAI,EAAEC,SADoC;AAE1CC,EAAAA,QAAQ,EAAED,SAFgC;AAG1CE,EAAAA,KAAK,EAAEF,SAHmC;AAI1CG,EAAAA,WAAW,EAAEH;AAJ6B,CAA5C;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBO,SAASI,gBAAT,CAA0BC,UAA1B,EAA0G;AAC/G,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC,qBAAwBT,oBAAxB,CAA1C;AAEA,wBAAU,MAAM;AACd,QAAIU,SAAS,GAAG,IAAhB;;AAEA,UAAMC,UAAU,GAAG,YAA2B;AAC5C,UAAIC,OAAO,GAAG,MAAMC,eAAOC,yBAAP,EAApB;AACA,UAAI,CAACJ,SAAL,EAAgB;AAEhBE,MAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAaC,yBAAb,CAAV;;AACA,UAAIT,UAAU,IAAI,IAAlB,EAAwB;AACtBK,QAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAgBC,CAAD,IAAO;AAC9B,gBAAMC,UAAU,GAAG,4CAAyBD,CAAC,CAACN,OAA3B,CAAnB;AACA,iBAAOO,UAAU,KAAKZ,UAAtB;AACD,SAHS,CAAV;AAID;;AACDE,MAAAA,gBAAgB,CAAC;AACfR,QAAAA,IAAI,EAAEW,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,MAAnC,CADS;AAEflB,QAAAA,QAAQ,EAAES,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,UAAnC,CAFK;AAGfjB,QAAAA,KAAK,EAAEQ,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,OAAnC,CAHQ;AAIfhB,QAAAA,WAAW,EAAEO,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,aAAnC;AAJE,OAAD,CAAhB;AAMD,KAjBD;;AAkBAV,IAAAA,UAAU;AAEV,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GA1BD,EA0BG,CAACH,UAAD,CA1BH;AA4BA,SAAOC,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport type { CameraPosition } from '../CameraPosition';\nimport { sortDevices } from '../utils/FormatFilter';\nimport { Camera } from '../Camera';\nimport { CameraDevice, LogicalCameraDeviceType, parsePhysicalDeviceTypes, PhysicalCameraDeviceType } from '../CameraDevice';\n\nexport type CameraDevices = {\n  [key in CameraPosition]: CameraDevice | undefined;\n};\nconst DefaultCameraDevices: CameraDevices = {\n  back: undefined,\n  external: undefined,\n  front: undefined,\n  unspecified: undefined,\n};\n\n/**\n * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.\n *\n * @returns The best matching {@linkcode CameraDevice}.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice()\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(): CameraDevices;\n\n/**\n * Gets a {@linkcode CameraDevice} for the requested device type.\n *\n * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.\n * @returns A {@linkcode CameraDevice} for the requested device type.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice('wide-angle-camera')\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;\n\nexport function useCameraDevices(deviceType?: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices {\n  const [cameraDevices, setCameraDevices] = useState<CameraDevices>(DefaultCameraDevices);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const loadDevice = async (): Promise<void> => {\n      let devices = await Camera.getAvailableCameraDevices();\n      if (!isMounted) return;\n\n      devices = devices.sort(sortDevices);\n      if (deviceType != null) {\n        devices = devices.filter((d) => {\n          const parsedType = parsePhysicalDeviceTypes(d.devices);\n          return parsedType === deviceType;\n        });\n      }\n      setCameraDevices({\n        back: devices.find((d) => d.position === 'back'),\n        external: devices.find((d) => d.position === 'external'),\n        front: devices.find((d) => d.position === 'front'),\n        unspecified: devices.find((d) => d.position === 'unspecified'),\n      });\n    };\n    loadDevice();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [deviceType]);\n\n  return cameraDevices;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
index 8071f04..fbf0449 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
@@ -4,8 +4,11 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useCameraFormat = useCameraFormat;
+
 var _react = require("react");
+
 var _FormatFilter = require("../utils/FormatFilter");
+
 /**
  * Returns the best format for the given camera device.
  *
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
index 5fb1380..28d99ab 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","require","_FormatFilter","useCameraFormat","device","useMemo","formats","sort","sortFormats"],"sourceRoot":"../../../src","sources":["hooks/useCameraFormat.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,eAAeA,CAACC,MAAqB,EAAkC;EACrF,OAAO,IAAAC,cAAO,EAAC,MAAMD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,OAAO,CAACC,IAAI,CAACC,yBAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAACJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,OAAO,CAAC,CAAC;AAC/E"}
\ No newline at end of file
+{"version":3,"sources":["useCameraFormat.ts"],"names":["useCameraFormat","device","formats","sort","sortFormats"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,eAAT,CAAyBC,MAAzB,EAAgF;AACrF,SAAO,oBAAQ,MAAMA,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBC,yBAArB,EAAkC,CAAlC,CAAd,EAAoD,CAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAApD,CAAP;AACD","sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
index 649e907..6ab045d 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
@@ -4,9 +4,13 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useFrameProcessor = useFrameProcessor;
+
 var _react = require("react");
+
+/* global _setGlobalConsole */
+const capturableConsole = console;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -22,12 +26,37 @@ var _react = require("react");
  * }, [])
  * ```
  */
+
 function useFrameProcessor(frameProcessor, dependencies) {
   return (0, _react.useCallback)(frame => {
-    'worklet';
+    'worklet'; // @ts-expect-error
+
+    if (global.didSetConsole == null || global.didSetConsole === false) {
+      const console = {
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        debug: capturableConsole.debug.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        log: capturableConsole.log.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        warn: capturableConsole.warn.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        error: capturableConsole.error.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        info: capturableConsole.info.__callAsync
+      }; // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime
+
+      _setGlobalConsole(console); // @ts-expect-error
+
+
+      global.didSetConsole = true;
+    }
 
-    frameProcessor(frame);
-    // eslint-disable-next-line react-hooks/exhaustive-deps
+    frameProcessor(frame); // eslint-disable-next-line react-hooks/exhaustive-deps
   }, dependencies);
 }
 //# sourceMappingURL=useFrameProcessor.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
index 429bdeb..f44d9b9 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","require","useFrameProcessor","frameProcessor","dependencies","useCallback","frame"],"sourceRoot":"../../../src","sources":["hooks/useFrameProcessor.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAACC,cAA8B,EAAEC,YAA4B,EAAkB;EAC9G,OAAO,IAAAC,kBAAW,EAAEC,KAAY,IAAK;IACnC,SAAS;;IACTH,cAAc,CAACG,KAAK,CAAC;IACrB;EACF,CAAC,EAAEF,YAAY,CAAC;AAClB"}
\ No newline at end of file
+{"version":3,"sources":["useFrameProcessor.ts"],"names":["capturableConsole","console","useFrameProcessor","frameProcessor","dependencies","frame","global","didSetConsole","debug","__callAsync","log","warn","error","info","_setGlobalConsole"],"mappings":";;;;;;;AAEA;;AAFA;AAOA,MAAMA,iBAAiB,GAAGC,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,iBAAT,CAA2BC,cAA3B,EAA2DC,YAA3D,EAAyG;AAC9G,SAAO,wBAAaC,KAAD,IAAkB;AACnC,cADmC,CAGnC;;AACA,QAAIC,MAAM,CAACC,aAAP,IAAwB,IAAxB,IAAgCD,MAAM,CAACC,aAAP,KAAyB,KAA7D,EAAoE;AAClE,YAAMN,OAAO,GAAG;AACd;AACA;AACAO,QAAAA,KAAK,EAAER,iBAAiB,CAACQ,KAAlB,CAAwBC,WAHjB;AAId;AACA;AACAC,QAAAA,GAAG,EAAEV,iBAAiB,CAACU,GAAlB,CAAsBD,WANb;AAOd;AACA;AACAE,QAAAA,IAAI,EAAEX,iBAAiB,CAACW,IAAlB,CAAuBF,WATf;AAUd;AACA;AACAG,QAAAA,KAAK,EAAEZ,iBAAiB,CAACY,KAAlB,CAAwBH,WAZjB;AAad;AACA;AACAI,QAAAA,IAAI,EAAEb,iBAAiB,CAACa,IAAlB,CAAuBJ;AAff,OAAhB,CADkE,CAkBlE;;AACAK,MAAAA,iBAAiB,CAACb,OAAD,CAAjB,CAnBkE,CAoBlE;;;AACAK,MAAAA,MAAM,CAACC,aAAP,GAAuB,IAAvB;AACD;;AAEDJ,IAAAA,cAAc,CAACE,KAAD,CAAd,CA5BmC,CA6BnC;AACD,GA9BM,EA8BJD,YA9BI,CAAP;AA+BD","sourcesContent":["/* global _setGlobalConsole */\n\nimport { DependencyList, useCallback } from 'react';\nimport type { Frame } from '../Frame';\n\ntype FrameProcessor = (frame: Frame) => void;\n\nconst capturableConsole = console;\n\n/**\n * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See [\"Frame Processors\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))\n *\n * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.\n *\n * @param frameProcessor The Frame Processor\n * @param dependencies The React dependencies which will be copied into the VisionCamera JS-Runtime.\n * @returns The memoized Frame Processor.\n * @example\n * ```ts\n * const frameProcessor = useFrameProcessor((frame) => {\n *   'worklet'\n *   const qrCodes = scanQRCodes(frame)\n *   console.log(`QR Codes: ${qrCodes}`)\n * }, [])\n * ```\n */\nexport function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor {\n  return useCallback((frame: Frame) => {\n    'worklet';\n\n    // @ts-expect-error\n    if (global.didSetConsole == null || global.didSetConsole === false) {\n      const console = {\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        debug: capturableConsole.debug.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        log: capturableConsole.log.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        warn: capturableConsole.warn.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        error: capturableConsole.error.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        info: capturableConsole.info.__callAsync,\n      };\n      // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime\n      _setGlobalConsole(console);\n      // @ts-expect-error\n      global.didSetConsole = true;\n    }\n\n    frameProcessor(frame);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/index.js b/node_modules/react-native-vision-camera/lib/commonjs/index.js
index bdcd598..3a6993d 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/index.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/index.js
@@ -3,7 +3,9 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
+
 var _Camera = require("./Camera");
+
 Object.keys(_Camera).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Camera[key]) return;
@@ -14,7 +16,9 @@ Object.keys(_Camera).forEach(function (key) {
     }
   });
 });
+
 var _CameraDevice = require("./CameraDevice");
+
 Object.keys(_CameraDevice).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraDevice[key]) return;
@@ -25,7 +29,9 @@ Object.keys(_CameraDevice).forEach(function (key) {
     }
   });
 });
+
 var _CameraError = require("./CameraError");
+
 Object.keys(_CameraError).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraError[key]) return;
@@ -36,7 +42,9 @@ Object.keys(_CameraError).forEach(function (key) {
     }
   });
 });
+
 var _CameraPosition = require("./CameraPosition");
+
 Object.keys(_CameraPosition).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraPosition[key]) return;
@@ -47,7 +55,9 @@ Object.keys(_CameraPosition).forEach(function (key) {
     }
   });
 });
+
 var _CameraPreset = require("./CameraPreset");
+
 Object.keys(_CameraPreset).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraPreset[key]) return;
@@ -58,7 +68,9 @@ Object.keys(_CameraPreset).forEach(function (key) {
     }
   });
 });
+
 var _CameraProps = require("./CameraProps");
+
 Object.keys(_CameraProps).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraProps[key]) return;
@@ -69,7 +81,9 @@ Object.keys(_CameraProps).forEach(function (key) {
     }
   });
 });
+
 var _Frame = require("./Frame");
+
 Object.keys(_Frame).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Frame[key]) return;
@@ -80,7 +94,9 @@ Object.keys(_Frame).forEach(function (key) {
     }
   });
 });
+
 var _PhotoFile = require("./PhotoFile");
+
 Object.keys(_PhotoFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _PhotoFile[key]) return;
@@ -91,7 +107,9 @@ Object.keys(_PhotoFile).forEach(function (key) {
     }
   });
 });
+
 var _Point = require("./Point");
+
 Object.keys(_Point).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Point[key]) return;
@@ -102,7 +120,9 @@ Object.keys(_Point).forEach(function (key) {
     }
   });
 });
+
 var _Snapshot = require("./Snapshot");
+
 Object.keys(_Snapshot).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Snapshot[key]) return;
@@ -113,7 +133,9 @@ Object.keys(_Snapshot).forEach(function (key) {
     }
   });
 });
+
 var _TemporaryFile = require("./TemporaryFile");
+
 Object.keys(_TemporaryFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _TemporaryFile[key]) return;
@@ -124,7 +146,9 @@ Object.keys(_TemporaryFile).forEach(function (key) {
     }
   });
 });
+
 var _VideoFile = require("./VideoFile");
+
 Object.keys(_VideoFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _VideoFile[key]) return;
@@ -135,7 +159,9 @@ Object.keys(_VideoFile).forEach(function (key) {
     }
   });
 });
+
 var _useCameraDevices = require("./hooks/useCameraDevices");
+
 Object.keys(_useCameraDevices).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useCameraDevices[key]) return;
@@ -146,7 +172,9 @@ Object.keys(_useCameraDevices).forEach(function (key) {
     }
   });
 });
+
 var _useCameraFormat = require("./hooks/useCameraFormat");
+
 Object.keys(_useCameraFormat).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useCameraFormat[key]) return;
@@ -157,7 +185,9 @@ Object.keys(_useCameraFormat).forEach(function (key) {
     }
   });
 });
+
 var _useFrameProcessor = require("./hooks/useFrameProcessor");
+
 Object.keys(_useFrameProcessor).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useFrameProcessor[key]) return;
@@ -168,7 +198,9 @@ Object.keys(_useFrameProcessor).forEach(function (key) {
     }
   });
 });
+
 var _FormatFilter = require("./utils/FormatFilter");
+
 Object.keys(_FormatFilter).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _FormatFilter[key]) return;
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/index.js.map b/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
index 942150a..fe8b29c 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
@@ -1 +1 @@
-{"version":3,"names":["_Camera","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get","_CameraDevice","_CameraError","_CameraPosition","_CameraPreset","_CameraProps","_Frame","_PhotoFile","_Point","_Snapshot","_TemporaryFile","_VideoFile","_useCameraDevices","_useCameraFormat","_useFrameProcessor","_FormatFilter"],"sourceRoot":"../../src","sources":["index.ts"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export * from './Camera';\nexport * from './CameraDevice';\nexport * from './CameraError';\nexport * from './CameraPosition';\nexport * from './CameraPreset';\nexport * from './CameraProps';\nexport * from './Frame';\nexport * from './CameraProps';\nexport * from './PhotoFile';\nexport * from './Point';\nexport * from './Snapshot';\nexport * from './TemporaryFile';\nexport * from './VideoFile';\n\nexport * from './hooks/useCameraDevices';\nexport * from './hooks/useCameraFormat';\nexport * from './hooks/useFrameProcessor';\n\nexport * from './utils/FormatFilter';\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
index 6783b3d..aec88e3 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
@@ -4,7 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.sortFormats = exports.sortDevices = exports.frameRateIncluded = void 0;
+
 var _reactNative = require("react-native");
+
 /**
  * Compares two devices by the following criteria:
  * * `wide-angle-camera`s are ranked higher than others
@@ -25,9 +27,8 @@ const sortDevices = (left, right) => {
   const leftHasWideAngle = left.devices.includes('wide-angle-camera');
   const rightHasWideAngle = right.devices.includes('wide-angle-camera');
   if (leftHasWideAngle) leftPoints += 2;
-  if (rightHasWideAngle) rightPoints += 2;
+  if (rightHasWideAngle) rightPoints += 2; // telephoto cameras often have very poor quality.
 
-  // telephoto cameras often have very poor quality.
   const leftHasTelephoto = left.devices.includes('telephoto-camera');
   const rightHasTelephoto = right.devices.includes('telephoto-camera');
   if (leftHasTelephoto) leftPoints -= 2;
@@ -36,40 +37,38 @@ const sortDevices = (left, right) => {
   if (right.devices.length > left.devices.length) rightPoints += 1;
   return rightPoints - leftPoints;
 };
+
 exports.sortDevices = sortDevices;
 const SCREEN_SIZE = {
   width: _reactNative.Dimensions.get('window').width,
   height: _reactNative.Dimensions.get('window').height
 };
 const SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;
-
 /**
  * Sort formats by resolution and aspect ratio difference (to the Screen size).
  *
  * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the "best" device.
  */
+
 const sortFormats = (left, right) => {
   let leftPoints = 0,
-    rightPoints = 0;
-
-  // we downscale the points so much that we are in smaller number ranges for future calculations
+      rightPoints = 0; // we downscale the points so much that we are in smaller number ranges for future calculations
   // e.g. for 4k (4096), this adds 8 points.
+
   leftPoints += Math.round(left.photoWidth / 500);
-  rightPoints += Math.round(right.photoWidth / 500);
-  // e.g. for 4k (4096), this adds 8 points.
-  leftPoints += Math.round(left.videoWidth / 500);
-  rightPoints += Math.round(right.videoWidth / 500);
+  rightPoints += Math.round(right.photoWidth / 500); // e.g. for 4k (4096), this adds 8 points.
 
-  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
+  leftPoints += Math.round(left.videoWidth / 500);
+  rightPoints += Math.round(right.videoWidth / 500); // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
   // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little
   // bit over 1 point, just enough to overrule the FPS below.
+
   const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;
   const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;
   leftPoints -= Math.abs(leftAspectRatioDiff) * 10;
   rightPoints -= Math.abs(rightAspectRatioDiff) * 10;
   return rightPoints - leftPoints;
 };
-
 /**
  * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)
  *
@@ -82,7 +81,11 @@ const sortFormats = (left, right) => {
  * ```
  * @method
  */
+
+
 exports.sortFormats = sortFormats;
+
 const frameRateIncluded = (range, fps) => fps >= range.minFrameRate && fps <= range.maxFrameRate;
+
 exports.frameRateIncluded = frameRateIncluded;
 //# sourceMappingURL=FormatFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
index 6526f30..60474c1 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
@@ -1 +1 @@
-{"version":3,"names":["_reactNative","require","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","exports","SCREEN_SIZE","width","Dimensions","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"sourceRoot":"../../../src","sources":["utils/FormatFilter.ts"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["FormatFilter.ts"],"names":["sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","Dimensions","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"mappings":";;;;;;;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAqBC,KAArB,KAAqD;AAC9E,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,WAAW,GAAG,CAAlB;AAEA,QAAMC,gBAAgB,GAAGJ,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsB,mBAAtB,CAAzB;AACA,QAAMC,iBAAiB,GAAGN,KAAK,CAACI,OAAN,CAAcC,QAAd,CAAuB,mBAAvB,CAA1B;AACA,MAAIF,gBAAJ,EAAsBF,UAAU,IAAI,CAAd;AACtB,MAAIK,iBAAJ,EAAuBJ,WAAW,IAAI,CAAf,CAPuD,CAS9E;;AACA,QAAMK,gBAAgB,GAAGR,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsB,kBAAtB,CAAzB;AACA,QAAMG,iBAAiB,GAAGR,KAAK,CAACI,OAAN,CAAcC,QAAd,CAAuB,kBAAvB,CAA1B;AACA,MAAIE,gBAAJ,EAAsBN,UAAU,IAAI,CAAd;AACtB,MAAIO,iBAAJ,EAAuBN,WAAW,IAAI,CAAf;AAEvB,MAAIH,IAAI,CAACK,OAAL,CAAaK,MAAb,GAAsBT,KAAK,CAACI,OAAN,CAAcK,MAAxC,EAAgDR,UAAU,IAAI,CAAd;AAChD,MAAID,KAAK,CAACI,OAAN,CAAcK,MAAd,GAAuBV,IAAI,CAACK,OAAL,CAAaK,MAAxC,EAAgDP,WAAW,IAAI,CAAf;AAEhD,SAAOA,WAAW,GAAGD,UAArB;AACD,CAnBM;;;AAqBP,MAAMS,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAEC,wBAAWC,GAAX,CAAe,QAAf,EAAyBF,KADd;AAElBG,EAAAA,MAAM,EAAEF,wBAAWC,GAAX,CAAe,QAAf,EAAyBC;AAFf,CAApB;AAIA,MAAMC,mBAAmB,GAAGL,WAAW,CAACC,KAAZ,GAAoBD,WAAW,CAACI,MAA5D;AAEA;AACA;AACA;AACA;AACA;;AACO,MAAME,WAAW,GAAG,CAACjB,IAAD,EAA2BC,KAA3B,KAAiE;AAC1F,MAAIC,UAAU,GAAG,CAAjB;AAAA,MACEC,WAAW,GAAG,CADhB,CAD0F,CAI1F;AACA;;AACAD,EAAAA,UAAU,IAAIgB,IAAI,CAACC,KAAL,CAAWnB,IAAI,CAACoB,UAAL,GAAkB,GAA7B,CAAd;AACAjB,EAAAA,WAAW,IAAIe,IAAI,CAACC,KAAL,CAAWlB,KAAK,CAACmB,UAAN,GAAmB,GAA9B,CAAf,CAP0F,CAQ1F;;AACAlB,EAAAA,UAAU,IAAIgB,IAAI,CAACC,KAAL,CAAWnB,IAAI,CAACqB,UAAL,GAAkB,GAA7B,CAAd;AACAlB,EAAAA,WAAW,IAAIe,IAAI,CAACC,KAAL,CAAWlB,KAAK,CAACoB,UAAN,GAAmB,GAA9B,CAAf,CAV0F,CAY1F;AACA;AACA;;AACA,QAAMC,mBAAmB,GAAGtB,IAAI,CAACuB,WAAL,GAAmBvB,IAAI,CAACoB,UAAxB,GAAqCJ,mBAAjE;AACA,QAAMQ,oBAAoB,GAAGvB,KAAK,CAACsB,WAAN,GAAoBtB,KAAK,CAACmB,UAA1B,GAAuCJ,mBAApE;AACAd,EAAAA,UAAU,IAAIgB,IAAI,CAACO,GAAL,CAASH,mBAAT,IAAgC,EAA9C;AACAnB,EAAAA,WAAW,IAAIe,IAAI,CAACO,GAAL,CAASD,oBAAT,IAAiC,EAAhD;AAEA,SAAOrB,WAAW,GAAGD,UAArB;AACD,CArBM;AAuBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMwB,iBAAiB,GAAG,CAACC,KAAD,EAAwBC,GAAxB,KAAiDA,GAAG,IAAID,KAAK,CAACE,YAAb,IAA6BD,GAAG,IAAID,KAAK,CAACG,YAArH","sourcesContent":["import { Dimensions } from 'react-native';\nimport type { CameraDevice, CameraDeviceFormat, FrameRateRange } from '../CameraDevice';\n\n/**\n * Compares two devices by the following criteria:\n * * `wide-angle-camera`s are ranked higher than others\n * * Devices with more physical cameras are ranked higher than ones with less. (e.g. \"Triple Camera\" > \"Wide-Angle Camera\")\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n *\n * @example\n * ```ts\n * const devices = camera.devices.sort(sortDevices)\n * const bestDevice = devices[0]\n * ```\n * @method\n */\nexport const sortDevices = (left: CameraDevice, right: CameraDevice): number => {\n  let leftPoints = 0;\n  let rightPoints = 0;\n\n  const leftHasWideAngle = left.devices.includes('wide-angle-camera');\n  const rightHasWideAngle = right.devices.includes('wide-angle-camera');\n  if (leftHasWideAngle) leftPoints += 2;\n  if (rightHasWideAngle) rightPoints += 2;\n\n  // telephoto cameras often have very poor quality.\n  const leftHasTelephoto = left.devices.includes('telephoto-camera');\n  const rightHasTelephoto = right.devices.includes('telephoto-camera');\n  if (leftHasTelephoto) leftPoints -= 2;\n  if (rightHasTelephoto) rightPoints -= 2;\n\n  if (left.devices.length > right.devices.length) leftPoints += 1;\n  if (right.devices.length > left.devices.length) rightPoints += 1;\n\n  return rightPoints - leftPoints;\n};\n\nconst SCREEN_SIZE = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\nconst SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;\n\n/**\n * Sort formats by resolution and aspect ratio difference (to the Screen size).\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n */\nexport const sortFormats = (left: CameraDeviceFormat, right: CameraDeviceFormat): number => {\n  let leftPoints = 0,\n    rightPoints = 0;\n\n  // we downscale the points so much that we are in smaller number ranges for future calculations\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.photoWidth / 500);\n  rightPoints += Math.round(right.photoWidth / 500);\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.videoWidth / 500);\n  rightPoints += Math.round(right.videoWidth / 500);\n\n  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly\n  // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little\n  // bit over 1 point, just enough to overrule the FPS below.\n  const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;\n  const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;\n  leftPoints -= Math.abs(leftAspectRatioDiff) * 10;\n  rightPoints -= Math.abs(rightAspectRatioDiff) * 10;\n\n  return rightPoints - leftPoints;\n};\n\n/**\n * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)\n *\n * @param {FrameRateRange} range The range to check if the given `fps` are included in\n * @param {number} fps The FPS to check if the given `range` supports.\n * @example\n * ```ts\n * // get all formats that support 60 FPS\n * const formatsWithHighFps = useMemo(() => device.formats.filter((f) => f.frameRateRanges.some((r) => frameRateIncluded(r, 60))), [device.formats])\n * ```\n * @method\n */\nexport const frameRateIncluded = (range: FrameRateRange, fps: number): boolean => fps >= range.minFrameRate && fps <= range.maxFrameRate;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js b/node_modules/react-native-vision-camera/lib/module/Camera.js
index c822fac..59ede18 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js
@@ -1,23 +1,20 @@
-function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+
+function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+
 import React from 'react';
 import { requireNativeComponent, NativeModules, findNodeHandle, Platform } from 'react-native';
 import { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';
-import { FrameProcessorContext } from './FrameProcessorContext';
-
-//#region Types
-
 //#endregion
-
 // NativeModules automatically resolves 'CameraView' to 'CameraViewModule'
 // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
 const CameraModule = NativeModules.CameraView;
-if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?");
+if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?"); //#region Camera Component
 
-//#region Camera Component
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
+ * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -43,15 +40,24 @@ if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was
  *
  * @component
  */
+
 export class Camera extends React.PureComponent {
   /** @internal */
-  static displayName = 'Camera';
+
   /** @internal */
-  displayName = Camera.displayName;
-  isNativeViewMounted = false;
+
   /** @internal */
   constructor(props) {
     super(props);
+
+    _defineProperty(this, "displayName", Camera.displayName);
+
+    _defineProperty(this, "lastFrameProcessor", void 0);
+
+    _defineProperty(this, "isNativeViewMounted", false);
+
+    _defineProperty(this, "ref", void 0);
+
     this.onViewReady = this.onViewReady.bind(this);
     this.onInitialized = this.onInitialized.bind(this);
     this.onError = this.onError.bind(this);
@@ -59,15 +65,17 @@ export class Camera extends React.PureComponent {
     this.ref = /*#__PURE__*/React.createRef();
     this.lastFrameProcessor = undefined;
   }
+
   get handle() {
     const nodeHandle = findNodeHandle(this.ref.current);
+
     if (nodeHandle == null || nodeHandle === -1) {
       throw new CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
     }
+
     return nodeHandle;
-  }
+  } //#region View-specific functions (UIViewManager)
 
-  //#region View-specific functions (UIViewManager)
   /**
    * Take a single photo and write it's content to a temporary file.
    *
@@ -81,14 +89,15 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
+
+
   async takePhoto(options) {
     try {
-      return await CameraModule.takePhoto(this.handle, options ?? {});
+      return await CameraModule.takePhoto(this.handle, options !== null && options !== void 0 ? options : {});
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Take a snapshot of the current preview view.
    *
@@ -105,15 +114,17 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
+
+
   async takeSnapshot(options) {
     if (Platform.OS !== 'android') throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);
+
     try {
-      return await CameraModule.takeSnapshot(this.handle, options ?? {});
+      return await CameraModule.takeSnapshot(this.handle, options !== null && options !== void 0 ? options : {});
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Start a new video recording.
    *
@@ -136,6 +147,8 @@ export class Camera extends React.PureComponent {
    * }, 5000)
    * ```
    */
+
+
   startRecording(options) {
     const {
       onRecordingError,
@@ -143,18 +156,19 @@ export class Camera extends React.PureComponent {
       ...passThroughOptions
     } = options;
     if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
+
     const onRecordCallback = (video, error) => {
       if (error != null) return onRecordingError(error);
       if (video != null) return onRecordingFinished(video);
-    };
-    // TODO: Use TurboModules to either make this a sync invokation, or make it async.
+    }; // TODO: Use TurboModules to either make this a sync invokation, or make it async.
+
+
     try {
       CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Pauses the current video recording.
    *
@@ -175,6 +189,8 @@ export class Camera extends React.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
+
+
   async pauseRecording() {
     try {
       return await CameraModule.pauseRecording(this.handle);
@@ -182,7 +198,6 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Resumes a currently paused video recording.
    *
@@ -203,6 +218,8 @@ export class Camera extends React.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
+
+
   async resumeRecording() {
     try {
       return await CameraModule.resumeRecording(this.handle);
@@ -210,7 +227,6 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Stop the current video recording.
    *
@@ -224,6 +240,8 @@ export class Camera extends React.PureComponent {
    * }, 5000)
    * ```
    */
+
+
   async stopRecording() {
     try {
       return await CameraModule.stopRecording(this.handle);
@@ -231,7 +249,6 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
-
   /**
    * Focus the camera to a specific point in the coordinate system.
    * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,
@@ -250,14 +267,15 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
+
+
   async focus(point) {
     try {
       return await CameraModule.focus(this.handle, point);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  }
-  //#endregion
+  } //#endregion
 
   /**
    * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).
@@ -268,6 +286,8 @@ export class Camera extends React.PureComponent {
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error
    * @platform iOS
    */
+
+
   async getAvailableVideoCodecs(fileType) {
     if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.
 
@@ -276,9 +296,8 @@ export class Camera extends React.PureComponent {
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  }
+  } //#region Static Functions (NativeModule)
 
-  //#region Static Functions (NativeModule)
   /**
    * Get a list of all available camera devices on the current phone.
    *
@@ -294,6 +313,8 @@ export class Camera extends React.PureComponent {
    * }
    * ```
    */
+
+
   static async getAvailableCameraDevices() {
     try {
       return await CameraModule.getAvailableCameraDevices();
@@ -309,6 +330,8 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async getCameraPermissionStatus() {
     try {
       return await CameraModule.getCameraPermissionStatus();
@@ -324,6 +347,8 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async getMicrophonePermissionStatus() {
     try {
       return await CameraModule.getMicrophonePermissionStatus();
@@ -339,6 +364,8 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async requestCameraPermission() {
     try {
       return await CameraModule.requestCameraPermission();
@@ -354,74 +381,86 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
+
+
   static async requestMicrophonePermission() {
     try {
       return await CameraModule.requestMicrophonePermission();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  }
-  //#endregion
-
+  } //#endregion
   //#region Events (Wrapped to maintain reference equality)
+
+
   onError(event) {
     if (this.props.onError != null) {
       const error = event.nativeEvent;
       const cause = isErrorWithCause(error.cause) ? error.cause : undefined;
-      this.props.onError(
-      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+      this.props.onError( // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
       new CameraRuntimeError(error.code, error.message, cause));
     }
   }
+
   onInitialized() {
     var _this$props$onInitial, _this$props;
+
     (_this$props$onInitial = (_this$props = this.props).onInitialized) === null || _this$props$onInitial === void 0 ? void 0 : _this$props$onInitial.call(_this$props);
   }
+
   onFrameProcessorPerformanceSuggestionAvailable(event) {
     if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null) this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);
-  }
-  //#endregion
-
+  } //#endregion
   //#region Lifecycle
+
   /** @internal */
+
+
   assertFrameProcessorsEnabled() {
     // @ts-expect-error JSI functions aren't typed
     if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {
-      throw new CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://react-native-vision-camera.com/docs/guides/troubleshooting');
+      throw new CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting');
     }
   }
+
   setFrameProcessor(frameProcessor) {
-    this.assertFrameProcessorsEnabled();
-    // @ts-expect-error JSI functions aren't typed
-    global.setFrameProcessor(this.handle, FrameProcessorContext.createWorklet(frameProcessor), FrameProcessorContext.workletRuntime);
+    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
+
+    global.setFrameProcessor(this.handle, frameProcessor);
   }
+
   unsetFrameProcessor() {
-    this.assertFrameProcessorsEnabled();
-    // @ts-expect-error JSI functions aren't typed
+    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
+
     global.unsetFrameProcessor(this.handle);
   }
+
   onViewReady() {
     this.isNativeViewMounted = true;
+
     if (this.props.frameProcessor != null) {
       // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
       this.setFrameProcessor(this.props.frameProcessor);
       this.lastFrameProcessor = this.props.frameProcessor;
     }
   }
-
   /** @internal */
+
+
   componentDidUpdate() {
     if (!this.isNativeViewMounted) return;
     const frameProcessor = this.props.frameProcessor;
+
     if (frameProcessor !== this.lastFrameProcessor) {
       // frameProcessor argument identity changed. Update native to reflect the change.
       if (frameProcessor != null) this.setFrameProcessor(frameProcessor);else this.unsetFrameProcessor();
       this.lastFrameProcessor = frameProcessor;
     }
-  }
-  //#endregion
+  } //#endregion
 
   /** @internal */
+
+
   render() {
     // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
     const {
@@ -441,11 +480,12 @@ export class Camera extends React.PureComponent {
       enableFrameProcessor: frameProcessor != null
     }));
   }
-}
-//#endregion
 
+} //#endregion
 // requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'
-const NativeCameraView = requireNativeComponent('CameraView',
-// @ts-expect-error because the type declarations are kinda wrong, no?
+
+_defineProperty(Camera, "displayName", 'Camera');
+
+const NativeCameraView = requireNativeComponent('CameraView', // @ts-expect-error because the type declarations are kinda wrong, no?
 Camera);
 //# sourceMappingURL=Camera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js.map b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
index 4daae85..1fc80f9 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
@@ -1 +1 @@
-{"version":3,"names":["React","requireNativeComponent","NativeModules","findNodeHandle","Platform","CameraCaptureError","CameraRuntimeError","tryParseNativeCameraError","isErrorWithCause","FrameProcessorContext","CameraModule","CameraView","console","error","Camera","PureComponent","displayName","isNativeViewMounted","constructor","props","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","takePhoto","options","e","takeSnapshot","OS","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","_this$props$onInitial","_this$props","call","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","createWorklet","workletRuntime","componentDidUpdate","render","device","frameProcessorFps","createElement","NativeCameraView","_extends","cameraId","id","enableFrameProcessor"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["Camera.tsx"],"names":["React","requireNativeComponent","NativeModules","findNodeHandle","Platform","CameraCaptureError","CameraRuntimeError","tryParseNativeCameraError","isErrorWithCause","CameraModule","CameraView","console","error","Camera","PureComponent","constructor","props","displayName","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","takePhoto","options","e","takeSnapshot","OS","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","isNativeViewMounted","componentDidUpdate","render","device","frameProcessorFps","id","NativeCameraView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';\nimport type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';\nimport type { CameraDevice } from './CameraDevice';\nimport type { ErrorWithCause } from './CameraError';\nimport { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';\nimport type { CameraProps } from './CameraProps';\nimport type { Frame } from './Frame';\nimport type { PhotoFile, TakePhotoOptions } from './PhotoFile';\nimport type { Point } from './Point';\nimport type { TakeSnapshotOptions } from './Snapshot';\nimport type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';\n\n//#region Types\nexport type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';\nexport type CameraPermissionRequestResult = 'authorized' | 'denied';\n\ninterface OnErrorEvent {\n  code: string;\n  message: string;\n  cause?: ErrorWithCause;\n}\ntype NativeCameraViewProps = Omit<\n  CameraProps,\n  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'\n> & {\n  cameraId: string;\n  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'\n  enableFrameProcessor: boolean;\n  onInitialized?: (event: NativeSyntheticEvent<void>) => void;\n  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;\n  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;\n  onViewReady: () => void;\n};\ntype RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;\n//#endregion\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst CameraModule = NativeModules.CameraView;\nif (CameraModule == null) console.error(\"Camera: Native Module 'CameraView' was null! Did you run pod install?\");\n\n//#region Camera Component\n/**\n * ### A powerful `<Camera>` component.\n *\n * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.\n *\n * The `<Camera>` component's most important (and therefore _required_) properties are:\n *\n * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using the {@linkcode useCameraDevices | useCameraDevices()} hook, or manually by using the {@linkcode Camera.getAvailableCameraDevices Camera.getAvailableCameraDevices()} function.\n * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n *\n * @example\n * ```tsx\n * function App() {\n *   const devices = useCameraDevices('wide-angle-camera')\n *   const device = devices.back\n *\n *   if (device == null) return <LoadingView />\n *   return (\n *     <Camera\n *       style={StyleSheet.absoluteFill}\n *       device={device}\n *       isActive={true}\n *     />\n *   )\n * }\n * ```\n *\n * @component\n */\nexport class Camera extends React.PureComponent<CameraProps> {\n  /** @internal */\n  static displayName = 'Camera';\n  /** @internal */\n  displayName = Camera.displayName;\n  private lastFrameProcessor: ((frame: Frame) => void) | undefined;\n  private isNativeViewMounted = false;\n\n  private readonly ref: React.RefObject<RefType>;\n\n  /** @internal */\n  constructor(props: CameraProps) {\n    super(props);\n    this.onViewReady = this.onViewReady.bind(this);\n    this.onInitialized = this.onInitialized.bind(this);\n    this.onError = this.onError.bind(this);\n    this.onFrameProcessorPerformanceSuggestionAvailable = this.onFrameProcessorPerformanceSuggestionAvailable.bind(this);\n    this.ref = React.createRef<RefType>();\n    this.lastFrameProcessor = undefined;\n  }\n\n  private get handle(): number | null {\n    const nodeHandle = findNodeHandle(this.ref.current);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new CameraRuntimeError(\n        'system/view-not-found',\n        \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\",\n      );\n    }\n\n    return nodeHandle;\n  }\n\n  //#region View-specific functions (UIViewManager)\n  /**\n   * Take a single photo and write it's content to a temporary file.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const photo = await camera.current.takePhoto({\n   *   qualityPrioritization: 'quality',\n   *   flash: 'on',\n   *   enableAutoRedEyeReduction: true\n   * })\n   * ```\n   */\n  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {\n    try {\n      return await CameraModule.takePhoto(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Take a snapshot of the current preview view.\n   *\n   * This can be used as an alternative to {@linkcode Camera.takePhoto | takePhoto()} if speed is more important than quality\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while taking a snapshot. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @platform Android\n   * @example\n   * ```ts\n   * const photo = await camera.current.takeSnapshot({\n   *   quality: 85,\n   *   skipMetadata: true\n   * })\n   * ```\n   */\n  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {\n    if (Platform.OS !== 'android')\n      throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);\n\n    try {\n      return await CameraModule.takeSnapshot(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Start a new video recording.\n   *\n   * Records in the following formats:\n   * * **iOS**: QuickTime (`.mov`)\n   * * **Android**: MPEG4 (`.mp4`)\n   *\n   * @blocking This function is synchronized/blocking.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * camera.current.startRecording({\n   *   onRecordingFinished: (video) => console.log(video),\n   *   onRecordingError: (error) => console.error(error),\n   * })\n   * setTimeout(() => {\n   *   camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public startRecording(options: RecordVideoOptions): void {\n    const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;\n    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')\n      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n\n    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {\n      if (error != null) return onRecordingError(error);\n      if (video != null) return onRecordingFinished(video);\n    };\n    // TODO: Use TurboModules to either make this a sync invokation, or make it async.\n    try {\n      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Pauses the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async pauseRecording(): Promise<void> {\n    try {\n      return await CameraModule.pauseRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Resumes a currently paused video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async resumeRecording(): Promise<void> {\n    try {\n      return await CameraModule.resumeRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Stop the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * await camera.current.startRecording()\n   * setTimeout(async () => {\n   *  const video = await camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public async stopRecording(): Promise<void> {\n    try {\n      return await CameraModule.stopRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Focus the camera to a specific point in the coordinate system.\n   * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,\n   * and expressed in Pixel on iOS and Points on Android.\n   *  * `(0, 0)` means **top left**.\n   *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n   *\n   * Make sure the value doesn't exceed the CameraView's dimensions.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * await camera.current.focus({\n   *   x: tapEvent.x,\n   *   y: tapEvent.y\n   * })\n   * ```\n   */\n  public async focus(point: Point): Promise<void> {\n    try {\n      return await CameraModule.focus(this.handle, point);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  /**\n   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).\n   * @example\n   * ```ts\n   * const codecs = await camera.current.getAvailableVideoCodecs(\"mp4\")\n   * ```\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error\n   * @platform iOS\n   */\n  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {\n    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.\n\n    try {\n      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  //#region Static Functions (NativeModule)\n  /**\n   * Get a list of all available camera devices on the current phone.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting all available camera devices. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const devices = await Camera.getAvailableCameraDevices()\n   * const filtered = devices.filter((d) => matchesMyExpectations(d))\n   * const sorted = devices.sort(sortDevicesByAmountOfCameras)\n   * return {\n   *   back: sorted.find((d) => d.position === \"back\"),\n   *   front: sorted.find((d) => d.position === \"front\")\n   * }\n   * ```\n   */\n  public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {\n    try {\n      return await CameraModule.getAvailableCameraDevices();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the camera.\n   *\n   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getCameraPermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Microphone-Recording Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the microphone.\n   *\n   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getMicrophonePermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n   *\n   * If the user has previously blocked the app from using the camera, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestCameraPermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n   *\n   * If the user has previously blocked the app from using the microphone, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestMicrophonePermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  //#region Events (Wrapped to maintain reference equality)\n  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {\n    if (this.props.onError != null) {\n      const error = event.nativeEvent;\n      const cause = isErrorWithCause(error.cause) ? error.cause : undefined;\n      this.props.onError(\n        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n        new CameraRuntimeError(error.code, error.message, cause),\n      );\n    }\n  }\n\n  private onInitialized(): void {\n    this.props.onInitialized?.();\n  }\n\n  private onFrameProcessorPerformanceSuggestionAvailable(event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>): void {\n    if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null)\n      this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);\n  }\n  //#endregion\n\n  //#region Lifecycle\n  /** @internal */\n  private assertFrameProcessorsEnabled(): void {\n    // @ts-expect-error JSI functions aren't typed\n    if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {\n      throw new CameraRuntimeError(\n        'frame-processor/unavailable',\n        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',\n      );\n    }\n  }\n\n  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.setFrameProcessor(this.handle, frameProcessor);\n  }\n\n  private unsetFrameProcessor(): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.unsetFrameProcessor(this.handle);\n  }\n\n  private onViewReady(): void {\n    this.isNativeViewMounted = true;\n    if (this.props.frameProcessor != null) {\n      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n      this.setFrameProcessor(this.props.frameProcessor);\n      this.lastFrameProcessor = this.props.frameProcessor;\n    }\n  }\n\n  /** @internal */\n  componentDidUpdate(): void {\n    if (!this.isNativeViewMounted) return;\n    const frameProcessor = this.props.frameProcessor;\n    if (frameProcessor !== this.lastFrameProcessor) {\n      // frameProcessor argument identity changed. Update native to reflect the change.\n      if (frameProcessor != null) this.setFrameProcessor(frameProcessor);\n      else this.unsetFrameProcessor();\n\n      this.lastFrameProcessor = frameProcessor;\n    }\n  }\n  //#endregion\n\n  /** @internal */\n  public render(): React.ReactNode {\n    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n    const { device, frameProcessor, frameProcessorFps, ...props } = this.props;\n    return (\n      <NativeCameraView\n        {...props}\n        frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}\n        cameraId={device.id}\n        ref={this.ref}\n        onViewReady={this.onViewReady}\n        onInitialized={this.onInitialized}\n        onError={this.onError}\n        onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}\n        enableFrameProcessor={frameProcessor != null}\n      />\n    );\n  }\n}\n//#endregion\n\n// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'\nconst NativeCameraView = requireNativeComponent<NativeCameraViewProps>(\n  'CameraView',\n  // @ts-expect-error because the type declarations are kinda wrong, no?\n  Camera,\n);\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
index aa20242..a5a7ce3 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
+++ b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
@@ -23,6 +23,7 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
     // @ts-expect-error for very obvious reasons
     return physicalDeviceTypes[0];
   }
+
   const hasWide = physicalDeviceTypes.includes('wide-angle-camera');
   const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');
   const hasTele = physicalDeviceTypes.includes('telephoto-camera');
@@ -31,7 +32,6 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
   if (hasWide && hasTele) return 'dual-camera';
   throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);
 };
-
 /**
  * Indicates a format's color space.
  *
@@ -54,30 +54,4 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
  *
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
-
-/**
- * Indicates a format's autofocus system.
- *
- * * `"none"`: Indicates that autofocus is not available
- * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
- * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
- */
-
-/**
- * Indicates a format's supported video stabilization mode
- *
- * * `"off"`: Indicates that video should not be stabilized
- * * `"standard"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline
- * * `"cinematic"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode
- * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
- * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
- */
-
-/**
- * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.
- */
-
-/**
- * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function
- */
 //# sourceMappingURL=CameraDevice.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
index aa8f937..05a5fbb 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
@@ -1 +1 @@
-{"version":3,"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"sourceRoot":"../../src","sources":["CameraDevice.ts"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,wBAAwB,GACnCC,mBAA+C,IACQ;EACvD,IAAIA,mBAAmB,CAACC,MAAM,KAAK,CAAC,EAAE;IACpC;IACA,OAAOD,mBAAmB,CAAC,CAAC,CAAC;EAC/B;EAEA,MAAME,OAAO,GAAGF,mBAAmB,CAACG,QAAQ,CAAC,mBAAmB,CAAC;EACjE,MAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAAQ,CAAC,yBAAyB,CAAC;EACxE,MAAME,OAAO,GAAGL,mBAAmB,CAACG,QAAQ,CAAC,kBAAkB,CAAC;EAEhE,IAAIE,OAAO,IAAIH,OAAO,IAAIE,QAAQ,EAAE,OAAO,eAAe;EAC1D,IAAIF,OAAO,IAAIE,QAAQ,EAAE,OAAO,kBAAkB;EAClD,IAAIF,OAAO,IAAIG,OAAO,EAAE,OAAO,aAAa;EAE5C,MAAM,IAAIC,KAAK,CAAE,6CAA4CN,mBAAmB,CAACO,IAAI,CAAC,KAAK,CAAE,EAAC,CAAC;AACjG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AA0EA;AACA;AACA"}
\ No newline at end of file
+{"version":3,"sources":["CameraDevice.ts"],"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,wBAAwB,GACnCC,mBADsC,IAEiB;AACvD,MAAIA,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACA,WAAOD,mBAAmB,CAAC,CAAD,CAA1B;AACD;;AAED,QAAME,OAAO,GAAGF,mBAAmB,CAACG,QAApB,CAA6B,mBAA7B,CAAhB;AACA,QAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAApB,CAA6B,yBAA7B,CAAjB;AACA,QAAME,OAAO,GAAGL,mBAAmB,CAACG,QAApB,CAA6B,kBAA7B,CAAhB;AAEA,MAAIE,OAAO,IAAIH,OAAX,IAAsBE,QAA1B,EAAoC,OAAO,eAAP;AACpC,MAAIF,OAAO,IAAIE,QAAf,EAAyB,OAAO,kBAAP;AACzB,MAAIF,OAAO,IAAIG,OAAf,EAAwB,OAAO,aAAP;AAExB,QAAM,IAAIC,KAAJ,CAAW,6CAA4CN,mBAAmB,CAACO,IAApB,CAAyB,KAAzB,CAAgC,EAAvF,CAAN;AACD,CAjBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import type { CameraPosition } from './CameraPosition';\nimport type { PixelFormat } from './PixelFormat';\n\n/**\n * Indentifiers for a physical camera (one that actually exists on the back/front of the device)\n *\n * * `\"ultra-wide-angle-camera\"`: A built-in camera with a shorter focal length than that of a wide-angle camera. (focal length between below 24mm)\n * * `\"wide-angle-camera\"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)\n * * `\"telephoto-camera\"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)\n */\nexport type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';\n\n/**\n * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).\n *\n * * `\"dual-camera\"`: A combination of wide-angle and telephoto cameras that creates a capture device.\n * * `\"dual-wide-camera\"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.\n * * `\"triple-camera\"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.\n */\nexport type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';\n\n/**\n * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.\n * @method\n */\nexport const parsePhysicalDeviceTypes = (\n  physicalDeviceTypes: PhysicalCameraDeviceType[],\n): PhysicalCameraDeviceType | LogicalCameraDeviceType => {\n  if (physicalDeviceTypes.length === 1) {\n    // @ts-expect-error for very obvious reasons\n    return physicalDeviceTypes[0];\n  }\n\n  const hasWide = physicalDeviceTypes.includes('wide-angle-camera');\n  const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');\n  const hasTele = physicalDeviceTypes.includes('telephoto-camera');\n\n  if (hasTele && hasWide && hasUltra) return 'triple-camera';\n  if (hasWide && hasUltra) return 'dual-wide-camera';\n  if (hasWide && hasTele) return 'dual-camera';\n\n  throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);\n};\n\n/**\n * Indicates a format's color space.\n *\n * #### The following colorspaces are available on iOS:\n * * `\"srgb\"`: The sGRB color space.\n * * `\"p3-d65\"`: The P3 D65 wide color space which uses Illuminant D65 as the white point\n * * `\"hlg-bt2020\"`: The BT2020 wide color space which uses Illuminant D65 as the white point and Hybrid Log-Gamma as the transfer function\n *\n * > See [\"AVCaptureColorSpace\"](https://developer.apple.com/documentation/avfoundation/avcapturecolorspace) for more information.\n *\n * #### The following colorspaces are available on Android:\n * * `\"yuv\"`: The Multi-plane Android YCbCr color space. (YUV 420_888, 422_888 or 444_888)\n * * `\"jpeg\"`: The compressed JPEG color space.\n * * `\"jpeg-depth\"`: The compressed JPEG color space including depth data.\n * * `\"raw\"`: The Camera's RAW sensor color space. (Single-channel Bayer-mosaic image, usually 16 bit)\n * * `\"heic\"`: The compressed HEIC color space.\n * * `\"private\"`: The Android private opaque image format. (The choices of the actual format and pixel data layout are entirely up to the device-specific and framework internal implementations, and may vary depending on use cases even for the same device. These buffers are not directly accessible to the application)\n * * `\"depth-16\"`: The Android dense depth image format (16 bit)\n * * `\"unknown\"`: Placeholder for an unknown image/pixel format. [Edit this file](https://github.com/mrousavy/react-native-vision-camera/edit/main/android/src/main/java/com/mrousavy/camera/parsers/ImageFormat+String.kt) to add a name for the unknown format.\n *\n * > See [\"Android Color Formats\"](https://jbit.net/Android_Colors/) for more information.\n */\nexport type ColorSpace =\n  // ios\n  | 'hlg-bt2020'\n  | 'p3-d65'\n  | 'srgb'\n  // android\n  | 'yuv'\n  | 'jpeg'\n  | 'jpeg-depth'\n  | 'raw'\n  | 'heic'\n  | 'private'\n  | 'depth-16'\n  | 'unknown';\n\n/**\n * Indicates a format's autofocus system.\n *\n * * `\"none\"`: Indicates that autofocus is not available\n * * `\"contrast-detection\"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position\n * * `\"phase-detection\"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus\n */\nexport type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';\n\n/**\n * Indicates a format's supported video stabilization mode\n *\n * * `\"off\"`: Indicates that video should not be stabilized\n * * `\"standard\"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline\n * * `\"cinematic\"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode\n * * `\"cinematic-extended\"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)\n * * `\"auto\"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically\n */\nexport type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';\n\nexport interface FrameRateRange {\n  minFrameRate: number;\n  maxFrameRate: number;\n}\n\n/**\n * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.\n */\nexport interface CameraDeviceFormat {\n  /**\n   * The height of the highest resolution a still image (photo) can be produced in\n   */\n  photoHeight: number;\n  /**\n   * The width of the highest resolution a still image (photo) can be produced in\n   */\n  photoWidth: number;\n  /**\n   * The video resolutions's height\n   */\n  videoHeight: number;\n  /**\n   * The video resolution's width\n   */\n  videoWidth: number;\n  /**\n   * A boolean value specifying whether this format supports the highest possible photo quality that can be delivered on the current platform.\n   *\n   * @platform iOS 13.0+\n   */\n  isHighestPhotoQualitySupported?: boolean;\n  /**\n   * Maximum supported ISO value\n   */\n  maxISO: number;\n  /**\n   * Minimum supported ISO value\n   */\n  minISO: number;\n  /**\n   * The video field of view in degrees\n   */\n  fieldOfView: number;\n  /**\n   * The maximum zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The available color spaces.\n   *\n   * Note: On Android, this will always be only `[\"yuv\"]`\n   */\n  colorSpaces: ColorSpace[];\n  /**\n   * Specifies whether this format supports HDR mode for video capture\n   */\n  supportsVideoHDR: boolean;\n  /**\n   * Specifies whether this format supports HDR mode for photo capture\n   */\n  supportsPhotoHDR: boolean;\n  /**\n   * All available frame rate ranges. You can query this to find the highest frame rate available\n   */\n  frameRateRanges: FrameRateRange[];\n  /**\n   * Specifies this format's auto focus system.\n   */\n  autoFocusSystem: AutoFocusSystem;\n  /**\n   * All supported video stabilization modes\n   */\n  videoStabilizationModes: VideoStabilizationMode[];\n  /**\n   * Specifies this format's pixel format. The pixel format specifies how the individual pixels are interpreted as a visual image.\n   *\n   * The most common format is `420v`. Some formats (like `x420`) are not compatible with some frame processor plugins (e.g. MLKit)\n   */\n  pixelFormat: PixelFormat;\n}\n\n/**\n * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function\n */\nexport interface CameraDevice {\n  /**\n   * The native ID of the camera device instance.\n   */\n  id: string;\n  /**\n   * The physical devices this `CameraDevice` contains.\n   *\n   * * If this camera device is a **logical camera** (combination of multiple physical cameras), there are multiple cameras in this array.\n   * * If this camera device is a **physical camera**, there is only a single element in this array.\n   *\n   * You can check if the camera is a logical multi-camera by using the `isMultiCam` property.\n   */\n  devices: PhysicalCameraDeviceType[];\n  /**\n   * Specifies the physical position of this camera. (back or front)\n   */\n  position: CameraPosition;\n  /**\n   * A friendly localized name describing the camera.\n   */\n  name: string;\n  /**\n   * Specifies whether this camera supports enabling flash for photo capture.\n   */\n  hasFlash: boolean;\n  /**\n   * Specifies whether this camera supports continuously enabling the flash to act like a torch (flash with video capture)\n   */\n  hasTorch: boolean;\n  /**\n   * A property indicating whether the device is a virtual multi-camera consisting of multiple combined physical cameras.\n   *\n   * Examples:\n   * * The Dual Camera, which supports seamlessly switching between a wide and telephoto camera while zooming and generating depth data from the disparities between the different points of view of the physical cameras.\n   * * The TrueDepth Camera, which generates depth data from disparities between a YUV camera and an Infrared camera pointed in the same direction.\n   */\n  isMultiCam: boolean;\n  /**\n   * Minimum available zoom factor (e.g. `1`)\n   */\n  minZoom: number;\n  /**\n   * Maximum available zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The zoom factor where the camera is \"neutral\".\n   *\n   * * For single-physical cameras this property is always `1.0`.\n   * * For multi cameras this property is a value between `minZoom` and `maxZoom`, where the camera is in _wide-angle_ mode and hasn't switched to the _ultra-wide-angle_ (\"fish-eye\") or telephoto camera yet.\n   *\n   * Use this value as an initial value for the zoom property if you implement custom zoom. (e.g. reanimated shared value should be initially set to this value)\n   * @example\n   * const device = ...\n   *\n   * const zoom = useSharedValue(device.neutralZoom) // <-- initial value so it doesn't start at ultra-wide\n   * const cameraProps = useAnimatedProps(() => ({\n   *   zoom: zoom.value\n   * }))\n   */\n  neutralZoom: number;\n  /**\n   * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.\n   *\n   * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.\n   */\n  formats: CameraDeviceFormat[];\n  /**\n   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See [\"The `supportsParallelVideoProcessing` prop\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.\n   *\n   * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.\n   *\n   * * On iOS this value is always `true`.\n   * * On newer Android devices this value is always `true`.\n   * * On older Android devices this value is `false` if the Camera's hardware level is `LEGACY` or `LIMITED`, `true` otherwise. (See [`INFO_SUPPORTED_HARDWARE_LEVEL`](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL) or [the tables at \"Regular capture\"](https://developer.android.com/reference/android/hardware/camera2/CameraDevice#regular-capture))\n   */\n  supportsParallelVideoProcessing: boolean;\n  /**\n   * Whether this camera device supports low light boost.\n   */\n  supportsLowLightBoost: boolean;\n  /**\n   * Whether this camera supports taking photos with depth data.\n   *\n   * **! Work in Progress !**\n   */\n  supportsDepthCapture: boolean;\n  /**\n   * Whether this camera supports taking photos in RAW format\n   *\n   * **! Work in Progress !**\n   */\n  supportsRawCapture: boolean;\n  /**\n   * Specifies whether this device supports focusing ({@linkcode Camera.focus | Camera.focus(...)})\n   */\n  supportsFocus: boolean;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraError.js b/node_modules/react-native-vision-camera/lib/module/CameraError.js
index 5629f57..f86fd42 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraError.js
+++ b/node_modules/react-native-vision-camera/lib/module/CameraError.js
@@ -1,3 +1,5 @@
+function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -9,78 +11,86 @@ class CameraError extends Error {
   get code() {
     return this._code;
   }
+
   get message() {
     return this._message;
   }
+
   get cause() {
     const c = this._cause;
     if (c == null) return undefined;
     return new Error(`[${c.code}]: ${c.message}`);
   }
-
   /**
    * @internal
    */
+
+
   constructor(code, message, cause) {
     super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);
+
+    _defineProperty(this, "_code", void 0);
+
+    _defineProperty(this, "_message", void 0);
+
+    _defineProperty(this, "_cause", void 0);
+
     super.name = code;
     super.message = message;
     this._code = code;
     this._message = message;
     this._cause = cause;
   }
+
   toString() {
     return `[${this.code}]: ${this.message}`;
   }
-}
 
+}
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
-export class CameraCaptureError extends CameraError {}
 
+
+export class CameraCaptureError extends CameraError {}
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
-export class CameraRuntimeError extends CameraError {}
 
+export class CameraRuntimeError extends CameraError {}
 /**
  * Checks if the given `error` is of type {@linkcode ErrorWithCause}
  * @param {unknown} error Any unknown object to validate
  * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}
  */
-export const isErrorWithCause = error => typeof error === 'object' && error != null &&
-// @ts-expect-error error is still unknown
-typeof error.message === 'string' && (
-// @ts-expect-error error is still unknown
-typeof error.stacktrace === 'string' || error.stacktrace == null) && (
-// @ts-expect-error error is still unknown
+
+export const isErrorWithCause = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
+typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+typeof error.stacktrace === 'string' || error.stacktrace == null) && ( // @ts-expect-error error is still unknown
 isErrorWithCause(error.cause) || error.cause == null);
-const isCameraErrorJson = error => typeof error === 'object' && error != null &&
-// @ts-expect-error error is still unknown
-typeof error.code === 'string' &&
-// @ts-expect-error error is still unknown
-typeof error.message === 'string' && (
-// @ts-expect-error error is still unknown
-typeof error.cause === 'object' || error.cause == null);
 
+const isCameraErrorJson = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
+typeof error.code === 'string' && // @ts-expect-error error is still unknown
+typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+typeof error.cause === 'object' || error.cause == null);
 /**
  * Tries to parse an error coming from native to a typed JS camera error.
  * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.
  * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable
  * @method
  */
+
+
 export const tryParseNativeCameraError = nativeError => {
   if (isCameraErrorJson(nativeError)) {
     if (nativeError.code.startsWith('capture')) {
       return new CameraCaptureError(nativeError.code, nativeError.message, nativeError.cause);
     } else {
-      return new CameraRuntimeError(
-      // @ts-expect-error the code is string, we narrow it down to TS union.
+      return new CameraRuntimeError( // @ts-expect-error the code is string, we narrow it down to TS union.
       nativeError.code, nativeError.message, nativeError.cause);
     }
   } else {
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraError.js.map b/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
index 28d0b47..964fac5 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
@@ -1 +1 @@
-{"version":3,"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"sourceRoot":"../../src","sources":["CameraError.ts"],"mappings":"AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAW,SAAwCC,KAAK,CAAC;EAK7D,IAAWC,IAAIA,CAAA,EAAU;IACvB,OAAO,IAAI,CAACC,KAAK;EACnB;EACA,IAAWC,OAAOA,CAAA,EAAW;IAC3B,OAAO,IAAI,CAACC,QAAQ;EACtB;EACA,IAAWC,KAAKA,CAAA,EAAsB;IACpC,MAAMC,CAAC,GAAG,IAAI,CAACC,MAAM;IACrB,IAAID,CAAC,IAAI,IAAI,EAAE,OAAOE,SAAS;IAC/B,OAAO,IAAIR,KAAK,CAAE,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAAC,CAAC;EAC/C;;EAEA;AACF;AACA;EACEM,WAAWA,CAACR,IAAW,EAAEE,OAAe,EAAEE,KAAsB,EAAE;IAChE,KAAK,CAAE,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAI,GAAI,YAAWA,KAAK,CAACF,OAAQ,GAAE,GAAG,EAAG,EAAC,CAAC;IAClF,KAAK,CAACO,IAAI,GAAGT,IAAI;IACjB,KAAK,CAACE,OAAO,GAAGA,OAAO;IACvB,IAAI,CAACD,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGF,KAAK;EACrB;EAEOM,QAAQA,CAAA,EAAW;IACxB,OAAQ,IAAG,IAAI,CAACV,IAAK,MAAK,IAAI,CAACE,OAAQ,EAAC;EAC1C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,kBAAkB,SAASb,WAAW,CAAe;;AAElE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,kBAAkB,SAASd,WAAW,CAEjD;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMe,gBAAgB,GAAIC,KAAc,IAC7C,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACC,UAAU,KAAK,QAAQ,IAAID,KAAK,CAACC,UAAU,IAAI,IAAI,CAAC;AAClE;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAK,CAAC,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;AAExD,MAAMY,iBAAiB,GAAIF,KAAc,IACvC,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACd,IAAI,KAAK,QAAQ;AAC9B;AACA,OAAOc,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACV,KAAK,KAAK,QAAQ,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMa,yBAAyB,GAAOC,WAAc,IAAoD;EAC7G,IAAIF,iBAAiB,CAACE,WAAW,CAAC,EAAE;IAClC,IAAIA,WAAW,CAAClB,IAAI,CAACmB,UAAU,CAAC,SAAS,CAAC,EAAE;MAC1C,OAAO,IAAIR,kBAAkB,CAACO,WAAW,CAAClB,IAAI,EAAkBkB,WAAW,CAAChB,OAAO,EAAEgB,WAAW,CAACd,KAAK,CAAC;IACzG,CAAC,MAAM;MACL,OAAO,IAAIQ,kBAAkB;MAC3B;MACAM,WAAW,CAAClB,IAAI,EAChBkB,WAAW,CAAChB,OAAO,EACnBgB,WAAW,CAACd,KACd,CAAC;IACH;EACF,CAAC,MAAM;IACL,OAAOc,WAAW;EACpB;AACF,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["CameraError.ts"],"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"mappings":";;AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAN,SAAyDC,KAAzD,CAA+D;AAK9C,MAAJC,IAAI,GAAU;AACvB,WAAO,KAAKC,KAAZ;AACD;;AACiB,MAAPC,OAAO,GAAW;AAC3B,WAAO,KAAKC,QAAZ;AACD;;AACe,MAALC,KAAK,GAAsB;AACpC,UAAMC,CAAC,GAAG,KAAKC,MAAf;AACA,QAAID,CAAC,IAAI,IAAT,EAAe,OAAOE,SAAP;AACf,WAAO,IAAIR,KAAJ,CAAW,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAApC,CAAP;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,WAAW,CAACR,IAAD,EAAcE,OAAd,EAA+BE,KAA/B,EAAuD;AAChE,UAAO,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAT,GAAiB,YAAWA,KAAK,CAACF,OAAQ,GAA1C,GAA+C,EAAG,EAAhF;;AADgE;;AAAA;;AAAA;;AAEhE,UAAMO,IAAN,GAAaT,IAAb;AACA,UAAME,OAAN,GAAgBA,OAAhB;AACA,SAAKD,KAAL,GAAaD,IAAb;AACA,SAAKG,QAAL,GAAgBD,OAAhB;AACA,SAAKI,MAAL,GAAcF,KAAd;AACD;;AAEMM,EAAAA,QAAQ,GAAW;AACxB,WAAQ,IAAG,KAAKV,IAAK,MAAK,KAAKE,OAAQ,EAAvC;AACD;;AA/B4D;AAkC/D;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMS,kBAAN,SAAiCb,WAAjC,CAA2D;AAElE;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMc,kBAAN,SAAiCd,WAAjC,CAEL;AAEF;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMe,gBAAgB,GAAIC,KAAD,IAC9B,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACZ,OAAb,KAAyB,QAHzB,MAIA;AACC,OAAOY,KAAK,CAACC,UAAb,KAA4B,QAA5B,IAAwCD,KAAK,CAACC,UAAN,IAAoB,IAL7D,OAMA;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAP,CAAhB,IAAiCU,KAAK,CAACV,KAAN,IAAe,IAPjD,CADK;;AAUP,MAAMY,iBAAiB,GAAIF,KAAD,IACxB,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACd,IAAb,KAAsB,QAHtB,IAIA;AACA,OAAOc,KAAK,CAACZ,OAAb,KAAyB,QALzB,MAMA;AACC,OAAOY,KAAK,CAACV,KAAb,KAAuB,QAAvB,IAAmCU,KAAK,CAACV,KAAN,IAAe,IAPnD,CADF;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMa,yBAAyB,GAAOC,WAAJ,IAAsE;AAC7G,MAAIF,iBAAiB,CAACE,WAAD,CAArB,EAAoC;AAClC,QAAIA,WAAW,CAAClB,IAAZ,CAAiBmB,UAAjB,CAA4B,SAA5B,CAAJ,EAA4C;AAC1C,aAAO,IAAIR,kBAAJ,CAAuBO,WAAW,CAAClB,IAAnC,EAAyDkB,WAAW,CAAChB,OAArE,EAA8EgB,WAAW,CAACd,KAA1F,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAIQ,kBAAJ,EACL;AACAM,MAAAA,WAAW,CAAClB,IAFP,EAGLkB,WAAW,CAAChB,OAHP,EAILgB,WAAW,CAACd,KAJP,CAAP;AAMD;AACF,GAXD,MAWO;AACL,WAAOc,WAAP;AACD;AACF,CAfM","sourcesContent":["export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';\nexport type ParameterError =\n  | 'parameter/invalid-parameter'\n  | 'parameter/unsupported-os'\n  | 'parameter/unsupported-output'\n  | 'parameter/unsupported-input'\n  | 'parameter/invalid-combination';\nexport type DeviceError =\n  | 'device/configuration-error'\n  | 'device/no-device'\n  | 'device/invalid-device'\n  | 'device/parallel-video-processing-not-supported'\n  | 'device/torch-unavailable'\n  | 'device/microphone-unavailable'\n  | 'device/low-light-boost-not-supported'\n  | 'device/focus-not-supported'\n  | 'device/camera-not-available-on-simulator';\nexport type FrameProcessorError = 'frame-processor/unavailable';\nexport type FormatError =\n  | 'format/invalid-fps'\n  | 'format/invalid-hdr'\n  | 'format/invalid-low-light-boost'\n  | 'format/invalid-format'\n  | 'format/invalid-color-space'\n  | 'format/invalid-preset';\nexport type SessionError =\n  | 'session/camera-not-ready'\n  | 'session/audio-session-setup-failed'\n  | 'session/audio-in-use-by-other-app'\n  | 'session/audio-session-failed-to-activate';\nexport type CaptureError =\n  | 'capture/invalid-photo-format'\n  | 'capture/encoder-error'\n  | 'capture/muxer-error'\n  | 'capture/recording-in-progress'\n  | 'capture/no-recording-in-progress'\n  | 'capture/file-io-error'\n  | 'capture/create-temp-file-error'\n  | 'capture/invalid-video-options'\n  | 'capture/create-recorder-error'\n  | 'capture/recorder-error'\n  | 'capture/no-valid-data'\n  | 'capture/inactive-source'\n  | 'capture/insufficient-storage'\n  | 'capture/file-size-limit-reached'\n  | 'capture/invalid-photo-codec'\n  | 'capture/not-bound-error'\n  | 'capture/capture-type-not-supported'\n  | 'capture/video-not-enabled'\n  | 'capture/photo-not-enabled'\n  | 'capture/aborted'\n  | 'capture/unknown';\nexport type SystemError = 'system/no-camera-manager' | 'system/view-not-found';\nexport type UnknownError = 'unknown/unknown';\n\n/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\nexport interface ErrorWithCause {\n  /**\n   * The native error's code.\n   *\n   * * iOS: `NSError.code`\n   * * Android: N/A\n   */\n  code?: number;\n  /**\n   * The native error's domain.\n   *\n   * * iOS: `NSError.domain`\n   * * Android: N/A\n   */\n  domain?: string;\n  /**\n   * The native error description\n   *\n   * * iOS: `NSError.message`\n   * * Android: `Throwable.message`\n   */\n  message: string;\n  /**\n   * Optional additional details\n   *\n   * * iOS: `NSError.userInfo`\n   * * Android: N/A\n   */\n  details?: Record<string, unknown>;\n  /**\n   * Optional Java stacktrace\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.stacktrace.toString()`\n   */\n  stacktrace?: string;\n  /**\n   * Optional additional cause for nested errors\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.cause`\n   */\n  cause?: ErrorWithCause;\n}\n\ntype CameraErrorCode =\n  | PermissionError\n  | ParameterError\n  | DeviceError\n  | FrameProcessorError\n  | FormatError\n  | SessionError\n  | CaptureError\n  | SystemError\n  | UnknownError;\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError<TCode extends CameraErrorCode> extends Error {\n  private readonly _code: TCode;\n  private readonly _message: string;\n  private readonly _cause?: ErrorWithCause;\n\n  public get code(): TCode {\n    return this._code;\n  }\n  public get message(): string {\n    return this._message;\n  }\n  public get cause(): Error | undefined {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code: TCode, message: string, cause?: ErrorWithCause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n\n  public toString(): string {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError<CaptureError> {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError<\n  PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError\n> {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = (error: unknown): error is ErrorWithCause =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.stacktrace === 'string' || error.stacktrace == null) &&\n  // @ts-expect-error error is still unknown\n  (isErrorWithCause(error.cause) || error.cause == null);\n\nconst isCameraErrorJson = (error: unknown): error is { code: string; message: string; cause?: ErrorWithCause } =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.code === 'string' &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = <T>(nativeError: T): (CameraRuntimeError | CameraCaptureError) | T => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code as CaptureError, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n        // @ts-expect-error the code is string, we narrow it down to TS union.\n        nativeError.code,\n        nativeError.message,\n        nativeError.cause,\n      );\n    }\n  } else {\n    return nativeError;\n  }\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map b/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
index f4e0458..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPosition.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map b/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
index 7260b12..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPreset.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map b/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
index f5d0d4d..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraProps.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Frame.js.map b/node_modules/react-native-vision-camera/lib/module/Frame.js.map
index b6541a5..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/Frame.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Frame.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Frame.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js
deleted file mode 100644
index 923724c..0000000
--- a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js
+++ /dev/null
@@ -1,19 +0,0 @@
-let workletRuntime = null;
-let createWorklet = () => {
-  throw new Error("Reanimated V3 is not installed, Frame Processors are not available!");
-};
-try {
-  const reanimated = require('react-native-reanimated');
-  if (reanimated.createWorkletRuntime == null) {
-    console.warn("Frame Processors are disabled because you're using an incompatible version of Reanimated.");
-  }
-  workletRuntime = reanimated.createWorkletRuntime('VisionCamera');
-  createWorklet = reanimated.makeShareableCloneRecursive;
-} catch {
-  // Frame Processors are not enabled
-}
-export const FrameProcessorContext = {
-  workletRuntime: workletRuntime,
-  createWorklet: createWorklet
-};
-//# sourceMappingURL=FrameProcessorContext.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map
deleted file mode 100644
index ac6c964..0000000
--- a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"names":["workletRuntime","createWorklet","Error","reanimated","require","createWorkletRuntime","console","warn","makeShareableCloneRecursive","FrameProcessorContext"],"sourceRoot":"../../src","sources":["FrameProcessorContext.ts"],"mappings":"AAAA,IAAIA,cAAc,GAAG,IAAI;AACzB,IAAIC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;AACxF,CAAC;AAED,IAAI;EACF,MAAMC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EACrD,IAAID,UAAU,CAACE,oBAAoB,IAAI,IAAI,EAAE;IAC3CC,OAAO,CAACC,IAAI,CAAC,2FAA2F,CAAC;EAC3G;EACAP,cAAc,GAAGG,UAAU,CAACE,oBAAoB,CAAC,cAAc,CAAC;EAChEJ,aAAa,GAAGE,UAAU,CAACK,2BAA2B;AACxD,CAAC,CAAC,MAAM;EACN;AAAA;AAGF,OAAO,MAAMC,qBAAqB,GAAG;EACnCT,cAAc,EAAEA,cAAc;EAC9BC,aAAa,EAAEA;AACjB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map b/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
index 220a942..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["PhotoFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map b/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
index b89d3e3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["PixelFormat.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Point.js.map b/node_modules/react-native-vision-camera/lib/module/Point.js.map
index 7805603..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/Point.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Point.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Point.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map b/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
index 5eb9af3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["Snapshot.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map b/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
index a710f60..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["TemporaryFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map b/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
index 72015f6..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["VideoFile.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
index afa0c64..dad91dc 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
@@ -1,9 +1,9 @@
 import { withGradleProperties } from '@expo/config-plugins';
-
 /**
  * Set the `disableFrameProcessors` value in the static `gradle.properties` file.
  * This is used to disable frame processors if you don't need it for android.
  */
+
 export const withDisableFrameProcessorsAndroid = c => {
   const disableFrameProcessorsKey = 'disableFrameProcessors';
   return withGradleProperties(c, config => {
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
index 316e100..5c71989 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
@@ -1 +1 @@
-{"version":3,"names":["withGradleProperties","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsAndroid.ts"],"mappings":"AAAA,SAAuBA,oBAAoB,QAAQ,sBAAsB;;AAEzE;AACA;AACA;AACA;AACA,OAAO,MAAMC,iCAA+C,GAAIC,CAAC,IAAK;EACpE,MAAMC,yBAAyB,GAAG,wBAAwB;EAC1D,OAAOH,oBAAoB,CAACE,CAAC,EAAGE,MAAM,IAAK;IACzCA,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACC,MAAM,CAAEC,IAAI,IAAK;MACrD,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACE,GAAG,KAAKN,yBAAyB,EAAE,OAAO,KAAK;MACpF,OAAO,IAAI;IACb,CAAC,CAAC;IAEFC,MAAM,CAACC,UAAU,CAACK,IAAI,CAAC;MACrBF,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAEN,yBAAyB;MAC9BQ,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,OAAOP,MAAM;EACf,CAAC,CAAC;AACJ,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["withDisableFrameProcessorsAndroid.ts"],"names":["withGradleProperties","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"mappings":"AAAA,SAAuBA,oBAAvB,QAAmD,sBAAnD;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iCAA+C,GAAIC,CAAD,IAAO;AACpE,QAAMC,yBAAyB,GAAG,wBAAlC;AACA,SAAOH,oBAAoB,CAACE,CAAD,EAAKE,MAAD,IAAY;AACzCA,IAAAA,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACC,UAAP,CAAkBC,MAAlB,CAA0BC,IAAD,IAAU;AACrD,UAAIA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BD,IAAI,CAACE,GAAL,KAAaN,yBAA7C,EAAwE,OAAO,KAAP;AACxE,aAAO,IAAP;AACD,KAHmB,CAApB;AAKAC,IAAAA,MAAM,CAACC,UAAP,CAAkBK,IAAlB,CAAuB;AACrBF,MAAAA,IAAI,EAAE,UADe;AAErBC,MAAAA,GAAG,EAAEN,yBAFgB;AAGrBQ,MAAAA,KAAK,EAAE;AAHc,KAAvB;AAMA,WAAOP,MAAP;AACD,GAb0B,CAA3B;AAcD,CAhBM","sourcesContent":["import { ConfigPlugin, withGradleProperties } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` value in the static `gradle.properties` file.\n * This is used to disable frame processors if you don't need it for android.\n */\nexport const withDisableFrameProcessorsAndroid: ConfigPlugin = (c) => {\n  const disableFrameProcessorsKey = 'disableFrameProcessors';\n  return withGradleProperties(c, (config) => {\n    config.modResults = config.modResults.filter((item) => {\n      if (item.type === 'property' && item.key === disableFrameProcessorsKey) return false;\n      return true;\n    });\n\n    config.modResults.push({\n      type: 'property',\n      key: disableFrameProcessorsKey,\n      value: 'true',\n    });\n\n    return config;\n  });\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
index 6c60b23..2fcdd04 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
@@ -1,23 +1,27 @@
 /* eslint-disable @typescript-eslint/no-unsafe-assignment */
 import { withXcodeProject } from '@expo/config-plugins';
-
 /**
  * Set the `disableFrameProcessors` inside of the XcodeProject.
  * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)
  */
+
 export const withDisableFrameProcessorsIOS = c => {
   return withXcodeProject(c, config => {
     const xcodeProject = config.modResults;
     const configurations = xcodeProject.pbxXCBuildConfigurationSection();
     const inheritKey = '"$(inherited)"';
     const valueKey = '"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1"';
+
     for (const key in configurations) {
+      var _buildSettings$GCC_PR;
+
       const buildSettings = configurations[key].buildSettings;
       if (buildSettings == null) continue;
-      const preprocessorDefinitions = buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey];
+      const preprocessorDefinitions = (_buildSettings$GCC_PR = buildSettings.GCC_PREPROCESSOR_DEFINITIONS) !== null && _buildSettings$GCC_PR !== void 0 ? _buildSettings$GCC_PR : [inheritKey];
       if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);
       buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;
     }
+
     return config;
   });
 };
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
index 6177375..27c18df 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
@@ -1 +1 @@
-{"version":3,"names":["withXcodeProject","withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsIOS.ts"],"mappings":"AAAA;AACA,SAAuBA,gBAAgB,QAAsB,sBAAsB;;AAEnF;AACA;AACA;AACA;AACA,OAAO,MAAMC,6BAA2C,GAAIC,CAAC,IAAK;EAChE,OAAOF,gBAAgB,CAACE,CAAC,EAAGC,MAAM,IAAK;IACrC,MAAMC,YAA0B,GAAGD,MAAM,CAACE,UAAU;IAEpD,MAAMC,cAAc,GAAGF,YAAY,CAACG,8BAA8B,CAAC,CAAC;IAEpE,MAAMC,UAAU,GAAG,gBAAgB;IACnC,MAAMC,QAAQ,GAAG,4CAA4C;IAE7D,KAAK,MAAMC,GAAG,IAAIJ,cAAc,EAAE;MAChC,MAAMK,aAAa,GAAGL,cAAc,CAACI,GAAG,CAAC,CAACC,aAAa;MACvD,IAAIA,aAAa,IAAI,IAAI,EAAE;MAE3B,MAAMC,uBAAuB,GAAID,aAAa,CAACE,4BAA4B,IAAI,CAACL,UAAU,CAAc;MAExG,IAAI,CAACI,uBAAuB,CAACE,QAAQ,CAACL,QAAQ,CAAC,EAAEG,uBAAuB,CAACG,IAAI,CAACN,QAAQ,CAAC;MACvFE,aAAa,CAACE,4BAA4B,GAAGD,uBAAuB;IACtE;IACA,OAAOT,MAAM;EACf,CAAC,CAAC;AACJ,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["withDisableFrameProcessorsIOS.ts"],"names":["withXcodeProject","withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"mappings":"AAAA;AACA,SAAuBA,gBAAvB,QAA6D,sBAA7D;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,6BAA2C,GAAIC,CAAD,IAAO;AAChE,SAAOF,gBAAgB,CAACE,CAAD,EAAKC,MAAD,IAAY;AACrC,UAAMC,YAA0B,GAAGD,MAAM,CAACE,UAA1C;AAEA,UAAMC,cAAc,GAAGF,YAAY,CAACG,8BAAb,EAAvB;AAEA,UAAMC,UAAU,GAAG,gBAAnB;AACA,UAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAAK,MAAMC,GAAX,IAAkBJ,cAAlB,EAAkC;AAAA;;AAChC,YAAMK,aAAa,GAAGL,cAAc,CAACI,GAAD,CAAd,CAAoBC,aAA1C;AACA,UAAIA,aAAa,IAAI,IAArB,EAA2B;AAE3B,YAAMC,uBAAuB,4BAAID,aAAa,CAACE,4BAAlB,yEAAkD,CAACL,UAAD,CAA/E;AAEA,UAAI,CAACI,uBAAuB,CAACE,QAAxB,CAAiCL,QAAjC,CAAL,EAAiDG,uBAAuB,CAACG,IAAxB,CAA6BN,QAA7B;AACjDE,MAAAA,aAAa,CAACE,4BAAd,GAA6CD,uBAA7C;AACD;;AACD,WAAOT,MAAP;AACD,GAlBsB,CAAvB;AAmBD,CApBM","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ConfigPlugin, withXcodeProject, XcodeProject } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` inside of the XcodeProject.\n * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)\n */\nexport const withDisableFrameProcessorsIOS: ConfigPlugin = (c) => {\n  return withXcodeProject(c, (config) => {\n    const xcodeProject: XcodeProject = config.modResults;\n\n    const configurations = xcodeProject.pbxXCBuildConfigurationSection();\n\n    const inheritKey = '\"$(inherited)\"';\n    const valueKey = '\"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1\"';\n\n    for (const key in configurations) {\n      const buildSettings = configurations[key].buildSettings;\n      if (buildSettings == null) continue;\n\n      const preprocessorDefinitions = (buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey]) as string[];\n\n      if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);\n      buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;\n    }\n    return config;\n  });\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
index 9c83683..8989fa1 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
@@ -1,25 +1,36 @@
 import { withPlugins, AndroidConfig, createRunOncePlugin } from '@expo/config-plugins';
 import { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';
-import { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';
-// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
+import { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS'; // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
+
 const pkg = require('../../../package.json');
+
 const CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';
 const MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';
+
 const withCamera = function (config) {
+  var _ref, _props$cameraPermissi;
+
   let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
   if (config.ios == null) config.ios = {};
   if (config.ios.infoPlist == null) config.ios.infoPlist = {};
-  config.ios.infoPlist.NSCameraUsageDescription = props.cameraPermissionText ?? config.ios.infoPlist.NSCameraUsageDescription ?? CAMERA_USAGE;
+  config.ios.infoPlist.NSCameraUsageDescription = (_ref = (_props$cameraPermissi = props.cameraPermissionText) !== null && _props$cameraPermissi !== void 0 ? _props$cameraPermissi : config.ios.infoPlist.NSCameraUsageDescription) !== null && _ref !== void 0 ? _ref : CAMERA_USAGE;
+
   if (props.enableMicrophonePermission) {
-    config.ios.infoPlist.NSMicrophoneUsageDescription = props.microphonePermissionText ?? config.ios.infoPlist.NSMicrophoneUsageDescription ?? MICROPHONE_USAGE;
+    var _ref2, _props$microphonePerm;
+
+    config.ios.infoPlist.NSMicrophoneUsageDescription = (_ref2 = (_props$microphonePerm = props.microphonePermissionText) !== null && _props$microphonePerm !== void 0 ? _props$microphonePerm : config.ios.infoPlist.NSMicrophoneUsageDescription) !== null && _ref2 !== void 0 ? _ref2 : MICROPHONE_USAGE;
   }
+
   const androidPermissions = ['android.permission.CAMERA'];
   if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');
+
   if (props.disableFrameProcessors) {
     config = withDisableFrameProcessorsAndroid(config);
     config = withDisableFrameProcessorsIOS(config);
   }
+
   return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);
 };
+
 export default createRunOncePlugin(withCamera, pkg.name, pkg.version);
 //# sourceMappingURL=withVisionCamera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
index 5d4b0a8..0c47981 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
@@ -1 +1 @@
-{"version":3,"names":["withPlugins","AndroidConfig","createRunOncePlugin","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","arguments","length","undefined","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","Permissions","withPermissions","name","version"],"sourceRoot":"../../../src","sources":["expo-plugin/withVisionCamera.ts"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAgBC,mBAAmB,QAAQ,sBAAsB;AACpG,SAASC,iCAAiC,QAAQ,qCAAqC;AACvF,SAASC,6BAA6B,QAAQ,iCAAiC;AAC/E;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE5C,MAAMC,YAAY,GAAG,6CAA6C;AAClE,MAAMC,gBAAgB,GAAG,iDAAiD;AAS1E,MAAMC,UAA+B,GAAG,SAAAA,CAACC,MAAM,EAAiB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAIF,MAAM,CAACK,GAAG,IAAI,IAAI,EAAEL,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC;EACvC,IAAIL,MAAM,CAACK,GAAG,CAACC,SAAS,IAAI,IAAI,EAAEN,MAAM,CAACK,GAAG,CAACC,SAAS,GAAG,CAAC,CAAC;EAC3DN,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAAwB,GAC3CN,KAAK,CAACO,oBAAoB,IAAKR,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAA+C,IAAIV,YAAY;EACrH,IAAII,KAAK,CAACQ,0BAA0B,EAAE;IACpCT,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAA4B,GAC/CT,KAAK,CAACU,wBAAwB,IAAKX,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAAmD,IAAIZ,gBAAgB;EACnI;EACA,MAAMc,kBAAkB,GAAG,CAAC,2BAA2B,CAAC;EACxD,IAAIX,KAAK,CAACQ,0BAA0B,EAAEG,kBAAkB,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAEhG,IAAIZ,KAAK,CAACa,sBAAsB,EAAE;IAChCd,MAAM,GAAGP,iCAAiC,CAACO,MAAM,CAAC;IAClDA,MAAM,GAAGN,6BAA6B,CAACM,MAAM,CAAC;EAChD;EAEA,OAAOV,WAAW,CAACU,MAAM,EAAE,CAAC,CAACT,aAAa,CAACwB,WAAW,CAACC,eAAe,EAAEJ,kBAAkB,CAAC,CAAC,CAAC;AAC/F,CAAC;AAED,eAAepB,mBAAmB,CAACO,UAAU,EAAEJ,GAAG,CAACsB,IAAI,EAAEtB,GAAG,CAACuB,OAAO,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["withVisionCamera.ts"],"names":["withPlugins","AndroidConfig","createRunOncePlugin","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","Permissions","withPermissions","name","version"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAmDC,mBAAnD,QAA8E,sBAA9E;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA,SAASC,6BAAT,QAA8C,iCAA9C,C,CACA;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,MAAMC,YAAY,GAAG,6CAArB;AACA,MAAMC,gBAAgB,GAAG,iDAAzB;;AASA,MAAMC,UAA+B,GAAG,UAACC,MAAD,EAAwB;AAAA;;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC9D,MAAID,MAAM,CAACE,GAAP,IAAc,IAAlB,EAAwBF,MAAM,CAACE,GAAP,GAAa,EAAb;AACxB,MAAIF,MAAM,CAACE,GAAP,CAAWC,SAAX,IAAwB,IAA5B,EAAkCH,MAAM,CAACE,GAAP,CAAWC,SAAX,GAAuB,EAAvB;AAClCH,EAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBAArB,oCACEH,KAAK,CAACI,oBADR,yEACiCL,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBADtD,uCACyGP,YADzG;;AAEA,MAAII,KAAK,CAACK,0BAAV,EAAsC;AAAA;;AACpCN,IAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAArB,qCACEN,KAAK,CAACO,wBADR,yEACqCR,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAD1D,yCACiHT,gBADjH;AAED;;AACD,QAAMW,kBAAkB,GAAG,CAAC,2BAAD,CAA3B;AACA,MAAIR,KAAK,CAACK,0BAAV,EAAsCG,kBAAkB,CAACC,IAAnB,CAAwB,iCAAxB;;AAEtC,MAAIT,KAAK,CAACU,sBAAV,EAAkC;AAChCX,IAAAA,MAAM,GAAGP,iCAAiC,CAACO,MAAD,CAA1C;AACAA,IAAAA,MAAM,GAAGN,6BAA6B,CAACM,MAAD,CAAtC;AACD;;AAED,SAAOV,WAAW,CAACU,MAAD,EAAS,CAAC,CAACT,aAAa,CAACqB,WAAd,CAA0BC,eAA3B,EAA4CJ,kBAA5C,CAAD,CAAT,CAAlB;AACD,CAlBD;;AAoBA,eAAejB,mBAAmB,CAACO,UAAD,EAAaJ,GAAG,CAACmB,IAAjB,EAAuBnB,GAAG,CAACoB,OAA3B,CAAlC","sourcesContent":["import { withPlugins, AndroidConfig, ConfigPlugin, createRunOncePlugin } from '@expo/config-plugins';\nimport { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';\nimport { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\nconst CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';\nconst MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';\n\ntype Props = {\n  cameraPermissionText?: string;\n  enableMicrophonePermission?: boolean;\n  microphonePermissionText?: string;\n  disableFrameProcessors?: boolean;\n};\n\nconst withCamera: ConfigPlugin<Props> = (config, props = {}) => {\n  if (config.ios == null) config.ios = {};\n  if (config.ios.infoPlist == null) config.ios.infoPlist = {};\n  config.ios.infoPlist.NSCameraUsageDescription =\n    props.cameraPermissionText ?? (config.ios.infoPlist.NSCameraUsageDescription as string | undefined) ?? CAMERA_USAGE;\n  if (props.enableMicrophonePermission) {\n    config.ios.infoPlist.NSMicrophoneUsageDescription =\n      props.microphonePermissionText ?? (config.ios.infoPlist.NSMicrophoneUsageDescription as string | undefined) ?? MICROPHONE_USAGE;\n  }\n  const androidPermissions = ['android.permission.CAMERA'];\n  if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');\n\n  if (props.disableFrameProcessors) {\n    config = withDisableFrameProcessorsAndroid(config);\n    config = withDisableFrameProcessorsIOS(config);\n  }\n\n  return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);\n};\n\nexport default createRunOncePlugin(withCamera, pkg.name, pkg.version);\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/globals.d.js.map b/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
index 329e9d3..9ffd4b2 100644
--- a/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["globals.d.ts"],"mappings":""}
\ No newline at end of file
+{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
index afd20ee..67ba218 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
@@ -8,7 +8,6 @@ const DefaultCameraDevices = {
   front: undefined,
   unspecified: undefined
 };
-
 /**
  * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.
  *
@@ -22,34 +21,23 @@ const DefaultCameraDevices = {
  * ```
  */
 
-/**
- * Gets a {@linkcode CameraDevice} for the requested device type.
- *
- * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.
- * @returns A {@linkcode CameraDevice} for the requested device type.
- * @throws {@linkcode CameraRuntimeError} if no device was found.
- * @example
- * ```tsx
- * const device = useCameraDevice('wide-angle-camera')
- * // ...
- * return <Camera device={device} />
- * ```
- */
-
 export function useCameraDevices(deviceType) {
   const [cameraDevices, setCameraDevices] = useState(DefaultCameraDevices);
   useEffect(() => {
     let isMounted = true;
+
     const loadDevice = async () => {
       let devices = await Camera.getAvailableCameraDevices();
       if (!isMounted) return;
       devices = devices.sort(sortDevices);
+
       if (deviceType != null) {
         devices = devices.filter(d => {
           const parsedType = parsePhysicalDeviceTypes(d.devices);
           return parsedType === deviceType;
         });
       }
+
       setCameraDevices({
         back: devices.find(d => d.position === 'back'),
         external: devices.find(d => d.position === 'external'),
@@ -57,6 +45,7 @@ export function useCameraDevices(deviceType) {
         unspecified: devices.find(d => d.position === 'unspecified')
       });
     };
+
     loadDevice();
     return () => {
       isMounted = false;
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
index b599ad5..2c8c84e 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
@@ -1 +1 @@
-{"version":3,"names":["useEffect","useState","sortDevices","Camera","parsePhysicalDeviceTypes","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","getAvailableCameraDevices","sort","filter","d","parsedType","find","position"],"sourceRoot":"../../../src","sources":["hooks/useCameraDevices.ts"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,MAAM,QAAQ,WAAW;AAClC,SAAgDC,wBAAwB,QAAkC,iBAAiB;AAK3H,MAAMC,oBAAmC,GAAG;EAC1CC,IAAI,EAAEC,SAAS;EACfC,QAAQ,EAAED,SAAS;EACnBE,KAAK,EAAEF,SAAS;EAChBG,WAAW,EAAEH;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASI,gBAAgBA,CAACC,UAA+D,EAAiB;EAC/G,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAgBI,oBAAoB,CAAC;EAEvFL,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,GAAG,IAAI;IAEpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA2B;MAC5C,IAAIC,OAAO,GAAG,MAAMd,MAAM,CAACe,yBAAyB,CAAC,CAAC;MACtD,IAAI,CAACH,SAAS,EAAE;MAEhBE,OAAO,GAAGA,OAAO,CAACE,IAAI,CAACjB,WAAW,CAAC;MACnC,IAAIU,UAAU,IAAI,IAAI,EAAE;QACtBK,OAAO,GAAGA,OAAO,CAACG,MAAM,CAAEC,CAAC,IAAK;UAC9B,MAAMC,UAAU,GAAGlB,wBAAwB,CAACiB,CAAC,CAACJ,OAAO,CAAC;UACtD,OAAOK,UAAU,KAAKV,UAAU;QAClC,CAAC,CAAC;MACJ;MACAE,gBAAgB,CAAC;QACfR,IAAI,EAAEW,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,MAAM,CAAC;QAChDhB,QAAQ,EAAES,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,UAAU,CAAC;QACxDf,KAAK,EAAEQ,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,OAAO,CAAC;QAClDd,WAAW,EAAEO,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,aAAa;MAC/D,CAAC,CAAC;IACJ,CAAC;IACDR,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,OAAOC,aAAa;AACtB"}
\ No newline at end of file
+{"version":3,"sources":["useCameraDevices.ts"],"names":["useEffect","useState","sortDevices","Camera","parsePhysicalDeviceTypes","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","getAvailableCameraDevices","sort","filter","d","parsedType","find","position"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAgDC,wBAAhD,QAA0G,iBAA1G;AAKA,MAAMC,oBAAmC,GAAG;AAC1CC,EAAAA,IAAI,EAAEC,SADoC;AAE1CC,EAAAA,QAAQ,EAAED,SAFgC;AAG1CE,EAAAA,KAAK,EAAEF,SAHmC;AAI1CG,EAAAA,WAAW,EAAEH;AAJ6B,CAA5C;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBA,OAAO,SAASI,gBAAT,CAA0BC,UAA1B,EAA0G;AAC/G,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAgBI,oBAAhB,CAAlD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAS,GAAG,IAAhB;;AAEA,UAAMC,UAAU,GAAG,YAA2B;AAC5C,UAAIC,OAAO,GAAG,MAAMd,MAAM,CAACe,yBAAP,EAApB;AACA,UAAI,CAACH,SAAL,EAAgB;AAEhBE,MAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAajB,WAAb,CAAV;;AACA,UAAIU,UAAU,IAAI,IAAlB,EAAwB;AACtBK,QAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAgBC,CAAD,IAAO;AAC9B,gBAAMC,UAAU,GAAGlB,wBAAwB,CAACiB,CAAC,CAACJ,OAAH,CAA3C;AACA,iBAAOK,UAAU,KAAKV,UAAtB;AACD,SAHS,CAAV;AAID;;AACDE,MAAAA,gBAAgB,CAAC;AACfR,QAAAA,IAAI,EAAEW,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,MAAnC,CADS;AAEfhB,QAAAA,QAAQ,EAAES,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,UAAnC,CAFK;AAGff,QAAAA,KAAK,EAAEQ,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,OAAnC,CAHQ;AAIfd,QAAAA,WAAW,EAAEO,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,aAAnC;AAJE,OAAD,CAAhB;AAMD,KAjBD;;AAkBAR,IAAAA,UAAU;AAEV,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACH,UAAD,CA1BM,CAAT;AA4BA,SAAOC,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport type { CameraPosition } from '../CameraPosition';\nimport { sortDevices } from '../utils/FormatFilter';\nimport { Camera } from '../Camera';\nimport { CameraDevice, LogicalCameraDeviceType, parsePhysicalDeviceTypes, PhysicalCameraDeviceType } from '../CameraDevice';\n\nexport type CameraDevices = {\n  [key in CameraPosition]: CameraDevice | undefined;\n};\nconst DefaultCameraDevices: CameraDevices = {\n  back: undefined,\n  external: undefined,\n  front: undefined,\n  unspecified: undefined,\n};\n\n/**\n * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.\n *\n * @returns The best matching {@linkcode CameraDevice}.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice()\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(): CameraDevices;\n\n/**\n * Gets a {@linkcode CameraDevice} for the requested device type.\n *\n * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.\n * @returns A {@linkcode CameraDevice} for the requested device type.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice('wide-angle-camera')\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;\n\nexport function useCameraDevices(deviceType?: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices {\n  const [cameraDevices, setCameraDevices] = useState<CameraDevices>(DefaultCameraDevices);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const loadDevice = async (): Promise<void> => {\n      let devices = await Camera.getAvailableCameraDevices();\n      if (!isMounted) return;\n\n      devices = devices.sort(sortDevices);\n      if (deviceType != null) {\n        devices = devices.filter((d) => {\n          const parsedType = parsePhysicalDeviceTypes(d.devices);\n          return parsedType === deviceType;\n        });\n      }\n      setCameraDevices({\n        back: devices.find((d) => d.position === 'back'),\n        external: devices.find((d) => d.position === 'external'),\n        front: devices.find((d) => d.position === 'front'),\n        unspecified: devices.find((d) => d.position === 'unspecified'),\n      });\n    };\n    loadDevice();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [deviceType]);\n\n  return cameraDevices;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
index ad8d2ac..2ff59d6 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
@@ -1,6 +1,5 @@
 import { useMemo } from 'react';
 import { sortFormats } from '../utils/FormatFilter';
-
 /**
  * Returns the best format for the given camera device.
  *
@@ -10,6 +9,7 @@ import { sortFormats } from '../utils/FormatFilter';
  *
  * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.
  */
+
 export function useCameraFormat(device) {
   return useMemo(() => device === null || device === void 0 ? void 0 : device.formats.sort(sortFormats)[0], [device === null || device === void 0 ? void 0 : device.formats]);
 }
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
index caa2d21..ad0095d 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
@@ -1 +1 @@
-{"version":3,"names":["useMemo","sortFormats","useCameraFormat","device","formats","sort"],"sourceRoot":"../../../src","sources":["hooks/useCameraFormat.ts"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,WAAW,QAAQ,uBAAuB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,MAAqB,EAAkC;EACrF,OAAOH,OAAO,CAAC,MAAMG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,CAAC,CAAC;AAC/E"}
\ No newline at end of file
+{"version":3,"sources":["useCameraFormat.ts"],"names":["useMemo","sortFormats","useCameraFormat","device","formats","sort"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAgF;AACrF,SAAOH,OAAO,CAAC,MAAMG,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBJ,WAArB,EAAkC,CAAlC,CAAP,EAA6C,CAACE,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAA7C,CAAd;AACD","sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
index df87df2..edccc26 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
@@ -1,6 +1,8 @@
+/* global _setGlobalConsole */
 import { useCallback } from 'react';
+const capturableConsole = console;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -16,12 +18,37 @@ import { useCallback } from 'react';
  * }, [])
  * ```
  */
+
 export function useFrameProcessor(frameProcessor, dependencies) {
   return useCallback(frame => {
-    'worklet';
+    'worklet'; // @ts-expect-error
+
+    if (global.didSetConsole == null || global.didSetConsole === false) {
+      const console = {
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        debug: capturableConsole.debug.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        log: capturableConsole.log.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        warn: capturableConsole.warn.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        error: capturableConsole.error.__callAsync,
+        // @ts-expect-error __callAsync is injected by native REA
+        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
+        info: capturableConsole.info.__callAsync
+      }; // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime
+
+      _setGlobalConsole(console); // @ts-expect-error
+
+
+      global.didSetConsole = true;
+    }
 
-    frameProcessor(frame);
-    // eslint-disable-next-line react-hooks/exhaustive-deps
+    frameProcessor(frame); // eslint-disable-next-line react-hooks/exhaustive-deps
   }, dependencies);
 }
 //# sourceMappingURL=useFrameProcessor.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
index 457504c..ef7dd38 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
@@ -1 +1 @@
-{"version":3,"names":["useCallback","useFrameProcessor","frameProcessor","dependencies","frame"],"sourceRoot":"../../../src","sources":["hooks/useFrameProcessor.ts"],"mappings":"AAAA,SAAyBA,WAAW,QAAQ,OAAO;AAKnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,cAA8B,EAAEC,YAA4B,EAAkB;EAC9G,OAAOH,WAAW,CAAEI,KAAY,IAAK;IACnC,SAAS;;IACTF,cAAc,CAACE,KAAK,CAAC;IACrB;EACF,CAAC,EAAED,YAAY,CAAC;AAClB"}
\ No newline at end of file
+{"version":3,"sources":["useFrameProcessor.ts"],"names":["useCallback","capturableConsole","console","useFrameProcessor","frameProcessor","dependencies","frame","global","didSetConsole","debug","__callAsync","log","warn","error","info","_setGlobalConsole"],"mappings":"AAAA;AAEA,SAAyBA,WAAzB,QAA4C,OAA5C;AAKA,MAAMC,iBAAiB,GAAGC,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,cAA3B,EAA2DC,YAA3D,EAAyG;AAC9G,SAAOL,WAAW,CAAEM,KAAD,IAAkB;AACnC,cADmC,CAGnC;;AACA,QAAIC,MAAM,CAACC,aAAP,IAAwB,IAAxB,IAAgCD,MAAM,CAACC,aAAP,KAAyB,KAA7D,EAAoE;AAClE,YAAMN,OAAO,GAAG;AACd;AACA;AACAO,QAAAA,KAAK,EAAER,iBAAiB,CAACQ,KAAlB,CAAwBC,WAHjB;AAId;AACA;AACAC,QAAAA,GAAG,EAAEV,iBAAiB,CAACU,GAAlB,CAAsBD,WANb;AAOd;AACA;AACAE,QAAAA,IAAI,EAAEX,iBAAiB,CAACW,IAAlB,CAAuBF,WATf;AAUd;AACA;AACAG,QAAAA,KAAK,EAAEZ,iBAAiB,CAACY,KAAlB,CAAwBH,WAZjB;AAad;AACA;AACAI,QAAAA,IAAI,EAAEb,iBAAiB,CAACa,IAAlB,CAAuBJ;AAff,OAAhB,CADkE,CAkBlE;;AACAK,MAAAA,iBAAiB,CAACb,OAAD,CAAjB,CAnBkE,CAoBlE;;;AACAK,MAAAA,MAAM,CAACC,aAAP,GAAuB,IAAvB;AACD;;AAEDJ,IAAAA,cAAc,CAACE,KAAD,CAAd,CA5BmC,CA6BnC;AACD,GA9BiB,EA8BfD,YA9Be,CAAlB;AA+BD","sourcesContent":["/* global _setGlobalConsole */\n\nimport { DependencyList, useCallback } from 'react';\nimport type { Frame } from '../Frame';\n\ntype FrameProcessor = (frame: Frame) => void;\n\nconst capturableConsole = console;\n\n/**\n * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See [\"Frame Processors\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))\n *\n * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.\n *\n * @param frameProcessor The Frame Processor\n * @param dependencies The React dependencies which will be copied into the VisionCamera JS-Runtime.\n * @returns The memoized Frame Processor.\n * @example\n * ```ts\n * const frameProcessor = useFrameProcessor((frame) => {\n *   'worklet'\n *   const qrCodes = scanQRCodes(frame)\n *   console.log(`QR Codes: ${qrCodes}`)\n * }, [])\n * ```\n */\nexport function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor {\n  return useCallback((frame: Frame) => {\n    'worklet';\n\n    // @ts-expect-error\n    if (global.didSetConsole == null || global.didSetConsole === false) {\n      const console = {\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        debug: capturableConsole.debug.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        log: capturableConsole.log.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        warn: capturableConsole.warn.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        error: capturableConsole.error.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        info: capturableConsole.info.__callAsync,\n      };\n      // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime\n      _setGlobalConsole(console);\n      // @ts-expect-error\n      global.didSetConsole = true;\n    }\n\n    frameProcessor(frame);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/index.js.map b/node_modules/react-native-vision-camera/lib/module/index.js.map
index 123e312..152a29e 100644
--- a/node_modules/react-native-vision-camera/lib/module/index.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/index.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sourceRoot":"../../src","sources":["index.ts"],"mappings":"AAAA,cAAc,UAAU;AACxB,cAAc,gBAAgB;AAC9B,cAAc,eAAe;AAC7B,cAAc,kBAAkB;AAChC,cAAc,gBAAgB;AAC9B,cAAc,eAAe;AAC7B,cAAc,SAAS;AACvB,cAAc,eAAe;AAC7B,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc,YAAY;AAC1B,cAAc,iBAAiB;AAC/B,cAAc,aAAa;AAE3B,cAAc,0BAA0B;AACxC,cAAc,yBAAyB;AACvC,cAAc,2BAA2B;AAEzC,cAAc,sBAAsB"}
\ No newline at end of file
+{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAd;AACA,cAAc,gBAAd;AACA,cAAc,eAAd;AACA,cAAc,kBAAd;AACA,cAAc,gBAAd;AACA,cAAc,eAAd;AACA,cAAc,SAAd;AACA,cAAc,eAAd;AACA,cAAc,aAAd;AACA,cAAc,SAAd;AACA,cAAc,YAAd;AACA,cAAc,iBAAd;AACA,cAAc,aAAd;AAEA,cAAc,0BAAd;AACA,cAAc,yBAAd;AACA,cAAc,2BAAd;AAEA,cAAc,sBAAd","sourcesContent":["export * from './Camera';\nexport * from './CameraDevice';\nexport * from './CameraError';\nexport * from './CameraPosition';\nexport * from './CameraPreset';\nexport * from './CameraProps';\nexport * from './Frame';\nexport * from './CameraProps';\nexport * from './PhotoFile';\nexport * from './Point';\nexport * from './Snapshot';\nexport * from './TemporaryFile';\nexport * from './VideoFile';\n\nexport * from './hooks/useCameraDevices';\nexport * from './hooks/useCameraFormat';\nexport * from './hooks/useFrameProcessor';\n\nexport * from './utils/FormatFilter';\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
index df004d2..e293e64 100644
--- a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
+++ b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
@@ -1,4 +1,5 @@
 import { Dimensions } from 'react-native';
+
 /**
  * Compares two devices by the following criteria:
  * * `wide-angle-camera`s are ranked higher than others
@@ -19,9 +20,8 @@ export const sortDevices = (left, right) => {
   const leftHasWideAngle = left.devices.includes('wide-angle-camera');
   const rightHasWideAngle = right.devices.includes('wide-angle-camera');
   if (leftHasWideAngle) leftPoints += 2;
-  if (rightHasWideAngle) rightPoints += 2;
+  if (rightHasWideAngle) rightPoints += 2; // telephoto cameras often have very poor quality.
 
-  // telephoto cameras often have very poor quality.
   const leftHasTelephoto = left.devices.includes('telephoto-camera');
   const rightHasTelephoto = right.devices.includes('telephoto-camera');
   if (leftHasTelephoto) leftPoints -= 2;
@@ -35,34 +35,31 @@ const SCREEN_SIZE = {
   height: Dimensions.get('window').height
 };
 const SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;
-
 /**
  * Sort formats by resolution and aspect ratio difference (to the Screen size).
  *
  * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the "best" device.
  */
+
 export const sortFormats = (left, right) => {
   let leftPoints = 0,
-    rightPoints = 0;
-
-  // we downscale the points so much that we are in smaller number ranges for future calculations
+      rightPoints = 0; // we downscale the points so much that we are in smaller number ranges for future calculations
   // e.g. for 4k (4096), this adds 8 points.
+
   leftPoints += Math.round(left.photoWidth / 500);
-  rightPoints += Math.round(right.photoWidth / 500);
-  // e.g. for 4k (4096), this adds 8 points.
-  leftPoints += Math.round(left.videoWidth / 500);
-  rightPoints += Math.round(right.videoWidth / 500);
+  rightPoints += Math.round(right.photoWidth / 500); // e.g. for 4k (4096), this adds 8 points.
 
-  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
+  leftPoints += Math.round(left.videoWidth / 500);
+  rightPoints += Math.round(right.videoWidth / 500); // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
   // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little
   // bit over 1 point, just enough to overrule the FPS below.
+
   const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;
   const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;
   leftPoints -= Math.abs(leftAspectRatioDiff) * 10;
   rightPoints -= Math.abs(rightAspectRatioDiff) * 10;
   return rightPoints - leftPoints;
 };
-
 /**
  * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)
  *
@@ -75,5 +72,6 @@ export const sortFormats = (left, right) => {
  * ```
  * @method
  */
+
 export const frameRateIncluded = (range, fps) => fps >= range.minFrameRate && fps <= range.maxFrameRate;
 //# sourceMappingURL=FormatFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
index 65bcfdf..b9d63de 100644
--- a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
@@ -1 +1 @@
-{"version":3,"names":["Dimensions","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"sourceRoot":"../../../src","sources":["utils/FormatFilter.ts"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["FormatFilter.ts"],"names":["Dimensions","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport type { CameraDevice, CameraDeviceFormat, FrameRateRange } from '../CameraDevice';\n\n/**\n * Compares two devices by the following criteria:\n * * `wide-angle-camera`s are ranked higher than others\n * * Devices with more physical cameras are ranked higher than ones with less. (e.g. \"Triple Camera\" > \"Wide-Angle Camera\")\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n *\n * @example\n * ```ts\n * const devices = camera.devices.sort(sortDevices)\n * const bestDevice = devices[0]\n * ```\n * @method\n */\nexport const sortDevices = (left: CameraDevice, right: CameraDevice): number => {\n  let leftPoints = 0;\n  let rightPoints = 0;\n\n  const leftHasWideAngle = left.devices.includes('wide-angle-camera');\n  const rightHasWideAngle = right.devices.includes('wide-angle-camera');\n  if (leftHasWideAngle) leftPoints += 2;\n  if (rightHasWideAngle) rightPoints += 2;\n\n  // telephoto cameras often have very poor quality.\n  const leftHasTelephoto = left.devices.includes('telephoto-camera');\n  const rightHasTelephoto = right.devices.includes('telephoto-camera');\n  if (leftHasTelephoto) leftPoints -= 2;\n  if (rightHasTelephoto) rightPoints -= 2;\n\n  if (left.devices.length > right.devices.length) leftPoints += 1;\n  if (right.devices.length > left.devices.length) rightPoints += 1;\n\n  return rightPoints - leftPoints;\n};\n\nconst SCREEN_SIZE = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\nconst SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;\n\n/**\n * Sort formats by resolution and aspect ratio difference (to the Screen size).\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n */\nexport const sortFormats = (left: CameraDeviceFormat, right: CameraDeviceFormat): number => {\n  let leftPoints = 0,\n    rightPoints = 0;\n\n  // we downscale the points so much that we are in smaller number ranges for future calculations\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.photoWidth / 500);\n  rightPoints += Math.round(right.photoWidth / 500);\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.videoWidth / 500);\n  rightPoints += Math.round(right.videoWidth / 500);\n\n  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly\n  // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little\n  // bit over 1 point, just enough to overrule the FPS below.\n  const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;\n  const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;\n  leftPoints -= Math.abs(leftAspectRatioDiff) * 10;\n  rightPoints -= Math.abs(rightAspectRatioDiff) * 10;\n\n  return rightPoints - leftPoints;\n};\n\n/**\n * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)\n *\n * @param {FrameRateRange} range The range to check if the given `fps` are included in\n * @param {number} fps The FPS to check if the given `range` supports.\n * @example\n * ```ts\n * // get all formats that support 60 FPS\n * const formatsWithHighFps = useMemo(() => device.formats.filter((f) => f.frameRateRanges.some((r) => frameRateIncluded(r, 60))), [device.formats])\n * ```\n * @method\n */\nexport const frameRateIncluded = (range: FrameRateRange, fps: number): boolean => fps >= range.minFrameRate && fps <= range.maxFrameRate;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
index 77799ca..7efd264 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
@@ -6,12 +6,12 @@ import type { PhotoFile, TakePhotoOptions } from './PhotoFile';
 import type { Point } from './Point';
 import type { TakeSnapshotOptions } from './Snapshot';
 import type { CameraVideoCodec, RecordVideoOptions } from './VideoFile';
-export type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';
-export type CameraPermissionRequestResult = 'authorized' | 'denied';
+export declare type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';
+export declare type CameraPermissionRequestResult = 'authorized' | 'denied';
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
+ * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -252,4 +252,3 @@ export declare class Camera extends React.PureComponent<CameraProps> {
     /** @internal */
     render(): React.ReactNode;
 }
-//# sourceMappingURL=Camera.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
deleted file mode 100644
index d2a2e80..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Camera.d.ts","sourceRoot":"","sources":["../../src/Camera.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,KAAK,EAAuC,aAAa,EAAE,MAAM,GAAG,CAAC;AAC5E,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAGnD,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,KAAK,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAC/D,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AACrC,OAAO,KAAK,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtD,OAAO,KAAK,EAAE,gBAAgB,EAAE,kBAAkB,EAAa,MAAM,aAAa,CAAC;AAInF,MAAM,MAAM,sBAAsB,GAAG,YAAY,GAAG,gBAAgB,GAAG,QAAQ,GAAG,YAAY,CAAC;AAC/F,MAAM,MAAM,6BAA6B,GAAG,YAAY,GAAG,QAAQ,CAAC;AA4BpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,qBAAa,MAAO,SAAQ,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;IAC1D,gBAAgB;IAChB,MAAM,CAAC,WAAW,SAAY;IAC9B,gBAAgB;IAChB,WAAW,SAAsB;IACjC,OAAO,CAAC,kBAAkB,CAAuC;IACjE,OAAO,CAAC,mBAAmB,CAAS;IAEpC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAA2B;IAE/C,gBAAgB;gBACJ,KAAK,EAAE,WAAW;IAU9B,OAAO,KAAK,MAAM,GAUjB;IAGD;;;;;;;;;;;;OAYG;IACU,SAAS,CAAC,OAAO,CAAC,EAAE,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC;IAQtE;;;;;;;;;;;;;;;OAeG;IACU,YAAY,CAAC,OAAO,CAAC,EAAE,mBAAmB,GAAG,OAAO,CAAC,SAAS,CAAC;IAW5E;;;;;;;;;;;;;;;;;;;;;OAqBG;IACI,cAAc,CAAC,OAAO,EAAE,kBAAkB,GAAG,IAAI;IAiBxD;;;;;;;;;;;;;;;;;;;OAmBG;IACU,cAAc,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ5C;;;;;;;;;;;;;;;;;;;OAmBG;IACU,eAAe,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ7C;;;;;;;;;;;;OAYG;IACU,aAAa,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ3C;;;;;;;;;;;;;;;;;OAiBG;IACU,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;IAS/C;;;;;;;;OAQG;IACU,uBAAuB,CAAC,QAAQ,CAAC,EAAE,aAAa,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;IAW3F;;;;;;;;;;;;;;OAcG;WACiB,yBAAyB,IAAI,OAAO,CAAC,YAAY,EAAE,CAAC;IAOxE;;;;;;;OAOG;WACiB,yBAAyB,IAAI,OAAO,CAAC,sBAAsB,CAAC;IAOhF;;;;;;;OAOG;WACiB,6BAA6B,IAAI,OAAO,CAAC,sBAAsB,CAAC;IAOpF;;;;;;;OAOG;WACiB,uBAAuB,IAAI,OAAO,CAAC,6BAA6B,CAAC;IAOrF;;;;;;;OAOG;WACiB,2BAA2B,IAAI,OAAO,CAAC,6BAA6B,CAAC;IAUzF,OAAO,CAAC,OAAO;IAWf,OAAO,CAAC,aAAa;IAIrB,OAAO,CAAC,8CAA8C;IAOtD,gBAAgB;IAChB,OAAO,CAAC,4BAA4B;IAUpC,OAAO,CAAC,iBAAiB;IAMzB,OAAO,CAAC,mBAAmB;IAM3B,OAAO,CAAC,WAAW;IASnB,gBAAgB;IAChB,kBAAkB,IAAI,IAAI;IAa1B,gBAAgB;IACT,MAAM,IAAI,KAAK,CAAC,SAAS;CAiBjC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
index bf2d4ec..3c92771 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
@@ -7,7 +7,7 @@ import type { PixelFormat } from './PixelFormat';
  * * `"wide-angle-camera"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)
  * * `"telephoto-camera"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)
  */
-export type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';
+export declare type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';
 /**
  * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).
  *
@@ -15,7 +15,7 @@ export type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-c
  * * `"dual-wide-camera"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.
  * * `"triple-camera"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.
  */
-export type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';
+export declare type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';
 /**
  * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.
  * @method
@@ -43,7 +43,7 @@ export declare const parsePhysicalDeviceTypes: (physicalDeviceTypes: PhysicalCam
  *
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
-export type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpeg' | 'jpeg-depth' | 'raw' | 'heic' | 'private' | 'depth-16' | 'unknown';
+export declare type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpeg' | 'jpeg-depth' | 'raw' | 'heic' | 'private' | 'depth-16' | 'unknown';
 /**
  * Indicates a format's autofocus system.
  *
@@ -51,7 +51,7 @@ export type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpeg' | 'jp
  * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
  * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
  */
-export type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';
+export declare type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';
 /**
  * Indicates a format's supported video stabilization mode
  *
@@ -61,7 +61,7 @@ export type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';
  * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
  * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
  */
-export type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';
+export declare type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';
 export interface FrameRateRange {
     minFrameRate: number;
     maxFrameRate: number;
@@ -209,11 +209,11 @@ export interface CameraDevice {
     /**
      * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.
      *
-     * See [the Camera Formats documentation](https://react-native-vision-camera.com/docs/guides/formats) for more information about Camera Formats.
+     * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.
      */
     formats: CameraDeviceFormat[];
     /**
-     * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
+     * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
      *
      * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.
      *
@@ -243,4 +243,3 @@ export interface CameraDevice {
      */
     supportsFocus: boolean;
 }
-//# sourceMappingURL=CameraDevice.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map
deleted file mode 100644
index d374853..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"CameraDevice.d.ts","sourceRoot":"","sources":["../../src/CameraDevice.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
index 0ef8125..a58581f 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
@@ -1,12 +1,12 @@
-export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';
-export type ParameterError = 'parameter/invalid-parameter' | 'parameter/unsupported-os' | 'parameter/unsupported-output' | 'parameter/unsupported-input' | 'parameter/invalid-combination';
-export type DeviceError = 'device/configuration-error' | 'device/no-device' | 'device/invalid-device' | 'device/parallel-video-processing-not-supported' | 'device/torch-unavailable' | 'device/microphone-unavailable' | 'device/low-light-boost-not-supported' | 'device/focus-not-supported' | 'device/camera-not-available-on-simulator';
-export type FrameProcessorError = 'frame-processor/unavailable';
-export type FormatError = 'format/invalid-fps' | 'format/invalid-hdr' | 'format/invalid-low-light-boost' | 'format/invalid-format' | 'format/invalid-color-space' | 'format/invalid-preset';
-export type SessionError = 'session/camera-not-ready' | 'session/audio-session-setup-failed' | 'session/audio-in-use-by-other-app' | 'session/audio-session-failed-to-activate';
-export type CaptureError = 'capture/invalid-photo-format' | 'capture/encoder-error' | 'capture/muxer-error' | 'capture/recording-in-progress' | 'capture/no-recording-in-progress' | 'capture/file-io-error' | 'capture/create-temp-file-error' | 'capture/invalid-video-options' | 'capture/create-recorder-error' | 'capture/recorder-error' | 'capture/no-valid-data' | 'capture/inactive-source' | 'capture/insufficient-storage' | 'capture/file-size-limit-reached' | 'capture/invalid-photo-codec' | 'capture/not-bound-error' | 'capture/capture-type-not-supported' | 'capture/video-not-enabled' | 'capture/photo-not-enabled' | 'capture/aborted' | 'capture/unknown';
-export type SystemError = 'system/no-camera-manager' | 'system/view-not-found';
-export type UnknownError = 'unknown/unknown';
+export declare type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';
+export declare type ParameterError = 'parameter/invalid-parameter' | 'parameter/unsupported-os' | 'parameter/unsupported-output' | 'parameter/unsupported-input' | 'parameter/invalid-combination';
+export declare type DeviceError = 'device/configuration-error' | 'device/no-device' | 'device/invalid-device' | 'device/parallel-video-processing-not-supported' | 'device/torch-unavailable' | 'device/microphone-unavailable' | 'device/low-light-boost-not-supported' | 'device/focus-not-supported' | 'device/camera-not-available-on-simulator';
+export declare type FrameProcessorError = 'frame-processor/unavailable';
+export declare type FormatError = 'format/invalid-fps' | 'format/invalid-hdr' | 'format/invalid-low-light-boost' | 'format/invalid-format' | 'format/invalid-color-space' | 'format/invalid-preset';
+export declare type SessionError = 'session/camera-not-ready' | 'session/audio-session-setup-failed' | 'session/audio-in-use-by-other-app' | 'session/audio-session-failed-to-activate';
+export declare type CaptureError = 'capture/invalid-photo-format' | 'capture/encoder-error' | 'capture/muxer-error' | 'capture/recording-in-progress' | 'capture/no-recording-in-progress' | 'capture/file-io-error' | 'capture/create-temp-file-error' | 'capture/invalid-video-options' | 'capture/create-recorder-error' | 'capture/recorder-error' | 'capture/no-valid-data' | 'capture/inactive-source' | 'capture/insufficient-storage' | 'capture/file-size-limit-reached' | 'capture/invalid-photo-codec' | 'capture/not-bound-error' | 'capture/capture-type-not-supported' | 'capture/video-not-enabled' | 'capture/photo-not-enabled' | 'capture/aborted' | 'capture/unknown';
+export declare type SystemError = 'system/no-camera-manager' | 'system/view-not-found';
+export declare type UnknownError = 'unknown/unknown';
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -54,7 +54,7 @@ export interface ErrorWithCause {
      */
     cause?: ErrorWithCause;
 }
-type CameraErrorCode = PermissionError | ParameterError | DeviceError | FrameProcessorError | FormatError | SessionError | CaptureError | SystemError | UnknownError;
+declare type CameraErrorCode = PermissionError | ParameterError | DeviceError | FrameProcessorError | FormatError | SessionError | CaptureError | SystemError | UnknownError;
 /**
  * Represents any kind of error that occured in the {@linkcode Camera} View Module.
  */
@@ -74,14 +74,14 @@ declare class CameraError<TCode extends CameraErrorCode> extends Error {
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
 export declare class CameraCaptureError extends CameraError<CaptureError> {
 }
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
  */
 export declare class CameraRuntimeError extends CameraError<PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError> {
 }
@@ -99,4 +99,3 @@ export declare const isErrorWithCause: (error: unknown) => error is ErrorWithCau
  */
 export declare const tryParseNativeCameraError: <T>(nativeError: T) => CameraCaptureError | CameraRuntimeError | T;
 export {};
-//# sourceMappingURL=CameraError.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map
deleted file mode 100644
index edbe61e..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"CameraError.d.ts","sourceRoot":"","sources":["../../src/CameraError.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
index 60f25d6..c020140 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
@@ -10,5 +10,4 @@
  * #### Android only
  * * `"external"`: The camera device is an external camera, and has no fixed facing relative to the device's screen. (Android only)
  */
-export type CameraPosition = 'front' | 'back' | 'unspecified' | 'external';
-//# sourceMappingURL=CameraPosition.d.ts.map
\ No newline at end of file
+export declare type CameraPosition = 'front' | 'back' | 'unspecified' | 'external';
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map
deleted file mode 100644
index b7c445c..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"CameraPosition.d.ts","sourceRoot":"","sources":["../../src/CameraPosition.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;AACH,MAAM,MAAM,cAAc,GAAG,OAAO,GAAG,MAAM,GAAG,aAAa,GAAG,UAAU,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
index eebafc2..79719d9 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
@@ -14,5 +14,4 @@
  * * `"photo"`: Specifies capture settings suitable for high-resolution photo quality output.
  * * `"vga-640x480"`: Specifies capture settings suitable for VGA quality (640 x 480 pixel) video output.
  */
-export type CameraPreset = 'cif-352x288' | 'hd-1280x720' | 'hd-1920x1080' | 'hd-3840x2160' | 'high' | 'iframe-1280x720' | 'iframe-960x540' | 'input-priority' | 'low' | 'medium' | 'photo' | 'vga-640x480';
-//# sourceMappingURL=CameraPreset.d.ts.map
\ No newline at end of file
+export declare type CameraPreset = 'cif-352x288' | 'hd-1280x720' | 'hd-1920x1080' | 'hd-3840x2160' | 'high' | 'iframe-1280x720' | 'iframe-960x540' | 'input-priority' | 'low' | 'medium' | 'photo' | 'vga-640x480';
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map
deleted file mode 100644
index 799e2f0..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"CameraPreset.d.ts","sourceRoot":"","sources":["../../src/CameraPreset.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,MAAM,MAAM,YAAY,GACpB,aAAa,GACb,aAAa,GACb,cAAc,GACd,cAAc,GACd,MAAM,GACN,iBAAiB,GACjB,gBAAgB,GAChB,gBAAgB,GAChB,KAAK,GACL,QAAQ,GACR,OAAO,GACP,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
index 324af69..85f1585 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
@@ -11,7 +11,7 @@ export interface CameraProps extends ViewProps {
     /**
      * The Camera Device to use.
      *
-     * See the [Camera Devices](https://react-native-vision-camera.com/docs/guides/devices) section in the documentation for more information about Camera Devices.
+     * See the [Camera Devices](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices) section in the documentation for more information about Camera Devices.
      *
      * @example
      * ```tsx
@@ -29,7 +29,7 @@ export interface CameraProps extends ViewProps {
      */
     device: CameraDevice;
     /**
-     * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://react-native-vision-camera.com/docs/guides/lifecycle#the-isactive-prop) for more information.
+     * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://mrousavy.github.io/react-native-vision-camera/docs/guides/lifecycle#the-isactive-prop) for more information.
      *
      * This can be compared to a Video component, where `isActive` specifies whether the video is paused or not.
      *
@@ -37,17 +37,17 @@ export interface CameraProps extends ViewProps {
      */
     isActive: boolean;
     /**
-     * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://react-native-vision-camera.com/docs/guides/capturing#taking-photos))
+     * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing#taking-photos))
      */
     photo?: boolean;
     /**
-     * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
+     * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
      *
-     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
      */
     video?: boolean;
     /**
-     * Enables **audio capture** for video recordings (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
+     * Enables **audio capture** for video recordings (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
      */
     audio?: boolean;
     /**
@@ -73,7 +73,7 @@ export interface CameraProps extends ViewProps {
     /**
      * Enables or disables the native pinch to zoom gesture.
      *
-     * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://react-native-vision-camera.com/docs/guides/animated).
+     * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/animated).
      *
      * @default false
      */
@@ -163,9 +163,9 @@ export interface CameraProps extends ViewProps {
     /**
      * A worklet which will be called for every frame the Camera "sees". Throttle the Frame Processor's frame rate with {@linkcode frameProcessorFps}.
      *
-     * > See [the Frame Processors documentation](https://react-native-vision-camera.com/docs/guides/frame-processors) for more information
+     * > See [the Frame Processors documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors) for more information
      *
-     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
      *
      * @example
      * ```tsx
@@ -195,4 +195,3 @@ export interface CameraProps extends ViewProps {
      */
     frameProcessorFps?: number | 'auto';
 }
-//# sourceMappingURL=CameraProps.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map
deleted file mode 100644
index f1bb0ca..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"CameraProps.d.ts","sourceRoot":"","sources":["../../src/CameraProps.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,UAAU,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AAC3G,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAErC,MAAM,WAAW,mCAAmC;IAClD,IAAI,EAAE,oBAAoB,GAAG,sBAAsB,CAAC;IACpD,0BAA0B,EAAE,MAAM,CAAC;CACpC;AAED,MAAM,WAAW,WAAY,SAAQ,SAAS;IAC5C;;;;;;;;;;;;;;;;;;OAkBG;IACH,MAAM,EAAE,YAAY,CAAC;IACrB;;;;;;OAMG;IACH,QAAQ,EAAE,OAAO,CAAC;IAGlB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;;;OAIG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAIhB;;;;;;OAMG;IACH,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC;IACrB;;;;;;;;;;OAUG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IACd;;;;;;OAMG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAI5B;;OAEG;IACH,MAAM,CAAC,EAAE,YAAY,CAAC;IACtB;;OAEG;IACH,MAAM,CAAC,EAAE,kBAAkB,CAAC;IAC5B;;;;OAIG;IACH,GAAG,CAAC,EAAE,MAAM,CAAC;IACb;;;;OAIG;IACH,GAAG,CAAC,EAAE,OAAO,CAAC;IACd;;;;OAIG;IACH,aAAa,CAAC,EAAE,OAAO,CAAC;IACxB;;;;OAIG;IACH,UAAU,CAAC,EAAE,UAAU,CAAC;IACxB;;;;;OAKG;IACH,sBAAsB,CAAC,EAAE,sBAAsB,CAAC;IAGhD;;;;OAIG;IACH,eAAe,CAAC,EAAE,OAAO,CAAC;IAC1B;;;;;;;OAOG;IACH,kCAAkC,CAAC,EAAE,OAAO,CAAC;IAC7C;;;;;;;;;;OAUG;IACH,uBAAuB,CAAC,EAAE,OAAO,CAAC;IAClC;;OAEG;IACH,WAAW,CAAC,EAAE,UAAU,GAAG,oBAAoB,GAAG,eAAe,GAAG,gBAAgB,CAAC;IAGrF;;OAEG;IACH,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,kBAAkB,KAAK,IAAI,CAAC;IAC9C;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,IAAI,CAAC;IAC3B;;OAEG;IACH,8CAA8C,CAAC,EAAE,CAAC,UAAU,EAAE,mCAAmC,KAAK,IAAI,CAAC;IAC3G;;;;;;;;;;;;;;;;;OAiBG;IACH,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACxC;;;;;;;;;;;;;OAaG;IACH,iBAAiB,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;CAErC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
index 8386de1..5f9007b 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
@@ -46,4 +46,3 @@ export interface Frame {
      */
     close(): void;
 }
-//# sourceMappingURL=Frame.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map
deleted file mode 100644
index 47f1dd5..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Frame.d.ts","sourceRoot":"","sources":["../../src/Frame.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,KAAK;IACpB;;OAEG;IACH,OAAO,EAAE,OAAO,CAAC;IACjB;;OAEG;IACH,KAAK,EAAE,MAAM,CAAC;IACd;;OAEG;IACH,MAAM,EAAE,MAAM,CAAC;IACf;;OAEG;IACH,WAAW,EAAE,MAAM,CAAC;IACpB;;OAEG;IACH,WAAW,EAAE,MAAM,CAAC;IAEpB;;;;;;OAMG;IACH,QAAQ,IAAI,MAAM,CAAC;IACnB;;;;;;;;;;;;;OAaG;IACH,KAAK,IAAI,IAAI,CAAC;CACf"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts
deleted file mode 100644
index 31da8cb..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts
+++ /dev/null
@@ -1,5 +0,0 @@
-export declare const FrameProcessorContext: {
-    workletRuntime: any;
-    createWorklet: () => never;
-};
-//# sourceMappingURL=FrameProcessorContext.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map
deleted file mode 100644
index aca3abc..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"FrameProcessorContext.d.ts","sourceRoot":"","sources":["../../src/FrameProcessorContext.ts"],"names":[],"mappings":"AAgBA,eAAO,MAAM,qBAAqB;;;CAGjC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
index b0c1d21..007b7b7 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
@@ -126,4 +126,3 @@ export interface PhotoFile extends TemporaryFile {
         };
     };
 }
-//# sourceMappingURL=PhotoFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map
deleted file mode 100644
index 349b5f4..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"PhotoFile.d.ts","sourceRoot":"","sources":["../../src/PhotoFile.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAErD,MAAM,WAAW,gBAAgB;IAC/B;;;;;;;;;OASG;IACH,qBAAqB,CAAC,EAAE,SAAS,GAAG,UAAU,GAAG,OAAO,CAAC;IACzD;;;;OAIG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAC9B;;;;OAIG;IACH,yBAAyB,CAAC,EAAE,OAAO,CAAC;IACpC;;;;OAIG;IACH,uBAAuB,CAAC,EAAE,OAAO,CAAC;IAClC;;;;OAIG;IACH,8BAA8B,CAAC,EAAE,OAAO,CAAC;IACzC;;;;;;;;OAQG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;CACxB;AAED;;;;GAIG;AACH,MAAM,WAAW,SAAU,SAAQ,aAAa;IAC9C,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,MAAM,CAAC;IACf,UAAU,EAAE,OAAO,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACpC;;;;;OAKG;IACH,QAAQ,EAAE;QACR,WAAW,EAAE,MAAM,CAAC;QACpB;;WAEG;QACH,SAAS,EAAE,MAAM,CAAC;QAClB;;WAEG;QACH,QAAQ,EAAE,MAAM,CAAC;QACjB;;;;WAIG;QACH,cAAc,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACzC,QAAQ,EAAE;YACR,cAAc,EAAE,MAAM,CAAC;YACvB,QAAQ,EAAE,MAAM,CAAC;YACjB,IAAI,EAAE,MAAM,CAAC;YACb,QAAQ,EAAE,MAAM,CAAC;YACjB,WAAW,EAAE,MAAM,CAAC;YACpB;;eAEG;YACH,YAAY,CAAC,EAAE,MAAM,CAAC;YACtB,KAAK,EAAE,MAAM,CAAC;YACd,WAAW,EAAE,MAAM,CAAC;SACrB,CAAC;QACF,QAAQ,EAAE;YACR,gBAAgB,EAAE,MAAM,CAAC;YACzB,YAAY,EAAE,MAAM,CAAC;YACrB,OAAO,EAAE,MAAM,CAAC;YAChB,iBAAiB,EAAE,MAAM,EAAE,CAAC;YAC5B,iBAAiB,EAAE,MAAM,CAAC;YAC1B,UAAU,EAAE,MAAM,CAAC;YACnB,kBAAkB,EAAE,MAAM,CAAC;YAC3B,eAAe,EAAE,MAAM,CAAC;YACxB,YAAY,EAAE,MAAM,CAAC;YACrB,SAAS,EAAE,MAAM,CAAC;YAClB,SAAS,EAAE,MAAM,CAAC;YAClB,eAAe,EAAE,MAAM,CAAC;YACxB,iBAAiB,EAAE,MAAM,CAAC;YAC1B,aAAa,EAAE,MAAM,CAAC;YACtB,WAAW,EAAE,MAAM,EAAE,CAAC;YACtB,aAAa,EAAE,MAAM,CAAC;YACtB,mBAAmB,EAAE,MAAM,CAAC;YAC5B,WAAW,EAAE,MAAM,CAAC;YACpB,QAAQ,EAAE,MAAM,CAAC;YACjB,kBAAkB,EAAE,MAAM,CAAC;YAC3B,mBAAmB,EAAE,MAAM,CAAC;YAC5B,eAAe,EAAE,MAAM,CAAC;YACxB,eAAe,EAAE,MAAM,EAAE,CAAC;YAC1B,YAAY,EAAE,MAAM,CAAC;YACrB,iBAAiB,EAAE,MAAM,CAAC;YAC1B,kBAAkB,EAAE,MAAM,CAAC;YAC3B,WAAW,EAAE,MAAM,CAAC;YACpB,UAAU,EAAE,MAAM,CAAC;YACnB,KAAK,EAAE,MAAM,CAAC;YACd,eAAe,EAAE,MAAM,CAAC;YACxB,YAAY,EAAE,MAAM,CAAC;SACtB,CAAC;KACH,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
index a75cfc0..bb7da34 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
@@ -4,5 +4,4 @@
  * * `420f`: 420 YpCbCr 8 Bi-Planar Full Range
  * * `x420`: 420 YpCbCr 10 Bi-Planar Video Range
  */
-export type PixelFormat = '420f' | '420v' | 'x420';
-//# sourceMappingURL=PixelFormat.d.ts.map
\ No newline at end of file
+export declare type PixelFormat = '420f' | '420v' | 'x420';
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map
deleted file mode 100644
index b54164b..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"PixelFormat.d.ts","sourceRoot":"","sources":["../../src/PixelFormat.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
index 3459139..c724212 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
@@ -11,4 +11,3 @@ export interface Point {
      */
     y: number;
 }
-//# sourceMappingURL=Point.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map
deleted file mode 100644
index e2485b8..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Point.d.ts","sourceRoot":"","sources":["../../src/Point.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,KAAK;IACpB;;OAEG;IACH,CAAC,EAAE,MAAM,CAAC;IACV;;OAEG;IACH,CAAC,EAAE,MAAM,CAAC;CACX"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
index 2d3da19..5c39924 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
@@ -24,4 +24,3 @@ export interface TakeSnapshotOptions {
      */
     skipMetadata?: boolean;
 }
-//# sourceMappingURL=Snapshot.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map
deleted file mode 100644
index da509b3..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Snapshot.d.ts","sourceRoot":"","sources":["../../src/Snapshot.ts"],"names":[],"mappings":"AAAA,MAAM,WAAW,mBAAmB;IAClC;;;;;;OAMG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;;;OAIG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC;IAErB;;;;;;;;OAQG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;CACxB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
index 9e5d9c4..a74a918 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
@@ -11,4 +11,3 @@ export interface TemporaryFile {
      */
     path: string;
 }
-//# sourceMappingURL=TemporaryFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map
deleted file mode 100644
index 7d2ec37..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"TemporaryFile.d.ts","sourceRoot":"","sources":["../../src/TemporaryFile.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,aAAa;IAC5B;;;;;;OAMG;IACH,IAAI,EAAE,MAAM,CAAC;CACd"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
index 44968fc..da8aba0 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
@@ -1,7 +1,7 @@
 import type { CameraCaptureError } from './CameraError';
 import type { TemporaryFile } from './TemporaryFile';
-export type VideoFileType = 'mov' | 'avci' | 'm4v' | 'mp4';
-export type CameraVideoCodec = 'h264' | 'hevc' | 'hevc-alpha' | 'jpeg' | 'pro-res-4444' | 'pro-res-422' | 'pro-res-422-hq' | 'pro-res-422-lt' | 'pro-res-422-proxy';
+export declare type VideoFileType = 'mov' | 'avci' | 'm4v' | 'mp4';
+export declare type CameraVideoCodec = 'h264' | 'hevc' | 'hevc-alpha' | 'jpeg' | 'pro-res-4444' | 'pro-res-422' | 'pro-res-422-hq' | 'pro-res-422-lt' | 'pro-res-422-proxy';
 export interface RecordVideoOptions {
     /**
      * Set the video flash mode. Natively, this just enables the torch while recording.
@@ -40,4 +40,3 @@ export interface VideoFile extends TemporaryFile {
      */
     duration: number;
 }
-//# sourceMappingURL=VideoFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map
deleted file mode 100644
index 65acb0f..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"VideoFile.d.ts","sourceRoot":"","sources":["../../src/VideoFile.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAErD,MAAM,MAAM,aAAa,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;AAE3D,MAAM,MAAM,gBAAgB,GACxB,MAAM,GACN,MAAM,GACN,YAAY,GACZ,MAAM,GACN,cAAc,GACd,aAAa,GACb,gBAAgB,GAChB,gBAAgB,GAChB,mBAAmB,CAAC;AAExB,MAAM,WAAW,kBAAkB;IACjC;;OAEG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAC9B;;;OAGG;IACH,QAAQ,CAAC,EAAE,aAAa,CAAC;IACzB;;OAEG;IACH,gBAAgB,EAAE,CAAC,KAAK,EAAE,kBAAkB,KAAK,IAAI,CAAC;IACtD;;OAEG;IACH,mBAAmB,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC;IAChD;;;;;;OAMG;IACH,UAAU,CAAC,EAAE,gBAAgB,CAAC;CAC/B;AAED;;;;GAIG;AACH,MAAM,WAAW,SAAU,SAAQ,aAAa;IAC9C;;OAEG;IACH,QAAQ,EAAE,MAAM,CAAC;CAClB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
index 609ef57..b4809b8 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
@@ -4,4 +4,3 @@ import { ConfigPlugin } from '@expo/config-plugins';
  * This is used to disable frame processors if you don't need it for android.
  */
 export declare const withDisableFrameProcessorsAndroid: ConfigPlugin;
-//# sourceMappingURL=withDisableFrameProcessorsAndroid.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map
deleted file mode 100644
index d55f283..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"withDisableFrameProcessorsAndroid.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withDisableFrameProcessorsAndroid.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAwB,MAAM,sBAAsB,CAAC;AAE1E;;;GAGG;AACH,eAAO,MAAM,iCAAiC,EAAE,YAgB/C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
index 944505e..d1799bf 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
@@ -4,4 +4,3 @@ import { ConfigPlugin } from '@expo/config-plugins';
  * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)
  */
 export declare const withDisableFrameProcessorsIOS: ConfigPlugin;
-//# sourceMappingURL=withDisableFrameProcessorsIOS.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map
deleted file mode 100644
index 142dc4d..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"withDisableFrameProcessorsIOS.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withDisableFrameProcessorsIOS.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAkC,MAAM,sBAAsB,CAAC;AAEpF;;;GAGG;AACH,eAAO,MAAM,6BAA6B,EAAE,YAoB3C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
index 8f8c53f..e638b16 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
@@ -1,5 +1,5 @@
 import { ConfigPlugin } from '@expo/config-plugins';
-type Props = {
+declare type Props = {
     cameraPermissionText?: string;
     enableMicrophonePermission?: boolean;
     microphonePermissionText?: string;
@@ -7,4 +7,3 @@ type Props = {
 };
 declare const _default: ConfigPlugin<Props>;
 export default _default;
-//# sourceMappingURL=withVisionCamera.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map
deleted file mode 100644
index 3487303..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"withVisionCamera.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withVisionCamera.ts"],"names":[],"mappings":"AAAA,OAAO,EAA8B,YAAY,EAAuB,MAAM,sBAAsB,CAAC;AASrG,KAAK,KAAK,GAAG;IACX,oBAAoB,CAAC,EAAE,MAAM,CAAC;IAC9B,0BAA0B,CAAC,EAAE,OAAO,CAAC;IACrC,wBAAwB,CAAC,EAAE,MAAM,CAAC;IAClC,sBAAsB,CAAC,EAAE,OAAO,CAAC;CAClC,CAAC;;AAsBF,wBAAsE"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
index ad12c46..d0febeb 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
@@ -1,6 +1,6 @@
 import type { CameraPosition } from '../CameraPosition';
 import { CameraDevice, LogicalCameraDeviceType, PhysicalCameraDeviceType } from '../CameraDevice';
-export type CameraDevices = {
+export declare type CameraDevices = {
     [key in CameraPosition]: CameraDevice | undefined;
 };
 /**
@@ -30,4 +30,3 @@ export declare function useCameraDevices(): CameraDevices;
  * ```
  */
 export declare function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;
-//# sourceMappingURL=useCameraDevices.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map
deleted file mode 100644
index bfb1749..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"useCameraDevices.d.ts","sourceRoot":"","sources":["../../../src/hooks/useCameraDevices.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGxD,OAAO,EAAE,YAAY,EAAE,uBAAuB,EAA4B,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE5H,MAAM,MAAM,aAAa,GAAG;KACzB,GAAG,IAAI,cAAc,GAAG,YAAY,GAAG,SAAS;CAClD,CAAC;AAQF;;;;;;;;;;;GAWG;AACH,wBAAgB,gBAAgB,IAAI,aAAa,CAAC;AAElD;;;;;;;;;;;;GAYG;AACH,wBAAgB,gBAAgB,CAAC,UAAU,EAAE,wBAAwB,GAAG,uBAAuB,GAAG,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
index 1020363..dad9124 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
@@ -9,4 +9,3 @@ import type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';
  * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.
  */
 export declare function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined;
-//# sourceMappingURL=useCameraFormat.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map
deleted file mode 100644
index 5c381ff..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"useCameraFormat.d.ts","sourceRoot":"","sources":["../../../src/hooks/useCameraFormat.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAGxE;;;;;;;;GAQG;AACH,wBAAgB,eAAe,CAAC,MAAM,CAAC,EAAE,YAAY,GAAG,kBAAkB,GAAG,SAAS,CAErF"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
index 4825dd3..3983383 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
@@ -1,8 +1,8 @@
 import { DependencyList } from 'react';
 import type { Frame } from '../Frame';
-type FrameProcessor = (frame: Frame) => void;
+declare type FrameProcessor = (frame: Frame) => void;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -20,4 +20,3 @@ type FrameProcessor = (frame: Frame) => void;
  */
 export declare function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor;
 export {};
-//# sourceMappingURL=useFrameProcessor.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map
deleted file mode 100644
index 1fdce07..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"useFrameProcessor.d.ts","sourceRoot":"","sources":["../../../src/hooks/useFrameProcessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,MAAM,OAAO,CAAC;AACpD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEtC,KAAK,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;AAE7C;;;;;;;;;;;;;;;;GAgBG;AACH,wBAAgB,iBAAiB,CAAC,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,cAAc,GAAG,cAAc,CAM9G"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
index 40e1d02..86fcbd9 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
@@ -15,4 +15,3 @@ export * from './hooks/useCameraDevices';
 export * from './hooks/useCameraFormat';
 export * from './hooks/useFrameProcessor';
 export * from './utils/FormatFilter';
-//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map
deleted file mode 100644
index 47c121c..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAU,CAAC;AACzB,cAAc,gBAAgB,CAAC;AAC/B,cAAc,eAAe,CAAC;AAC9B,cAAc,kBAAkB,CAAC;AACjC,cAAc,gBAAgB,CAAC;AAC/B,cAAc,eAAe,CAAC;AAC9B,cAAc,SAAS,CAAC;AACxB,cAAc,eAAe,CAAC;AAC9B,cAAc,aAAa,CAAC;AAC5B,cAAc,SAAS,CAAC;AACxB,cAAc,YAAY,CAAC;AAC3B,cAAc,iBAAiB,CAAC;AAChC,cAAc,aAAa,CAAC;AAE5B,cAAc,0BAA0B,CAAC;AACzC,cAAc,yBAAyB,CAAC;AACxC,cAAc,2BAA2B,CAAC;AAE1C,cAAc,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
index 55597e0..4bc1dd1 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
@@ -33,4 +33,3 @@ export declare const sortFormats: (left: CameraDeviceFormat, right: CameraDevice
  * @method
  */
 export declare const frameRateIncluded: (range: FrameRateRange, fps: number) => boolean;
-//# sourceMappingURL=FormatFilter.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map
deleted file mode 100644
index 2d420c4..0000000
--- a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"FormatFilter.d.ts","sourceRoot":"","sources":["../../../src/utils/FormatFilter.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAExF;;;;;;;;;;;;;GAaG;AACH,eAAO,MAAM,WAAW,SAAU,YAAY,SAAS,YAAY,KAAG,MAmBrE,CAAC;AAQF;;;;GAIG;AACH,eAAO,MAAM,WAAW,SAAU,kBAAkB,SAAS,kBAAkB,KAAG,MAqBjF,CAAC;AAEF;;;;;;;;;;;GAWG;AACH,eAAO,MAAM,iBAAiB,UAAW,cAAc,OAAO,MAAM,KAAG,OAAiE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/package.json b/node_modules/react-native-vision-camera/package.json
index f3aef54..d63e42f 100644
--- a/node_modules/react-native-vision-camera/package.json
+++ b/node_modules/react-native-vision-camera/package.json
@@ -89,7 +89,7 @@
   },
   "peerDependencies": {
     "react": "*",
-    "react-native": "*"
+    "react-native": "0.72.0-rc.6"
   },
   "prettier": {
     "bracketSpacing": true,
@@ -160,5 +160,10 @@
         }
       ]
     ]
+  },
+  "codegenConfig": {
+    "name": "CameraNativeComponentSpec",
+    "type": "all",
+    "jsSrcsDir": "./src/specs"
   }
 }
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/src/Camera.tsx b/node_modules/react-native-vision-camera/src/Camera.tsx
index df2480c..3e811a2 100644
--- a/node_modules/react-native-vision-camera/src/Camera.tsx
+++ b/node_modules/react-native-vision-camera/src/Camera.tsx
@@ -1,15 +1,17 @@
 import React from 'react';
-import { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';
-import type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';
+import { NativeSyntheticEvent, NativeMethods, Platform } from 'react-native';
+import type { FrameProcessorPerformanceSuggestion } from '.';
 import type { CameraDevice } from './CameraDevice';
 import type { ErrorWithCause } from './CameraError';
 import { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';
+import CameraNativeComponent from './specs/CameraNativeComponent';
 import type { CameraProps } from './CameraProps';
 import type { Frame } from './Frame';
 import type { PhotoFile, TakePhotoOptions } from './PhotoFile';
 import type { Point } from './Point';
 import type { TakeSnapshotOptions } from './Snapshot';
-import type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';
+import type { RecordVideoOptions, VideoFile } from './VideoFile';
+import CameraTurboModule from './specs/NativeCameraModule';
 import { FrameProcessorContext } from './FrameProcessorContext';
 
 //#region Types
@@ -21,26 +23,9 @@ interface OnErrorEvent {
   message: string;
   cause?: ErrorWithCause;
 }
-type NativeCameraViewProps = Omit<
-  CameraProps,
-  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'
-> & {
-  cameraId: string;
-  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'
-  enableFrameProcessor: boolean;
-  onInitialized?: (event: NativeSyntheticEvent<void>) => void;
-  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;
-  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;
-  onViewReady: () => void;
-};
-type RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;
+type RefType = React.Component<CameraProps> & Readonly<NativeMethods>;
 //#endregion
 
-// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'
-// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-const CameraModule = NativeModules.CameraView;
-if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?");
-
 //#region Camera Component
 /**
  * ### A powerful `<Camera>` component.
@@ -92,16 +77,15 @@ export class Camera extends React.PureComponent<CameraProps> {
     this.lastFrameProcessor = undefined;
   }
 
-  private get handle(): number | null {
-    const nodeHandle = findNodeHandle(this.ref.current);
-    if (nodeHandle == null || nodeHandle === -1) {
+  private get handle(): RefType {
+    if (this.ref.current == null) {
       throw new CameraRuntimeError(
         'system/view-not-found',
         "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?",
       );
     }
 
-    return nodeHandle;
+    return this.ref.current;
   }
 
   //#region View-specific functions (UIViewManager)
@@ -118,9 +102,9 @@ export class Camera extends React.PureComponent<CameraProps> {
    * })
    * ```
    */
-  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {
+  public async takePhoto(options: TakePhotoOptions = {}): Promise<PhotoFile> {
     try {
-      return await CameraModule.takePhoto(this.handle, options ?? {});
+      return await CameraTurboModule?.takePhoto(options);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -142,12 +126,12 @@ export class Camera extends React.PureComponent<CameraProps> {
    * })
    * ```
    */
-  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {
+  public async takeSnapshot(options: TakeSnapshotOptions = {}): Promise<PhotoFile> {
     if (Platform.OS !== 'android')
       throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);
 
     try {
-      return await CameraModule.takeSnapshot(this.handle, options ?? {});
+      return await CameraTurboModule?.takeSnapshot(options);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -175,7 +159,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    * }, 5000)
    * ```
    */
-  public startRecording(options: RecordVideoOptions): void {
+  public async startRecording(options: RecordVideoOptions): Promise<void> {
     const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;
     if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')
       throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
@@ -184,70 +168,13 @@ export class Camera extends React.PureComponent<CameraProps> {
       if (error != null) return onRecordingError(error);
       if (video != null) return onRecordingFinished(video);
     };
-    // TODO: Use TurboModules to either make this a sync invokation, or make it async.
-    try {
-      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
 
-  /**
-   * Pauses the current video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording()
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * const video = await camera.current.stopRecording()
-   * ```
-   */
-  public async pauseRecording(): Promise<void> {
     try {
-      return await CameraModule.pauseRecording(this.handle);
+      return await CameraTurboModule?.startRecording({ ...passThroughOptions }, onRecordCallback);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
-
-  /**
-   * Resumes a currently paused video recording.
-   *
-   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error
-   *
-   * @example
-   * ```ts
-   * // Start
-   * await camera.current.startRecording()
-   * await timeout(1000)
-   * // Pause
-   * await camera.current.pauseRecording()
-   * await timeout(500)
-   * // Resume
-   * await camera.current.resumeRecording()
-   * await timeout(2000)
-   * // Stop
-   * const video = await camera.current.stopRecording()
-   * ```
-   */
-  public async resumeRecording(): Promise<void> {
-    try {
-      return await CameraModule.resumeRecording(this.handle);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-
   /**
    * Stop the current video recording.
    *
@@ -263,7 +190,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public async stopRecording(): Promise<void> {
     try {
-      return await CameraModule.stopRecording(this.handle);
+      return await CameraTurboModule?.stopRecording();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -289,32 +216,13 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public async focus(point: Point): Promise<void> {
     try {
-      return await CameraModule.focus(this.handle, point);
+      return await CameraTurboModule?.focus(point);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
   //#endregion
 
-  /**
-   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).
-   * @example
-   * ```ts
-   * const codecs = await camera.current.getAvailableVideoCodecs("mp4")
-   * ```
-   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error
-   * @platform iOS
-   */
-  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {
-    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.
-
-    try {
-      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);
-    } catch (e) {
-      throw tryParseNativeCameraError(e);
-    }
-  }
-
   //#region Static Functions (NativeModule)
   /**
    * Get a list of all available camera devices on the current phone.
@@ -333,7 +241,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {
     try {
-      return await CameraModule.getAvailableCameraDevices();
+      return await CameraTurboModule?.getAvailableCameraDevices();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -348,7 +256,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {
     try {
-      return await CameraModule.getCameraPermissionStatus();
+      return await CameraTurboModule?.getCameraPermissionStatus();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -363,7 +271,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {
     try {
-      return await CameraModule.getMicrophonePermissionStatus();
+      return await CameraTurboModule?.getMicrophonePermissionStatus();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -378,7 +286,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {
     try {
-      return await CameraModule.requestCameraPermission();
+      return await CameraTurboModule?.requestCameraPermission();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -393,7 +301,7 @@ export class Camera extends React.PureComponent<CameraProps> {
    */
   public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {
     try {
-      return await CameraModule.requestMicrophonePermission();
+      return await CameraTurboModule?.requestMicrophonePermission();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
@@ -436,12 +344,14 @@ export class Camera extends React.PureComponent<CameraProps> {
 
   private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {
     this.assertFrameProcessorsEnabled();
+    // TODO: Use native Ref (HostComponent) handle?
     // @ts-expect-error JSI functions aren't typed
     global.setFrameProcessor(this.handle, FrameProcessorContext.createWorklet(frameProcessor), FrameProcessorContext.workletRuntime);
   }
 
   private unsetFrameProcessor(): void {
     this.assertFrameProcessorsEnabled();
+    // TODO: Use native Ref (HostComponent) handle?
     // @ts-expect-error JSI functions aren't typed
     global.unsetFrameProcessor(this.handle);
   }
@@ -467,21 +377,31 @@ export class Camera extends React.PureComponent<CameraProps> {
       this.lastFrameProcessor = frameProcessor;
     }
   }
+
+  /** @internal */
+  componentWillUnmount(): void {
+    if (!this.isNativeViewMounted) return;
+    if (this.lastFrameProcessor != null || this.props.frameProcessor != null) {
+      this.unsetFrameProcessor();
+      this.lastFrameProcessor = undefined;
+    }
+  }
   //#endregion
 
   /** @internal */
   public render(): React.ReactNode {
     // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
     const { device, frameProcessor, frameProcessorFps, ...props } = this.props;
+    console.log('IS ACTIVE', this.props.preset);
     return (
-      <NativeCameraView
+      <CameraNativeComponent
         {...props}
         frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}
         cameraId={device.id}
         ref={this.ref}
         onViewReady={this.onViewReady}
         onInitialized={this.onInitialized}
-        onError={this.onError}
+        // onError={this.onError}
         onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}
         enableFrameProcessor={frameProcessor != null}
       />
@@ -489,10 +409,3 @@ export class Camera extends React.PureComponent<CameraProps> {
   }
 }
 //#endregion
-
-// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'
-const NativeCameraView = requireNativeComponent<NativeCameraViewProps>(
-  'CameraView',
-  // @ts-expect-error because the type declarations are kinda wrong, no?
-  Camera,
-);
diff --git a/node_modules/react-native-vision-camera/src/hooks/useCameraDevices.ts b/node_modules/react-native-vision-camera/src/hooks/useCameraDevices.ts
index 1b6297f..bd0ab95 100644
--- a/node_modules/react-native-vision-camera/src/hooks/useCameraDevices.ts
+++ b/node_modules/react-native-vision-camera/src/hooks/useCameraDevices.ts
@@ -45,14 +45,11 @@ export function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalC
 
 export function useCameraDevices(deviceType?: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices {
   const [cameraDevices, setCameraDevices] = useState<CameraDevices>(DefaultCameraDevices);
-
   useEffect(() => {
     let isMounted = true;
-
     const loadDevice = async (): Promise<void> => {
       let devices = await Camera.getAvailableCameraDevices();
       if (!isMounted) return;
-
       devices = devices.sort(sortDevices);
       if (deviceType != null) {
         devices = devices.filter((d) => {
@@ -68,11 +65,9 @@ export function useCameraDevices(deviceType?: PhysicalCameraDeviceType | Logical
       });
     };
     loadDevice();
-
     return () => {
       isMounted = false;
     };
   }, [deviceType]);
-
   return cameraDevices;
 }
diff --git a/node_modules/react-native-vision-camera/src/specs/CameraNativeComponent.ts b/node_modules/react-native-vision-camera/src/specs/CameraNativeComponent.ts
new file mode 100644
index 0000000..79b992b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/src/specs/CameraNativeComponent.ts
@@ -0,0 +1,60 @@
+import type { HostComponent, ViewProps } from 'react-native';
+import type { DirectEventHandler, Double, Int32, WithDefault } from 'react-native/Libraries/Types/CodegenTypes';
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+
+export type VisionCameraComponentType = HostComponent<NativeProps>;
+
+export interface NativeProps extends ViewProps {
+  cameraId: string;
+  frameProcessorFps?: Double; // native cannot use number | string, so we use '-1' for 'auto'
+  enableFrameProcessor: boolean;
+  isActive: boolean;
+  photo?: boolean;
+  video?: boolean;
+  audio?: boolean;
+  torch?: string;
+  zoom?: Double;
+  enableZoomGesture?: boolean;
+  preset?: string;
+  format?: Readonly<{
+    photoHeight: Double;
+    photoWidth: Double;
+    videoHeight: Double;
+    videoWidth: Double;
+    isHighestPhotoQualitySupported?: boolean;
+    maxISO: Double;
+    minISO: Double;
+    fieldOfView: Double;
+    maxZoom: Double;
+    colorSpaces: string[];
+    supportsVideoHDR: boolean;
+    supportsPhotoHDR: boolean;
+    frameRateRanges: ReadonlyArray<{
+      minFrameRate: Int32;
+      maxFrameRate: Int32;
+    }>;
+    autoFocusSystem: string;
+    videoStabilizationModes: string[];
+    pixelFormat: string;
+  }>;
+  fps?: Int32;
+  hdr?: boolean;
+  lowLightBoost?: boolean;
+  colorSpace?: string;
+  videoStabilizationMode?: string;
+  enableDepthData?: boolean;
+  enablePortraitEffectsMatteDelivery?: boolean;
+  enableHighQualityPhotos?: boolean;
+  orientation?: string;
+  onInitialized?: DirectEventHandler<Readonly<{}>>;
+  onError?: DirectEventHandler<
+    Readonly<{
+      code: string;
+      message: string;
+      cause: Readonly<{ code: string; domain: string; message: string; details: string }>;
+    }>
+  >;
+  onViewReady: DirectEventHandler<Readonly<{}>>;
+}
+
+export default codegenNativeComponent<NativeProps>('CameraView');
diff --git a/node_modules/react-native-vision-camera/src/specs/NativeCameraModule.ts b/node_modules/react-native-vision-camera/src/specs/NativeCameraModule.ts
new file mode 100644
index 0000000..b2c930a
--- /dev/null
+++ b/node_modules/react-native-vision-camera/src/specs/NativeCameraModule.ts
@@ -0,0 +1,106 @@
+import type { TurboModule } from 'react-native';
+import { TurboModuleRegistry } from 'react-native';
+import type { Double, Int32 } from 'react-native/Libraries/Types/CodegenTypes';
+
+export interface Spec extends TurboModule {
+  takePhoto(
+    options?: Readonly<{
+      qualityPrioritization?: string;
+      flash?: string;
+      enableAutoRedEyeReduction?: boolean;
+      enableAutoStabilization?: boolean;
+      enableAutoDistortionCorrection?: boolean;
+      skipMetadata?: boolean;
+    }>,
+  ): Promise<
+    Readonly<{
+      path: string;
+      width: Double;
+      height: Double;
+      isRawPhoto: boolean;
+    }>
+  >;
+  takeSnapshot(
+    options?: Readonly<{
+      quality?: number;
+      flash?: string;
+      skipMetadata?: boolean;
+    }>,
+  ): Promise<
+    Readonly<{
+      path: string;
+      width: Double;
+      height: Double;
+      isRawPhoto: boolean;
+    }>
+  >;
+  startRecording(
+    options?: Readonly<{
+      flash?: string;
+      fileType?: string;
+      videoCodec?: string;
+    }>,
+    onRecordCallback?: (
+      video?: Readonly<{
+        path: string;
+        duration: number;
+      }>,
+      error?: Readonly<{ code: string; message: string; cause?: string }>,
+    ) => void,
+  ): void;
+  pauseRecording(): Promise<void>;
+  resumeRecording(): Promise<void>;
+  stopRecording(): Promise<void>;
+  focus(point: Readonly<{ x: Double; y: Double }>): Promise<void>;
+  getAvailableVideoCodecs(fileType?: string): Promise<ReadonlyArray<string>>;
+  getAvailableCameraDevices(): Promise<
+    ReadonlyArray<
+      Readonly<{
+        id: string;
+        devices: ReadonlyArray<string>;
+        position: string;
+        name: string;
+        hasFlash: boolean;
+        hasTorch: boolean;
+        isMultiCam: boolean;
+        minZoom: Double;
+        maxZoom: Double;
+        neutralZoom: Double;
+        formats: ReadonlyArray<
+          Readonly<{
+            photoHeight: Double;
+            photoWidth: Double;
+            videoHeight: Double;
+            videoWidth: Double;
+            isHighestPhotoQualitySupported?: boolean;
+            maxISO: Double;
+            minISO: Double;
+            fieldOfView: Double;
+            maxZoom: Double;
+            colorSpaces: string[];
+            supportsVideoHDR: boolean;
+            supportsPhotoHDR: boolean;
+            frameRateRanges: ReadonlyArray<{
+              minFrameRate: Int32;
+              maxFrameRate: Int32;
+            }>;
+            autoFocusSystem: string;
+            videoStabilizationModes: string[];
+            pixelFormat: string;
+          }>
+        >;
+        supportsParallelVideoProcessing: boolean;
+        supportsLowLightBoost: boolean;
+        supportsDepthCapture: boolean;
+        supportsRawCapture: boolean;
+        supportsFocus: boolean;
+      }>
+    >
+  >;
+  getCameraPermissionStatus(): Promise<string>;
+  getMicrophonePermissionStatus(): Promise<string>;
+  requestCameraPermission(): Promise<string>;
+  requestMicrophonePermission(): Promise<string>;
+}
+
+export default TurboModuleRegistry.get<Spec>('CameraModule') as Spec | null;
