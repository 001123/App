diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
index 9eed184..552a5e7 100644
--- a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.mm
@@ -14,7 +14,7 @@
 #import <React/RCTUtils.h>
 #import "RNDeviceInfo.h"
 #import "DeviceUID.h"
-#import <DeviceCheck/DeviceCheck.h>
+//#import <DeviceCheck/DeviceCheck.h>
 #import "EnvironmentUtil.h"
 #import "RNDeviceInfoHelper.h"
 
@@ -407,21 +407,22 @@ - (BOOL) isTablet {
             return;
         }
 
-        DCDevice *device = DCDevice.currentDevice;
-
-        if ([device isSupported]) {
-            [DCDevice.currentDevice generateTokenWithCompletionHandler:^(NSData * _Nullable token, NSError * _Nullable error) {
-                if (error) {
-                    reject(@"ERROR GENERATING TOKEN", error.localizedDescription, error);
-                    return;
-                }
-
-                resolve([token base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed]);
-            }];
-        } else {
-            reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
-            return;
-        }
+        reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
+//        DCDevice *device = DCDevice.currentDevice;
+//
+//        if ([device isSupported]) {
+//            [DCDevice.currentDevice generateTokenWithCompletionHandler:^(NSData * _Nullable token, NSError * _Nullable error) {
+//                if (error) {
+//                    reject(@"ERROR GENERATING TOKEN", error.localizedDescription, error);
+//                    return;
+//                }
+//
+//                resolve([token base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed]);
+//            }];
+//        } else {
+//            reject(@"NOT SUPPORTED", @"Device check is not supported by this device", nil);
+//            return;
+//        }
     } else {
         reject(@"NOT AVAILABLE", @"Device check is only available for iOS > 11", nil);
         return;
